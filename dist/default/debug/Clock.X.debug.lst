

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 27 14:17:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 05/05/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F67K40 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  001576                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _old_tz_size
   112  001576  0020               	dw	32
   113                           
   114                           ;initializer for _old_tz
   115  001578  80                 	db	low _old_tz_buf
   116  001579  00                 	db	high _old_tz_buf
   117                           
   118                           	psect	smallconst
   119  000E00                     __psmallconst:
   120                           	callstack 0
   121  000E00  00                 	db	0
   122  000E01                     ___month_to_secs@secs_through_month:
   123                           	callstack 0
   124  000E01  0000               	dw	0
   125  000E03  0000               	dw	0
   126  000E05  DE80               	dw	56960
   127  000E07  0028               	dw	40
   128  000E09  C880               	dw	51328
   129  000E0B  004D               	dw	77
   130  000E0D  A700               	dw	42752
   131  000E0F  0076               	dw	118
   132  000E11  3400               	dw	13312
   133  000E13  009E               	dw	158
   134  000E15  1280               	dw	4736
   135  000E17  00C7               	dw	199
   136  000E19  9F80               	dw	40832
   137  000E1B  00EE               	dw	238
   138  000E1D  7E00               	dw	32256
   139  000E1F  0117               	dw	279
   140  000E21  5C80               	dw	23680
   141  000E23  0140               	dw	320
   142  000E25  E980               	dw	59776
   143  000E27  0167               	dw	359
   144  000E29  C800               	dw	51200
   145  000E2B  0190               	dw	400
   146  000E2D  5500               	dw	21760
   147  000E2F  01B8               	dw	440
   148  000E31                     __end_of___month_to_secs@secs_through_month:
   149                           	callstack 0
   150  000E31                     _fsmStateTable:
   151                           	callstack 0
   152  000E31  08                 	db	low _do_I2C_IDLE
   153  000E32  15                 	db	high _do_I2C_IDLE
   154  000E33  00                 	db	low (_do_I2C_IDLE shr (0+16))
   155  000E34  E2                 	db	low _do_I2C_SEND_ADR_READ
   156  000E35  14                 	db	high _do_I2C_SEND_ADR_READ
   157  000E36  00                 	db	low (_do_I2C_SEND_ADR_READ shr (0+16))
   158  000E37  D4                 	db	low _do_I2C_SEND_ADR_WRITE
   159  000E38  14                 	db	high _do_I2C_SEND_ADR_WRITE
   160  000E39  00                 	db	low (_do_I2C_SEND_ADR_WRITE shr (0+16))
   161  000E3A  36                 	db	low _do_I2C_TX
   162  000E3B  0F                 	db	high _do_I2C_TX
   163  000E3C  00                 	db	low (_do_I2C_TX shr (0+16))
   164  000E3D  F8                 	db	low _do_I2C_RX
   165  000E3E  0F                 	db	high _do_I2C_RX
   166  000E3F  00                 	db	low (_do_I2C_RX shr (0+16))
   167  000E40  FE                 	db	low _do_I2C_RCEN
   168  000E41  14                 	db	high _do_I2C_RCEN
   169  000E42  00                 	db	low (_do_I2C_RCEN shr (0+16))
   170  000E43  26                 	db	low _do_I2C_TX_EMPTY
   171  000E44  11                 	db	high _do_I2C_TX_EMPTY
   172  000E45  00                 	db	low (_do_I2C_TX_EMPTY shr (0+16))
   173  000E46  42                 	db	low _do_I2C_SEND_RESTART_READ
   174  000E47  15                 	db	high _do_I2C_SEND_RESTART_READ
   175  000E48  00                 	db	low (_do_I2C_SEND_RESTART_READ shr (0+16))
   176  000E49  3A                 	db	low _do_I2C_SEND_RESTART_WRITE
   177  000E4A  15                 	db	high _do_I2C_SEND_RESTART_WRITE
   178  000E4B  00                 	db	low (_do_I2C_SEND_RESTART_WRITE shr (0+16))
   179  000E4C  32                 	db	low _do_I2C_SEND_RESTART
   180  000E4D  15                 	db	high _do_I2C_SEND_RESTART
   181  000E4E  00                 	db	low (_do_I2C_SEND_RESTART shr (0+16))
   182  000E4F  2A                 	db	low _do_I2C_SEND_STOP
   183  000E50  15                 	db	high _do_I2C_SEND_STOP
   184  000E51  00                 	db	low (_do_I2C_SEND_STOP shr (0+16))
   185  000E52  22                 	db	low _do_I2C_DO_ACK
   186  000E53  15                 	db	high _do_I2C_DO_ACK
   187  000E54  00                 	db	low (_do_I2C_DO_ACK shr (0+16))
   188  000E55  1A                 	db	low _do_I2C_DO_NACK_STOP
   189  000E56  15                 	db	high _do_I2C_DO_NACK_STOP
   190  000E57  00                 	db	low (_do_I2C_DO_NACK_STOP shr (0+16))
   191  000E58  12                 	db	low _do_I2C_DO_NACK_RESTART
   192  000E59  15                 	db	high _do_I2C_DO_NACK_RESTART
   193  000E5A  00                 	db	low (_do_I2C_DO_NACK_RESTART shr (0+16))
   194  000E5B  F0                 	db	low _do_I2C_RESET
   195  000E5C  14                 	db	high _do_I2C_RESET
   196  000E5D  00                 	db	low (_do_I2C_RESET shr (0+16))
   197  000E5E  A6                 	db	low _do_I2C_DO_ADDRESS_NACK
   198  000E5F  11                 	db	high _do_I2C_DO_ADDRESS_NACK
   199  000E60  00                 	db	low (_do_I2C_DO_ADDRESS_NACK shr (0+16))
   200  000E61                     __end_of_fsmStateTable:
   201                           	callstack 0
   202  000E61                     ___secs_to_tm@days_in_month:
   203                           	callstack 0
   204  000E61  1F                 	db	31
   205  000E62  1E                 	db	30
   206  000E63  1F                 	db	31
   207  000E64  1E                 	db	30
   208  000E65  1F                 	db	31
   209  000E66  1F                 	db	31
   210  000E67  1E                 	db	30
   211  000E68  1F                 	db	31
   212  000E69  1E                 	db	30
   213  000E6A  1F                 	db	31
   214  000E6B  1F                 	db	31
   215  000E6C  1D                 	db	29
   216  000E6D                     __end_of___secs_to_tm@days_in_month:
   217                           	callstack 0
   218  000E6D                     ___gmt:
   219                           	callstack 0
   220  000E6D  47                 	db	71
   221  000E6E  4D                 	db	77
   222  000E6F  54                 	db	84
   223  000E70  00                 	db	0
   224  000E71                     __end_of___gmt:
   225                           	callstack 0
   226  0000                     _T0CKIPPS	set	3572
   227  0000                     _PIR3bits	set	3638
   228  0000                     _PIE3bits	set	3628
   229  0000                     _PIR0bits	set	3635
   230  0000                     _SSP1DATPPS	set	3610
   231  0000                     _RC5PPS	set	3687
   232  0000                     _RC3PPS	set	3685
   233  0000                     _SSP1CLKPPS	set	3609
   234  0000                     _INLVLH	set	3773
   235  0000                     _INLVLG	set	3768
   236  0000                     _INLVLF	set	3760
   237  0000                     _INLVLE	set	3755
   238  0000                     _INLVLD	set	3747
   239  0000                     _INLVLC	set	3742
   240  0000                     _INLVLB	set	3734
   241  0000                     _INLVLA	set	3726
   242  0000                     _SLRCONH	set	3774
   243  0000                     _SLRCONG	set	3769
   244  0000                     _SLRCONF	set	3761
   245  0000                     _SLRCONE	set	3756
   246  0000                     _SLRCOND	set	3748
   247  0000                     _SLRCONC	set	3743
   248  0000                     _SLRCONB	set	3735
   249  0000                     _SLRCONA	set	3727
   250  0000                     _ODCOND	set	3749
   251  0000                     _ODCONC	set	3744
   252  0000                     _ODCONH	set	3775
   253  0000                     _ODCONB	set	3736
   254  0000                     _ODCONG	set	3770
   255  0000                     _ODCONA	set	3728
   256  0000                     _ODCONF	set	3762
   257  0000                     _ODCONE	set	3757
   258  0000                     _WPUH	set	3776
   259  0000                     _WPUC	set	3745
   260  0000                     _WPUA	set	3729
   261  0000                     _WPUG	set	3771
   262  0000                     _WPUB	set	3737
   263  0000                     _WPUE	set	3758
   264  0000                     _WPUF	set	3763
   265  0000                     _WPUD	set	3750
   266  0000                     _ANSELA	set	3730
   267  0000                     _ANSELF	set	3764
   268  0000                     _ANSELG	set	3772
   269  0000                     _ANSELE	set	3759
   270  0000                     _ANSELB	set	3738
   271  0000                     _ANSELD	set	3751
   272  0000                     _PMD5	set	3665
   273  0000                     _PMD4	set	3664
   274  0000                     _PMD3	set	3663
   275  0000                     _PMD2	set	3662
   276  0000                     _PMD1	set	3661
   277  0000                     _PMD0	set	3660
   278  0000                     _OSCTUNE	set	3656
   279  0000                     _OSCFRQ	set	3657
   280  0000                     _OSCEN	set	3655
   281  0000                     _OSCCON3	set	3653
   282  0000                     _OSCCON1	set	3651
   283  0000                     _SSP1STATbits	set	3988
   284  0000                     _SSP1MSK	set	3987
   285  0000                     _SSP1BUF	set	3985
   286  0000                     _SSP1CON2bits	set	3990
   287  0000                     _SSP1ADD	set	3986
   288  0000                     _SSP1CON2	set	3990
   289  0000                     _SSP1CON1	set	3989
   290  0000                     _SSP1STAT	set	3988
   291  0000                     _SSP1CON1bits	set	3989
   292  0000                     _INTCONbits	set	4082
   293  0000                     _T0CON0bits	set	4053
   294  0000                     _T0CON0	set	4053
   295  0000                     _TMR0L	set	4051
   296  0000                     _TMR0H	set	4052
   297  0000                     _T0CON1	set	4054
   298  0000                     _LATDbits	set	3964
   299  0000                     _TRISD	set	3972
   300  0000                     _TRISC	set	3971
   301  0000                     _TRISH	set	3976
   302  0000                     _TRISB	set	3970
   303  0000                     _TRISG	set	3975
   304  0000                     _TRISA	set	3969
   305  0000                     _TRISF	set	3974
   306  0000                     _TRISE	set	3973
   307  0000                     _LATH	set	3968
   308  0000                     _LATC	set	3963
   309  0000                     _LATG	set	3967
   310  0000                     _LATB	set	3962
   311  0000                     _LATF	set	3966
   312  0000                     _LATA	set	3961
   313  0000                     _LATD	set	3964
   314  0000                     _LATE	set	3965
   315  000E71  00                 	db	0
   316  000E72  00                 	db	0	; dummy byte at the end
   317  0000                     
   318                           ; #config settings
   319                           
   320                           	psect	cinit
   321  001306                     __pcinit:
   322                           	callstack 0
   323  001306                     start_initialization:
   324                           	callstack 0
   325  001306                     __initialization:
   326                           	callstack 0
   327                           
   328                           ; Initialize objects allocated to COMRAM (4 bytes)
   329                           ; load TBLPTR registers with __pidataCOMRAM
   330  001306  0E76               	movlw	low __pidataCOMRAM
   331  001308  6EF6               	movwf	tblptrl,c
   332  00130A  0E15               	movlw	high __pidataCOMRAM
   333  00130C  6EF7               	movwf	tblptrh,c
   334  00130E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   335  001310  6EF8               	movwf	tblptru,c
   336  001312  EE00  F05A         	lfsr	0,__pdataCOMRAM
   337  001316  EE10 F004          	lfsr	1,4
   338  00131A                     copy_data0:
   339  00131A  0009               	tblrd		*+
   340  00131C  CFF5 FFEE          	movff	tablat,postinc0
   341  001320  50E5               	movf	postdec1,w,c
   342  001322  50E1               	movf	fsr1l,w,c
   343  001324  E1FA               	bnz	copy_data0
   344                           
   345                           ; Clear objects allocated to BANK0 (122 bytes)
   346  001326  EE00  F060         	lfsr	0,__pbssBANK0
   347  00132A  0E7A               	movlw	122
   348  00132C                     clear_0:
   349  00132C  6AEE               	clrf	postinc0,c
   350  00132E  06E8               	decf	wreg,f,c
   351  001330  E1FD               	bnz	clear_0
   352                           
   353                           ; Clear objects allocated to COMRAM (76 bytes)
   354  001332  EE00  F001         	lfsr	0,__pbssCOMRAM
   355  001336  0E4C               	movlw	76
   356  001338                     clear_1:
   357  001338  6AEE               	clrf	postinc0,c
   358  00133A  06E8               	decf	wreg,f,c
   359  00133C  E1FD               	bnz	clear_1
   360  00133E                     end_of_initialization:
   361                           	callstack 0
   362  00133E                     __end_of__initialization:
   363                           	callstack 0
   364  00133E  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   365  001340  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   366  001342  0100               	movlb	0
   367  001344  EF39  F009         	goto	_main	;jump to C main() function
   368                           
   369                           	psect	bssCOMRAM
   370  000001                     __pbssCOMRAM:
   371                           	callstack 0
   372  000001                     _i2c_status:
   373                           	callstack 0
   374  000001                     	ds	42
   375  00002B                     ___tzname:
   376                           	callstack 0
   377  00002B                     	ds	4
   378  00002F                     ___timezone:
   379                           	callstack 0
   380  00002F                     	ds	4
   381  000033                     _i2c1_driver_i2cISR:
   382                           	callstack 0
   383  000033                     	ds	3
   384  000036                     _i2c1_driver_busCollisionISR:
   385                           	callstack 0
   386  000036                     	ds	3
   387  000039                     	ds	2
   388  00003B                     	ds	2
   389  00003D                     	ds	2
   390  00003F                     	ds	2
   391  000041                     	ds	2
   392  000043                     	ds	2
   393  000045                     	ds	2
   394  000047                     _daylight:
   395                           	callstack 0
   396  000047                     	ds	2
   397  000049                     ___daylight:
   398                           	callstack 0
   399  000049                     	ds	2
   400  00004B                     _errno:
   401                           	callstack 0
   402  00004B                     	ds	2
   403                           
   404                           	psect	dataCOMRAM
   405  00005A                     __pdataCOMRAM:
   406                           	callstack 0
   407  00005A                     	ds	2
   408  00005C                     	ds	2
   409                           
   410                           	psect	bssBANK0
   411  000060                     __pbssBANK0:
   412                           	callstack 0
   413  000060                     _dateTime:
   414                           	callstack 0
   415  000060                     	ds	14
   416  00006E                     _tzname:
   417                           	callstack 0
   418  00006E                     	ds	6
   419  000074                     _lock:
   420                           	callstack 0
   421  000074                     	ds	4
   422  000078                     _dst_off:
   423                           	callstack 0
   424  000078                     	ds	4
   425  00007C                     _timezone:
   426                           	callstack 0
   427  00007C                     	ds	4
   428  000080                     _old_tz_buf:
   429  000080                     	ds	32
   430  0000A0                     localtime@tm:
   431                           	callstack 0
   432  0000A0                     	ds	24
   433  0000B8                     _r1:
   434                           	callstack 0
   435  0000B8                     	ds	10
   436  0000C2                     _r0:
   437                           	callstack 0
   438  0000C2                     	ds	10
   439  0000CC                     _dst_name:
   440                           	callstack 0
   441  0000CC                     	ds	7
   442  0000D3                     _std_name:
   443                           	callstack 0
   444  0000D3                     	ds	7
   445                           
   446                           	psect	cstackBANK0
   447  0000DA                     __pcstackBANK0:
   448                           	callstack 0
   449  0000DA                     ??_main:
   450                           
   451                           ; 1 bytes @ 0x0
   452  0000DA                     	ds	1
   453                           
   454                           	psect	cstackCOMRAM
   455  00004D                     __pcstackCOMRAM:
   456                           	callstack 0
   457  00004D                     ??_i2c1_driver_isNACK:
   458  00004D                     ??_do_I2C_DO_ADDRESS_NACK:
   459  00004D                     ??_do_I2C_RX:
   460  00004D                     ??_do_I2C_TX_EMPTY:
   461  00004D                     i2c1_driver_TXData@d:
   462                           	callstack 0
   463  00004D                     i2c_setBuffer@buffer:
   464                           	callstack 0
   465  00004D                     setCallBack@cb:
   466                           	callstack 0
   467                           
   468                           ; 3 bytes @ 0x0
   469  00004D                     	ds	1
   470  00004E                     ??_do_I2C_TX:
   471                           
   472                           ; 1 bytes @ 0x1
   473  00004E                     	ds	1
   474  00004F                     i2c_setBuffer@bufferSize:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x2
   478  00004F                     	ds	1
   479  000050                     ??_INTERRUPT_InterruptManager:
   480  000050                     setCallBack@p:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x3
   484  000050                     	ds	1
   485  000051                     
   486                           ; 1 bytes @ 0x4
   487  000051                     	ds	1
   488  000052                     setCallBack@idx:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x5
   492  000052                     	ds	1
   493  000053                     i2c_setDataCompleteCallback@cb:
   494                           	callstack 0
   495                           
   496                           ; 3 bytes @ 0x6
   497  000053                     	ds	3
   498  000056                     i2c_setDataCompleteCallback@p:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x9
   502  000056                     	ds	2
   503  000058                     wr1RegCompleteHandler@p:
   504                           	callstack 0
   505  000058                     rd1RegCompleteHandler@p:
   506                           	callstack 0
   507  000058                     rd2RegCompleteHandler@p:
   508                           	callstack 0
   509  000058                     wr2RegCompleteHandler@p:
   510                           	callstack 0
   511  000058                     rdBlkRegCompleteHandler@p:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xB
   515  000058                     	ds	2
   516  00005A                     
   517                           ; 1 bytes @ 0xD
   518 ;;
   519 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   520 ;;
   521 ;; *************** function _main *****************
   522 ;; Defined at:
   523 ;;		line 8 in file "main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   539 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   540 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   541 ;;Total ram usage:        1 bytes
   542 ;; Hardware stack levels required when called:    8
   543 ;; This function calls:
   544 ;;		_SYSTEM_Initialize
   545 ;;		_TMR0_HasOverflowOccured
   546 ;;		_TMR0_StartTimer
   547 ;;		_TMR0_StopTimer
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text0
   554  001272                     __ptext0:
   555                           	callstack 0
   556  001272                     _main:
   557                           	callstack 23
   558  001272                     
   559                           ;main.c: 11:     SYSTEM_Initialize();
   560  001272  EC54  F00A         	call	_SYSTEM_Initialize	;wreg free
   561  001276                     l4211:
   562                           
   563                           ;main.c: 28:     TMR0_StartTimer();
   564  001276  ECBF  F00A         	call	_TMR0_StartTimer	;wreg free
   565  00127A                     l4213:
   566                           
   567                           ;main.c: 34:     {;main.c: 36:         if(TMR0_HasOverflowOccured()){
   568  00127A  EC49  F00A         	call	_TMR0_HasOverflowOccured	;wreg free
   569  00127E  0900               	iorlw	0
   570  001280  B4D8               	btfsc	status,2,c
   571  001282  EF45  F009         	goto	u2111
   572  001286  EF47  F009         	goto	u2110
   573  00128A                     u2111:
   574  00128A  EF3D  F009         	goto	l4213
   575  00128E                     u2110:
   576  00128E                     
   577                           ;main.c: 39:             TMR0_StopTimer();
   578  00128E  ECBD  F00A         	call	_TMR0_StopTimer	;wreg free
   579  001292                     
   580                           ;main.c: 40:             PIR0bits.TMR0IF = 0;
   581  001292  010E               	movlb	14	; () banked
   582  001294  9B33               	bcf	51,5,b	;volatile
   583  001296                     
   584                           ; BSR set to: 14
   585  001296  B27C               	btfsc	124,1,c	;volatile
   586  001298  EF50  F009         	goto	u2121
   587  00129C  EF53  F009         	goto	u2120
   588  0012A0                     u2121:
   589  0012A0  0E01               	movlw	1
   590  0012A2  EF54  F009         	goto	u2126
   591  0012A6                     u2120:
   592  0012A6  0E00               	movlw	0
   593  0012A8                     u2126:
   594  0012A8  0AFF               	xorlw	255
   595  0012AA  0100               	movlb	0	; () banked
   596  0012AC  6FDA               	movwf	??_main& (0+255),b
   597  0012AE  47DA               	rlncf	??_main& (0+255),f,b
   598  0012B0  507C               	movf	124,w,c	;volatile
   599  0012B2  19DA               	xorwf	??_main& (0+255),w,b
   600  0012B4  0BFD               	andlw	-3
   601  0012B6  19DA               	xorwf	??_main& (0+255),w,b
   602  0012B8  6E7C               	movwf	124,c	;volatile
   603  0012BA  EF3B  F009         	goto	l4211
   604  0012BE  EF71  F000         	goto	start
   605  0012C2                     __end_of_main:
   606                           	callstack 0
   607                           
   608 ;; *************** function _TMR0_StopTimer *****************
   609 ;; Defined at:
   610 ;;		line 86 in file "mcc_generated_files/tmr0.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		None
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    6
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text1
   639  00157A                     __ptext1:
   640                           	callstack 0
   641  00157A                     _TMR0_StopTimer:
   642                           	callstack 24
   643  00157A                     
   644                           ;mcc_generated_files/tmr0.c: 89:     T0CON0bits.T0EN = 0;
   645  00157A  9ED5               	bcf	213,7,c	;volatile
   646  00157C  0012               	return		;funcret
   647  00157E                     __end_of_TMR0_StopTimer:
   648                           	callstack 0
   649                           
   650 ;; *************** function _TMR0_StartTimer *****************
   651 ;; Defined at:
   652 ;;		line 80 in file "mcc_generated_files/tmr0.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		None
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    6
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text2
   681  00157E                     __ptext2:
   682                           	callstack 0
   683  00157E                     _TMR0_StartTimer:
   684                           	callstack 24
   685  00157E                     
   686                           ;mcc_generated_files/tmr0.c: 83:     T0CON0bits.T0EN = 1;
   687  00157E  8ED5               	bsf	213,7,c	;volatile
   688  001580  0012               	return		;funcret
   689  001582                     __end_of_TMR0_StartTimer:
   690                           	callstack 0
   691                           
   692 ;; *************** function _TMR0_HasOverflowOccured *****************
   693 ;; Defined at:
   694 ;;		line 114 in file "mcc_generated_files/tmr0.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      _Bool 
   701 ;; Registers used:
   702 ;;		wreg
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    6
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text3
   723  001492                     __ptext3:
   724                           	callstack 0
   725  001492                     _TMR0_HasOverflowOccured:
   726                           	callstack 24
   727  001492                     
   728                           ;mcc_generated_files/tmr0.c: 117:     return(PIR0bits.TMR0IF);
   729  001492  010E               	movlb	14	; () banked
   730  001494  BB33               	btfsc	51,5,b	;volatile
   731  001496  EF4F  F00A         	goto	u2101
   732  00149A  EF52  F00A         	goto	u2100
   733  00149E                     u2101:
   734  00149E  0E01               	movlw	1
   735  0014A0  EF53  F00A         	goto	u2106
   736  0014A4                     u2100:
   737  0014A4  0E00               	movlw	0
   738  0014A6                     u2106:
   739  0014A6                     
   740                           ; BSR set to: 14
   741  0014A6  0012               	return		;funcret
   742  0014A8                     __end_of_TMR0_HasOverflowOccured:
   743                           	callstack 0
   744                           
   745 ;; *************** function _SYSTEM_Initialize *****************
   746 ;; Defined at:
   747 ;;		line 50 in file "mcc_generated_files/mcc.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    7
   768 ;; This function calls:
   769 ;;		_INTERRUPT_Initialize
   770 ;;		_OSCILLATOR_Initialize
   771 ;;		_PIN_MANAGER_Initialize
   772 ;;		_PMD_Initialize
   773 ;;		_TMR0_Initialize
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text4
   780  0014A8                     __ptext4:
   781                           	callstack 0
   782  0014A8                     _SYSTEM_Initialize:
   783                           	callstack 23
   784  0014A8                     
   785                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   786  0014A8  ECC1  F00A         	call	_INTERRUPT_Initialize	;wreg free
   787  0014AC                     
   788                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   789  0014AC  EC15  F00A         	call	_PMD_Initialize	;wreg free
   790  0014B0                     
   791                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   792  0014B0  EC3A  F007         	call	_PIN_MANAGER_Initialize	;wreg free
   793  0014B4                     
   794                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   795  0014B4  EC31  F00A         	call	_OSCILLATOR_Initialize	;wreg free
   796  0014B8                     
   797                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   798  0014B8  EC5F  F00A         	call	_TMR0_Initialize	;wreg free
   799  0014BC  0012               	return		;funcret
   800  0014BE                     __end_of_SYSTEM_Initialize:
   801                           	callstack 0
   802                           
   803 ;; *************** function _TMR0_Initialize *****************
   804 ;; Defined at:
   805 ;;		line 60 in file "mcc_generated_files/tmr0.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   823 ;;Total ram usage:        0 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    6
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_SYSTEM_Initialize
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text5
   834  0014BE                     __ptext5:
   835                           	callstack 0
   836  0014BE                     _TMR0_Initialize:
   837                           	callstack 23
   838  0014BE                     
   839                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x0C;
   840  0014BE  0E0C               	movlw	12
   841  0014C0  6ED6               	movwf	214,c	;volatile
   842                           
   843                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x06;
   844  0014C2  0E06               	movlw	6
   845  0014C4  6ED4               	movwf	212,c	;volatile
   846                           
   847                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
   848  0014C6  0E00               	movlw	0
   849  0014C8  6ED3               	movwf	211,c	;volatile
   850  0014CA                     
   851                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
   852  0014CA  010E               	movlb	14	; () banked
   853  0014CC  9B33               	bcf	51,5,b	;volatile
   854                           
   855                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x86;
   856  0014CE  0E86               	movlw	134
   857  0014D0  6ED5               	movwf	213,c	;volatile
   858  0014D2                     
   859                           ; BSR set to: 14
   860  0014D2  0012               	return		;funcret
   861  0014D4                     __end_of_TMR0_Initialize:
   862                           	callstack 0
   863                           
   864 ;; *************** function _PMD_Initialize *****************
   865 ;; Defined at:
   866 ;;		line 73 in file "mcc_generated_files/mcc.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    6
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_SYSTEM_Initialize
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text6
   895  00142A                     __ptext6:
   896                           	callstack 0
   897  00142A                     _PMD_Initialize:
   898                           	callstack 23
   899  00142A                     
   900                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
   901  00142A  0E00               	movlw	0
   902  00142C  010E               	movlb	14	; () banked
   903  00142E  6F4C               	movwf	76,b	;volatile
   904                           
   905                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
   906  001430  0E00               	movlw	0
   907  001432  6F4D               	movwf	77,b	;volatile
   908                           
   909                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
   910  001434  0E00               	movlw	0
   911  001436  6F4E               	movwf	78,b	;volatile
   912                           
   913                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
   914  001438  0E00               	movlw	0
   915  00143A  6F4F               	movwf	79,b	;volatile
   916                           
   917                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
   918  00143C  0E00               	movlw	0
   919  00143E  6F50               	movwf	80,b	;volatile
   920                           
   921                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
   922  001440  0E00               	movlw	0
   923  001442  6F51               	movwf	81,b	;volatile
   924  001444                     
   925                           ; BSR set to: 14
   926  001444  0012               	return		;funcret
   927  001446                     __end_of_PMD_Initialize:
   928                           	callstack 0
   929                           
   930 ;; *************** function _PIN_MANAGER_Initialize *****************
   931 ;; Defined at:
   932 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    6
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_SYSTEM_Initialize
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text7
   961  000E74                     __ptext7:
   962                           	callstack 0
   963  000E74                     _PIN_MANAGER_Initialize:
   964                           	callstack 23
   965  000E74                     
   966                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   967  000E74  0E00               	movlw	0
   968  000E76  6E7D               	movwf	125,c	;volatile
   969                           
   970                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
   971  000E78  0E02               	movlw	2
   972  000E7A  6E7C               	movwf	124,c	;volatile
   973                           
   974                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   975  000E7C  0E00               	movlw	0
   976  000E7E  6E79               	movwf	121,c	;volatile
   977                           
   978                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
   979  000E80  0E00               	movlw	0
   980  000E82  6E7E               	movwf	126,c	;volatile
   981                           
   982                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
   983  000E84  0E00               	movlw	0
   984  000E86  6E7A               	movwf	122,c	;volatile
   985                           
   986                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
   987  000E88  0E00               	movlw	0
   988  000E8A  6E7F               	movwf	127,c	;volatile
   989                           
   990                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x80;
   991  000E8C  0E80               	movlw	128
   992  000E8E  6E7B               	movwf	123,c	;volatile
   993                           
   994                           ;mcc_generated_files/pin_manager.c: 67:     LATH = 0x00;
   995  000E90  0E00               	movlw	0
   996  000E92  6E80               	movwf	128,c	;volatile
   997  000E94                     
   998                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0xFF;
   999  000E94  6885               	setf	133,c	;volatile
  1000  000E96                     
  1001                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
  1002  000E96  6886               	setf	134,c	;volatile
  1003  000E98                     
  1004                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
  1005  000E98  6881               	setf	129,c	;volatile
  1006                           
  1007                           ;mcc_generated_files/pin_manager.c: 75:     TRISG = 0xDF;
  1008  000E9A  0EDF               	movlw	223
  1009  000E9C  6E87               	movwf	135,c	;volatile
  1010  000E9E                     
  1011                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xFF;
  1012  000E9E  6882               	setf	130,c	;volatile
  1013                           
  1014                           ;mcc_generated_files/pin_manager.c: 77:     TRISH = 0x0F;
  1015  000EA0  0E0F               	movlw	15
  1016  000EA2  6E88               	movwf	136,c	;volatile
  1017  000EA4                     
  1018                           ;mcc_generated_files/pin_manager.c: 78:     TRISC = 0xFF;
  1019  000EA4  6883               	setf	131,c	;volatile
  1020                           
  1021                           ;mcc_generated_files/pin_manager.c: 79:     TRISD = 0xFD;
  1022  000EA6  0EFD               	movlw	253
  1023  000EA8  6E84               	movwf	132,c	;volatile
  1024                           
  1025                           ;mcc_generated_files/pin_manager.c: 84:     ANSELD = 0xFD;
  1026  000EAA  0EFD               	movlw	253
  1027  000EAC  010E               	movlb	14	; () banked
  1028  000EAE  6FA7               	movwf	167,b	;volatile
  1029  000EB0                     
  1030                           ; BSR set to: 14
  1031                           ;mcc_generated_files/pin_manager.c: 85:     ANSELB = 0xFF;
  1032  000EB0  699A               	setf	154,b	;volatile
  1033  000EB2                     
  1034                           ; BSR set to: 14
  1035                           ;mcc_generated_files/pin_manager.c: 86:     ANSELE = 0xFF;
  1036  000EB2  69AF               	setf	175,b	;volatile
  1037  000EB4                     
  1038                           ; BSR set to: 14
  1039                           ;mcc_generated_files/pin_manager.c: 87:     ANSELG = 0xFF;
  1040  000EB4  69BC               	setf	188,b	;volatile
  1041  000EB6                     
  1042                           ; BSR set to: 14
  1043                           ;mcc_generated_files/pin_manager.c: 88:     ANSELF = 0xFF;
  1044  000EB6  69B4               	setf	180,b	;volatile
  1045                           
  1046                           ;mcc_generated_files/pin_manager.c: 89:     ANSELA = 0xEF;
  1047  000EB8  0EEF               	movlw	239
  1048  000EBA  6F92               	movwf	146,b	;volatile
  1049                           
  1050                           ;mcc_generated_files/pin_manager.c: 94:     WPUD = 0x00;
  1051  000EBC  0E00               	movlw	0
  1052  000EBE  6FA6               	movwf	166,b	;volatile
  1053                           
  1054                           ;mcc_generated_files/pin_manager.c: 95:     WPUF = 0x00;
  1055  000EC0  0E00               	movlw	0
  1056  000EC2  6FB3               	movwf	179,b	;volatile
  1057                           
  1058                           ;mcc_generated_files/pin_manager.c: 96:     WPUE = 0x00;
  1059  000EC4  0E00               	movlw	0
  1060  000EC6  6FAE               	movwf	174,b	;volatile
  1061                           
  1062                           ;mcc_generated_files/pin_manager.c: 97:     WPUB = 0x00;
  1063  000EC8  0E00               	movlw	0
  1064  000ECA  6F99               	movwf	153,b	;volatile
  1065                           
  1066                           ;mcc_generated_files/pin_manager.c: 98:     WPUG = 0x00;
  1067  000ECC  0E00               	movlw	0
  1068  000ECE  6FBB               	movwf	187,b	;volatile
  1069                           
  1070                           ;mcc_generated_files/pin_manager.c: 99:     WPUA = 0x00;
  1071  000ED0  0E00               	movlw	0
  1072  000ED2  6F91               	movwf	145,b	;volatile
  1073                           
  1074                           ;mcc_generated_files/pin_manager.c: 100:     WPUC = 0x00;
  1075  000ED4  0E00               	movlw	0
  1076  000ED6  6FA1               	movwf	161,b	;volatile
  1077                           
  1078                           ;mcc_generated_files/pin_manager.c: 101:     WPUH = 0x00;
  1079  000ED8  0E00               	movlw	0
  1080  000EDA  6FC0               	movwf	192,b	;volatile
  1081                           
  1082                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  1083  000EDC  0E00               	movlw	0
  1084  000EDE  6FAD               	movwf	173,b	;volatile
  1085                           
  1086                           ;mcc_generated_files/pin_manager.c: 107:     ODCONF = 0x00;
  1087  000EE0  0E00               	movlw	0
  1088  000EE2  6FB2               	movwf	178,b	;volatile
  1089                           
  1090                           ;mcc_generated_files/pin_manager.c: 108:     ODCONA = 0x00;
  1091  000EE4  0E00               	movlw	0
  1092  000EE6  6F90               	movwf	144,b	;volatile
  1093                           
  1094                           ;mcc_generated_files/pin_manager.c: 109:     ODCONG = 0x00;
  1095  000EE8  0E00               	movlw	0
  1096  000EEA  6FBA               	movwf	186,b	;volatile
  1097                           
  1098                           ;mcc_generated_files/pin_manager.c: 110:     ODCONB = 0x00;
  1099  000EEC  0E00               	movlw	0
  1100  000EEE  6F98               	movwf	152,b	;volatile
  1101                           
  1102                           ;mcc_generated_files/pin_manager.c: 111:     ODCONH = 0x00;
  1103  000EF0  0E00               	movlw	0
  1104  000EF2  6FBF               	movwf	191,b	;volatile
  1105                           
  1106                           ;mcc_generated_files/pin_manager.c: 112:     ODCONC = 0x00;
  1107  000EF4  0E00               	movlw	0
  1108  000EF6  6FA0               	movwf	160,b	;volatile
  1109                           
  1110                           ;mcc_generated_files/pin_manager.c: 113:     ODCOND = 0x00;
  1111  000EF8  0E00               	movlw	0
  1112  000EFA  6FA5               	movwf	165,b	;volatile
  1113  000EFC                     
  1114                           ; BSR set to: 14
  1115                           ;mcc_generated_files/pin_manager.c: 118:     SLRCONA = 0xFF;
  1116  000EFC  698F               	setf	143,b	;volatile
  1117  000EFE                     
  1118                           ; BSR set to: 14
  1119                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONB = 0xFF;
  1120  000EFE  6997               	setf	151,b	;volatile
  1121  000F00                     
  1122                           ; BSR set to: 14
  1123                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONC = 0xFF;
  1124  000F00  699F               	setf	159,b	;volatile
  1125  000F02                     
  1126                           ; BSR set to: 14
  1127                           ;mcc_generated_files/pin_manager.c: 121:     SLRCOND = 0xFF;
  1128  000F02  69A4               	setf	164,b	;volatile
  1129  000F04                     
  1130                           ; BSR set to: 14
  1131                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONE = 0xFF;
  1132  000F04  69AC               	setf	172,b	;volatile
  1133  000F06                     
  1134                           ; BSR set to: 14
  1135                           ;mcc_generated_files/pin_manager.c: 123:     SLRCONF = 0xFF;
  1136  000F06  69B1               	setf	177,b	;volatile
  1137  000F08                     
  1138                           ; BSR set to: 14
  1139                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONG = 0xFF;
  1140  000F08  69B9               	setf	185,b	;volatile
  1141  000F0A                     
  1142                           ; BSR set to: 14
  1143                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONH = 0xFF;
  1144  000F0A  69BE               	setf	190,b	;volatile
  1145  000F0C                     
  1146                           ; BSR set to: 14
  1147                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
  1148  000F0C  698E               	setf	142,b	;volatile
  1149  000F0E                     
  1150                           ; BSR set to: 14
  1151                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
  1152  000F0E  6996               	setf	150,b	;volatile
  1153  000F10                     
  1154                           ; BSR set to: 14
  1155                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
  1156  000F10  699E               	setf	158,b	;volatile
  1157  000F12                     
  1158                           ; BSR set to: 14
  1159                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
  1160  000F12  69A3               	setf	163,b	;volatile
  1161  000F14                     
  1162                           ; BSR set to: 14
  1163                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0xFF;
  1164  000F14  69AB               	setf	171,b	;volatile
  1165  000F16                     
  1166                           ; BSR set to: 14
  1167                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
  1168  000F16  69B0               	setf	176,b	;volatile
  1169  000F18                     
  1170                           ; BSR set to: 14
  1171                           ;mcc_generated_files/pin_manager.c: 136:     INLVLG = 0xFF;
  1172  000F18  69B8               	setf	184,b	;volatile
  1173  000F1A                     
  1174                           ; BSR set to: 14
  1175                           ;mcc_generated_files/pin_manager.c: 137:     INLVLH = 0xFF;
  1176  000F1A  69BD               	setf	189,b	;volatile
  1177                           
  1178                           ;mcc_generated_files/pin_manager.c: 146:     SSP1CLKPPS = 0x13;
  1179  000F1C  0E13               	movlw	19
  1180  000F1E  6F19               	movwf	25,b	;volatile
  1181                           
  1182                           ;mcc_generated_files/pin_manager.c: 147:     RC3PPS = 0x19;
  1183  000F20  0E19               	movlw	25
  1184  000F22  6F65               	movwf	101,b	;volatile
  1185                           
  1186                           ;mcc_generated_files/pin_manager.c: 148:     RC5PPS = 0x1A;
  1187  000F24  0E1A               	movlw	26
  1188  000F26  6F67               	movwf	103,b	;volatile
  1189                           
  1190                           ;mcc_generated_files/pin_manager.c: 149:     T0CKIPPS = 0x04;
  1191  000F28  0E04               	movlw	4
  1192  000F2A  010D               	movlb	13	; () banked
  1193  000F2C  6FF4               	movwf	244,b	;volatile
  1194                           
  1195                           ;mcc_generated_files/pin_manager.c: 150:     SSP1DATPPS = 0x15;
  1196  000F2E  0E15               	movlw	21
  1197  000F30  010E               	movlb	14	; () banked
  1198  000F32  6F1A               	movwf	26,b	;volatile
  1199  000F34                     
  1200                           ; BSR set to: 14
  1201  000F34  0012               	return		;funcret
  1202  000F36                     __end_of_PIN_MANAGER_Initialize:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _OSCILLATOR_Initialize *****************
  1206 ;; Defined at:
  1207 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    6
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_SYSTEM_Initialize
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text8
  1236  001462                     __ptext8:
  1237                           	callstack 0
  1238  001462                     _OSCILLATOR_Initialize:
  1239                           	callstack 23
  1240  001462                     
  1241                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  1242  001462  0E62               	movlw	98
  1243  001464  010E               	movlb	14	; () banked
  1244  001466  6F43               	movwf	67,b	;volatile
  1245                           
  1246                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  1247  001468  0E00               	movlw	0
  1248  00146A  6F45               	movwf	69,b	;volatile
  1249                           
  1250                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  1251  00146C  0E00               	movlw	0
  1252  00146E  6F47               	movwf	71,b	;volatile
  1253                           
  1254                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x06;
  1255  001470  0E06               	movlw	6
  1256  001472  6F49               	movwf	73,b	;volatile
  1257                           
  1258                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  1259  001474  0E00               	movlw	0
  1260  001476  6F48               	movwf	72,b	;volatile
  1261  001478                     
  1262                           ; BSR set to: 14
  1263  001478  0012               	return		;funcret
  1264  00147A                     __end_of_OSCILLATOR_Initialize:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _INTERRUPT_Initialize *****************
  1268 ;; Defined at:
  1269 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		None
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1287 ;;Total ram usage:        0 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    6
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_SYSTEM_Initialize
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text9
  1298  001582                     __ptext9:
  1299                           	callstack 0
  1300  001582                     _INTERRUPT_Initialize:
  1301                           	callstack 23
  1302  001582                     
  1303                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1304  001582  9AF2               	bcf	242,5,c	;volatile
  1305  001584  0012               	return		;funcret
  1306  001586                     __end_of_INTERRUPT_Initialize:
  1307                           	callstack 0
  1308                           
  1309 ;; *************** function _INTERRUPT_InterruptManager *****************
  1310 ;; Defined at:
  1311 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1327 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1328 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1329 ;;Total ram usage:       10 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    5
  1332 ;; This function calls:
  1333 ;;		Absolute function
  1334 ;;		_i2c_ISR
  1335 ;;		_i2c_busCollisionISR
  1336 ;; This function is called by:
  1337 ;;		Interrupt level 2
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	intcode
  1342  000008                     __pintcode:
  1343                           	callstack 0
  1344  000008                     _INTERRUPT_InterruptManager:
  1345                           	callstack 23
  1346                           
  1347                           ;incstack = 0
  1348  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1349  00000A  CFFA F050          	movff	pclath,??_INTERRUPT_InterruptManager
  1350  00000E  CFFB F051          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1351  000012  CFD9 F052          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  1352  000016  CFDA F053          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  1353  00001A  CFF3 F054          	movff	prodl,??_INTERRUPT_InterruptManager+4
  1354  00001E  CFF4 F055          	movff	prodh,??_INTERRUPT_InterruptManager+5
  1355  000022  CFF6 F056          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
  1356  000026  CFF7 F057          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
  1357  00002A  CFF8 F058          	movff	tblptru,??_INTERRUPT_InterruptManager+8
  1358  00002E  CFF5 F059          	movff	tablat,??_INTERRUPT_InterruptManager+9
  1359  000032                     
  1360                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  1361  000032  ACF2               	btfss	242,6,c	;volatile
  1362  000034  EF1E  F000         	goto	i2u184_41
  1363  000038  EF20  F000         	goto	i2u184_40
  1364  00003C                     i2u184_41:
  1365  00003C  EF5B  F000         	goto	i2l352
  1366  000040                     i2u184_40:
  1367  000040                     
  1368                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  1369  000040  010E               	movlb	14	; () banked
  1370  000042  A32C               	btfss	44,1,b	;volatile
  1371  000044  EF26  F000         	goto	i2u185_41
  1372  000048  EF28  F000         	goto	i2u185_40
  1373  00004C                     i2u185_41:
  1374  00004C  EF3E  F000         	goto	i2l347
  1375  000050                     i2u185_40:
  1376  000050                     
  1377                           ; BSR set to: 14
  1378  000050  A336               	btfss	54,1,b	;volatile
  1379  000052  EF2D  F000         	goto	i2u186_41
  1380  000056  EF2F  F000         	goto	i2u186_40
  1381  00005A                     i2u186_41:
  1382  00005A  EF3E  F000         	goto	i2l347
  1383  00005E                     i2u186_40:
  1384  00005E                     
  1385                           ; BSR set to: 14
  1386                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             i2c1_driver_busCollisionISR();
  1387  00005E  D802               	call	i2u187_48
  1388  000060  EF3C  F000         	goto	i2u187_49
  1389  000064                     i2u187_48:
  1390  000064  0005               	push	
  1391  000066  6EFA               	movwf	pclath,c
  1392  000068  5036               	movf	_i2c1_driver_busCollisionISR^0,w,c
  1393  00006A  6EFD               	movwf	tosl,c
  1394  00006C  5037               	movf	(_i2c1_driver_busCollisionISR+1)^0,w,c
  1395  00006E  6EFE               	movwf	tosh,c
  1396  000070  5038               	movf	(_i2c1_driver_busCollisionISR+2)^0,w,c
  1397  000072  6EFF               	movwf	tosu,c
  1398  000074  50FA               	movf	pclath,w,c
  1399  000076  0012               	return		;indir
  1400  000078                     i2u187_49:
  1401                           
  1402                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  1403  000078  EF5B  F000         	goto	i2l352
  1404  00007C                     i2l347:
  1405                           
  1406                           ; BSR set to: 14
  1407  00007C  A12C               	btfss	44,0,b	;volatile
  1408  00007E  EF43  F000         	goto	i2u188_41
  1409  000082  EF45  F000         	goto	i2u188_40
  1410  000086                     i2u188_41:
  1411  000086  EF5B  F000         	goto	i2l348
  1412  00008A                     i2u188_40:
  1413  00008A                     
  1414                           ; BSR set to: 14
  1415  00008A  A136               	btfss	54,0,b	;volatile
  1416  00008C  EF4A  F000         	goto	i2u189_41
  1417  000090  EF4C  F000         	goto	i2u189_40
  1418  000094                     i2u189_41:
  1419  000094  EF5B  F000         	goto	i2l348
  1420  000098                     i2u189_40:
  1421  000098                     
  1422                           ; BSR set to: 14
  1423                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             i2c1_driver_i2cISR();
  1424  000098  D802               	call	i2u190_48
  1425  00009A  EF59  F000         	goto	i2u190_49
  1426  00009E                     i2u190_48:
  1427  00009E  0005               	push	
  1428  0000A0  6EFA               	movwf	pclath,c
  1429  0000A2  5033               	movf	_i2c1_driver_i2cISR^0,w,c
  1430  0000A4  6EFD               	movwf	tosl,c
  1431  0000A6  5034               	movf	(_i2c1_driver_i2cISR+1)^0,w,c
  1432  0000A8  6EFE               	movwf	tosh,c
  1433  0000AA  5035               	movf	(_i2c1_driver_i2cISR+2)^0,w,c
  1434  0000AC  6EFF               	movwf	tosu,c
  1435  0000AE  50FA               	movf	pclath,w,c
  1436  0000B0  0012               	return		;indir
  1437  0000B2                     i2u190_49:
  1438                           
  1439                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  1440  0000B2  EF5B  F000         	goto	i2l352
  1441  0000B6                     i2l348:
  1442  0000B6                     i2l352:
  1443  0000B6  C059  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
  1444  0000BA  C058  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
  1445  0000BE  C057  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
  1446  0000C2  C056  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
  1447  0000C6  C055  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  1448  0000CA  C054  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  1449  0000CE  C053  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  1450  0000D2  C052  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  1451  0000D6  C051  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1452  0000DA  C050  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1453  0000DE  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1454  0000E0  0011               	retfie		f
  1455  0000E2                     __end_of_INTERRUPT_InterruptManager:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _i2c_busCollisionISR *****************
  1459 ;; Defined at:
  1460 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    1
  1481 ;; This function calls:
  1482 ;;		_i2c1_driver_clearBusCollision
  1483 ;; This function is called by:
  1484 ;;		_i2c_open
  1485 ;;		_INTERRUPT_InterruptManager
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text11
  1490  001552                     __ptext11:
  1491                           	callstack 0
  1492  001552                     _i2c_busCollisionISR:
  1493                           	callstack 26
  1494  001552                     
  1495                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
  1496  001552  ECAC  F00A         	call	_i2c1_driver_clearBusCollision	;wreg free
  1497  001556  0012               	return		;funcret
  1498  001558                     __end_of_i2c_busCollisionISR:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _i2c1_driver_clearBusCollision *****************
  1502 ;; Defined at:
  1503 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		None
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_i2c_busCollisionISR
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text12
  1531  001558                     __ptext12:
  1532                           	callstack 0
  1533  001558                     _i2c1_driver_clearBusCollision:
  1534                           	callstack 26
  1535  001558                     
  1536                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
  1537  001558  010E               	movlb	14	; () banked
  1538  00155A  9336               	bcf	54,1,b	;volatile
  1539  00155C                     
  1540                           ; BSR set to: 14
  1541  00155C  0012               	return		;funcret
  1542  00155E                     __end_of_i2c1_driver_clearBusCollision:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _i2c_ISR *****************
  1546 ;; Defined at:
  1547 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    4
  1568 ;; This function calls:
  1569 ;;		_do_I2C_DO_ACK
  1570 ;;		_do_I2C_DO_ADDRESS_NACK
  1571 ;;		_do_I2C_DO_NACK_RESTART
  1572 ;;		_do_I2C_DO_NACK_STOP
  1573 ;;		_do_I2C_IDLE
  1574 ;;		_do_I2C_RCEN
  1575 ;;		_do_I2C_RESET
  1576 ;;		_do_I2C_RX
  1577 ;;		_do_I2C_SEND_ADR_READ
  1578 ;;		_do_I2C_SEND_ADR_WRITE
  1579 ;;		_do_I2C_SEND_RESTART
  1580 ;;		_do_I2C_SEND_RESTART_READ
  1581 ;;		_do_I2C_SEND_RESTART_WRITE
  1582 ;;		_do_I2C_SEND_STOP
  1583 ;;		_do_I2C_TX
  1584 ;;		_do_I2C_TX_EMPTY
  1585 ;;		_i2c1_driver_isNACK
  1586 ;;		_mssp1_clearIRQ
  1587 ;; This function is called by:
  1588 ;;		_i2c_open
  1589 ;;		_i2c_poller
  1590 ;;		_INTERRUPT_InterruptManager
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text13
  1595  001210                     __ptext13:
  1596                           	callstack 0
  1597  001210                     _i2c_ISR:
  1598                           	callstack 23
  1599  001210                     
  1600                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
  1601  001210  ECAF  F00A         	call	_mssp1_clearIRQ	;wreg free
  1602  001214                     
  1603                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
  1604  001214  A601               	btfss	_i2c_status^0,3,c
  1605  001216  EF0F  F009         	goto	i2u135_41
  1606  00121A  EF11  F009         	goto	i2u135_40
  1607  00121E                     i2u135_41:
  1608  00121E  EF1C  F009         	goto	i2l3507
  1609  001222                     i2u135_40:
  1610  001222  EC3D  F00A         	call	_i2c1_driver_isNACK	;wreg free
  1611  001226  A0D8               	btfss	status,0,c
  1612  001228  EF18  F009         	goto	i2u136_41
  1613  00122C  EF1A  F009         	goto	i2u136_40
  1614  001230                     i2u136_41:
  1615  001230  EF1C  F009         	goto	i2l3507
  1616  001234                     i2u136_40:
  1617  001234                     
  1618                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  1619  001234  0E0F               	movlw	15
  1620  001236  6E0B               	movwf	(_i2c_status+10)^0,c
  1621  001238                     i2l3507:
  1622                           
  1623                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  1624  001238  500B               	movf	(_i2c_status+10)^0,w,c
  1625  00123A  0D03               	mullw	3
  1626  00123C  0E31               	movlw	low _fsmStateTable
  1627  00123E  24F3               	addwf	243,w,c
  1628  001240  6EF6               	movwf	tblptrl,c
  1629  001242  0E0E               	movlw	high _fsmStateTable
  1630  001244  20F4               	addwfc	244,w,c
  1631  001246  6EF7               	movwf	tblptrh,c
  1632  001248                     	if	1	;There are 3 active tblptr bytes
  1633  001248  6AF8               	clrf	tblptru,c
  1634  00124A  0E00               	movlw	low (__mediumconst shr (0+16))
  1635  00124C  22F8               	addwfc	tblptru,f,c
  1636  00124E                     	endif
  1637  00124E  D802               	call	i2u137_48
  1638  001250  EF37  F009         	goto	i2u137_49
  1639  001254                     i2u137_48:
  1640  001254  0005               	push	
  1641  001256  6EFA               	movwf	pclath,c
  1642  001258  0009               	tblrd		*+
  1643  00125A  50F5               	movf	tablat,w,c
  1644  00125C  6EFD               	movwf	tosl,c
  1645  00125E  0009               	tblrd		*+
  1646  001260  50F5               	movf	tablat,w,c
  1647  001262  6EFE               	movwf	tosh,c
  1648  001264  0009               	tblrd		*+
  1649  001266  50F5               	movf	tablat,w,c
  1650  001268  6EFF               	movwf	tosu,c
  1651  00126A  50FA               	movf	pclath,w,c
  1652  00126C  0012               	return		;indir
  1653  00126E                     i2u137_49:
  1654  00126E  6E0B               	movwf	(_i2c_status+10)^0,c
  1655  001270  0012               	return		;funcret
  1656  001272                     __end_of_i2c_ISR:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _mssp1_clearIRQ *****************
  1660 ;; Defined at:
  1661 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		None
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_i2c_ISR
  1685 ;;		_i2c_open
  1686 ;;		_i2c_close
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text14
  1691  00155E                     __ptext14:
  1692                           	callstack 0
  1693  00155E                     _mssp1_clearIRQ:
  1694                           	callstack 26
  1695  00155E                     
  1696                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
  1697  00155E  010E               	movlb	14	; () banked
  1698  001560  9136               	bcf	54,0,b	;volatile
  1699  001562                     
  1700                           ; BSR set to: 14
  1701  001562  0012               	return		;funcret
  1702  001564                     __end_of_mssp1_clearIRQ:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _do_I2C_RX *****************
  1706 ;; Defined at:
  1707 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      enum E14701
  1714 ;; Registers used:
  1715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1725 ;;Total ram usage:        2 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    3
  1728 ;; This function calls:
  1729 ;;		Absolute function
  1730 ;;		_do_I2C_DO_NACK_RESTART
  1731 ;;		_do_I2C_DO_NACK_STOP
  1732 ;;		_i2c1_driver_getRXData
  1733 ;;		_i2c1_driver_sendACK
  1734 ;;		_i2c_restartWrite
  1735 ;;		_rd1RegCompleteHandler
  1736 ;;		_rd2RegCompleteHandler
  1737 ;;		_rdBlkRegCompleteHandler
  1738 ;;		_returnReset
  1739 ;;		_returnStop
  1740 ;;		_wr1RegCompleteHandler
  1741 ;;		_wr2RegCompleteHandler
  1742 ;; This function is called by:
  1743 ;;		_i2c_ISR
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text15
  1748  000FF8                     __ptext15:
  1749                           	callstack 0
  1750  000FF8                     _do_I2C_RX:
  1751                           	callstack 23
  1752  000FF8                     
  1753                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
  1754  000FF8  ECC3  F00A         	call	_i2c1_driver_getRXData	;wreg free
  1755  000FFC  C003  FFD9         	movff	_i2c_status+2,fsr2l
  1756  001000  C004  FFDA         	movff	_i2c_status+3,fsr2h
  1757  001004  6EDF               	movwf	indf2,c
  1758  001006  4A03               	infsnz	(_i2c_status+2)^0,f,c
  1759  001008  2A04               	incf	(_i2c_status+3)^0,f,c
  1760  00100A                     
  1761                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  1762  00100A  0605               	decf	(_i2c_status+4)^0,f,c
  1763  00100C  A0D8               	btfss	status,0,c
  1764  00100E  0606               	decf	(_i2c_status+5)^0,f,c
  1765  001010  5005               	movf	(_i2c_status+4)^0,w,c
  1766  001012  1006               	iorwf	(_i2c_status+5)^0,w,c
  1767  001014  B4D8               	btfsc	status,2,c
  1768  001016  EF0F  F008         	goto	i2u87_41
  1769  00101A  EF11  F008         	goto	i2u87_40
  1770  00101E                     i2u87_41:
  1771  00101E  EF16  F008         	goto	i2l525
  1772  001022                     i2u87_40:
  1773  001022                     
  1774                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
  1775  001022  ECB8  F00A         	call	_i2c1_driver_sendACK	;wreg free
  1776  001026                     
  1777                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  1778  001026  0E05               	movlw	5
  1779  001028  EF50  F008         	goto	i2l526
  1780  00102C                     i2l525:
  1781                           
  1782                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  1783  00102C  8401               	bsf	_i2c_status^0,2,c
  1784                           
  1785                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  1786  00102E  EF21  F008         	goto	i2l3035
  1787  001032                     i2l3025:
  1788                           
  1789                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  1790  001032  EC89  F00A         	call	_do_I2C_DO_NACK_RESTART	;wreg free
  1791  001036  EF50  F008         	goto	i2l526
  1792  00103A                     i2l3029:
  1793                           
  1794                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  1795  00103A  EC8D  F00A         	call	_do_I2C_DO_NACK_STOP	;wreg free
  1796  00103E  EF50  F008         	goto	i2l526
  1797  001042                     i2l3035:
  1798  001042  C01F  F058         	movff	_i2c_status+30,rdBlkRegCompleteHandler@p
  1799  001046  C020  F059         	movff	_i2c_status+31,rdBlkRegCompleteHandler@p+1
  1800  00104A  EE20  F00D         	lfsr	2,_i2c_status+12
  1801  00104E  D802               	call	i2u88_48
  1802  001050  EF34  F008         	goto	i2u88_49
  1803  001054                     i2u88_48:
  1804  001054  0005               	push	
  1805  001056  6EFA               	movwf	pclath,c
  1806  001058  50DE               	movf	postinc2,w,c
  1807  00105A  6EFD               	movwf	tosl,c
  1808  00105C  50DE               	movf	postinc2,w,c
  1809  00105E  6EFE               	movwf	tosh,c
  1810  001060  50DE               	movf	postinc2,w,c
  1811  001062  6EFF               	movwf	tosu,c
  1812  001064  50FA               	movf	pclath,w,c
  1813  001066  0012               	return		;indir
  1814  001068                     i2u88_49:
  1815  001068  6E4D               	movwf	??_do_I2C_RX^0,c
  1816  00106A  6A4E               	clrf	(??_do_I2C_RX+1)^0,c
  1817                           
  1818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 1, Range of values is 0 to 0
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte            4     3 (average)
  1824                           ;	Chosen strategy is simple_byte
  1825  00106C  504E               	movf	(??_do_I2C_RX+1)^0,w,c
  1826  00106E  0A00               	xorlw	0	; case 0
  1827  001070  B4D8               	btfsc	status,2,c
  1828  001072  EF3D  F008         	goto	i2l4303
  1829  001076  EF1D  F008         	goto	i2l3029
  1830  00107A                     i2l4303:
  1831                           
  1832                           ; Switch size 1, requested type "simple"
  1833                           ; Number of cases is 4, Range of values is 1 to 4
  1834                           ; switch strategies available:
  1835                           ; Name         Instructions Cycles
  1836                           ; simple_byte           13     7 (average)
  1837                           ;	Chosen strategy is simple_byte
  1838  00107A  504D               	movf	??_do_I2C_RX^0,w,c
  1839  00107C  0A01               	xorlw	1	; case 1
  1840  00107E  B4D8               	btfsc	status,2,c
  1841  001080  EF1D  F008         	goto	i2l3029
  1842  001084  0A03               	xorlw	3	; case 2
  1843  001086  B4D8               	btfsc	status,2,c
  1844  001088  EF19  F008         	goto	i2l3025
  1845  00108C  0A01               	xorlw	1	; case 3
  1846  00108E  B4D8               	btfsc	status,2,c
  1847  001090  EF19  F008         	goto	i2l3025
  1848  001094  0A07               	xorlw	7	; case 4
  1849  001096  B4D8               	btfsc	status,2,c
  1850  001098  EF1D  F008         	goto	i2l3029
  1851  00109C  EF1D  F008         	goto	i2l3029
  1852  0010A0                     i2l526:
  1853  0010A0  0012               	return		;funcret
  1854  0010A2                     __end_of_do_I2C_RX:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _do_I2C_TX *****************
  1858 ;; Defined at:
  1859 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      enum E14701
  1866 ;; Registers used:
  1867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;Total ram usage:        2 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    3
  1880 ;; This function calls:
  1881 ;;		Absolute function
  1882 ;;		_do_I2C_SEND_RESTART_READ
  1883 ;;		_do_I2C_SEND_RESTART_WRITE
  1884 ;;		_do_I2C_SEND_STOP
  1885 ;;		_i2c1_driver_TXData
  1886 ;;		_i2c1_driver_isNACK
  1887 ;;		_i2c_restartWrite
  1888 ;;		_rd1RegCompleteHandler
  1889 ;;		_rd2RegCompleteHandler
  1890 ;;		_rdBlkRegCompleteHandler
  1891 ;;		_returnReset
  1892 ;;		_returnStop
  1893 ;;		_wr1RegCompleteHandler
  1894 ;;		_wr2RegCompleteHandler
  1895 ;; This function is called by:
  1896 ;;		_i2c_ISR
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text16
  1901  000F36                     __ptext16:
  1902                           	callstack 0
  1903  000F36                     _do_I2C_TX:
  1904                           	callstack 23
  1905  000F36                     
  1906                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
  1907  000F36  EC3D  F00A         	call	_i2c1_driver_isNACK	;wreg free
  1908  000F3A  A0D8               	btfss	status,0,c
  1909  000F3C  EFA2  F007         	goto	i2u84_41
  1910  000F40  EFA4  F007         	goto	i2u84_40
  1911  000F44                     i2u84_41:
  1912  000F44  EFE1  F007         	goto	i2l509
  1913  000F48                     i2u84_40:
  1914  000F48  EFB2  F007         	goto	i2l2995
  1915  000F4C                     i2l2981:
  1916                           
  1917                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  1918  000F4C  ECA1  F00A         	call	_do_I2C_SEND_RESTART_READ	;wreg free
  1919  000F50  EFFB  F007         	goto	i2l512
  1920  000F54                     i2l2985:
  1921                           
  1922                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  1923  000F54  EC9D  F00A         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
  1924  000F58  EFFB  F007         	goto	i2l512
  1925  000F5C                     i2l2989:
  1926                           
  1927                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  1928  000F5C  EC95  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  1929  000F60  EFFB  F007         	goto	i2l512
  1930  000F64                     i2l2995:
  1931  000F64  C025  F058         	movff	_i2c_status+36,rdBlkRegCompleteHandler@p
  1932  000F68  C026  F059         	movff	_i2c_status+37,rdBlkRegCompleteHandler@p+1
  1933  000F6C  EE20  F016         	lfsr	2,_i2c_status+21
  1934  000F70  D802               	call	i2u85_48
  1935  000F72  EFC5  F007         	goto	i2u85_49
  1936  000F76                     i2u85_48:
  1937  000F76  0005               	push	
  1938  000F78  6EFA               	movwf	pclath,c
  1939  000F7A  50DE               	movf	postinc2,w,c
  1940  000F7C  6EFD               	movwf	tosl,c
  1941  000F7E  50DE               	movf	postinc2,w,c
  1942  000F80  6EFE               	movwf	tosh,c
  1943  000F82  50DE               	movf	postinc2,w,c
  1944  000F84  6EFF               	movwf	tosu,c
  1945  000F86  50FA               	movf	pclath,w,c
  1946  000F88  0012               	return		;indir
  1947  000F8A                     i2u85_49:
  1948  000F8A  6E4E               	movwf	??_do_I2C_TX^0,c
  1949  000F8C  6A4F               	clrf	(??_do_I2C_TX+1)^0,c
  1950                           
  1951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1952                           ; Switch size 1, requested type "simple"
  1953                           ; Number of cases is 1, Range of values is 0 to 0
  1954                           ; switch strategies available:
  1955                           ; Name         Instructions Cycles
  1956                           ; simple_byte            4     3 (average)
  1957                           ;	Chosen strategy is simple_byte
  1958  000F8E  504F               	movf	(??_do_I2C_TX+1)^0,w,c
  1959  000F90  0A00               	xorlw	0	; case 0
  1960  000F92  B4D8               	btfsc	status,2,c
  1961  000F94  EFCE  F007         	goto	i2l4305
  1962  000F98  EFAE  F007         	goto	i2l2989
  1963  000F9C                     i2l4305:
  1964                           
  1965                           ; Switch size 1, requested type "simple"
  1966                           ; Number of cases is 4, Range of values is 1 to 4
  1967                           ; switch strategies available:
  1968                           ; Name         Instructions Cycles
  1969                           ; simple_byte           13     7 (average)
  1970                           ;	Chosen strategy is simple_byte
  1971  000F9C  504E               	movf	??_do_I2C_TX^0,w,c
  1972  000F9E  0A01               	xorlw	1	; case 1
  1973  000FA0  B4D8               	btfsc	status,2,c
  1974  000FA2  EFAE  F007         	goto	i2l2989
  1975  000FA6  0A03               	xorlw	3	; case 2
  1976  000FA8  B4D8               	btfsc	status,2,c
  1977  000FAA  EFA6  F007         	goto	i2l2981
  1978  000FAE  0A01               	xorlw	1	; case 3
  1979  000FB0  B4D8               	btfsc	status,2,c
  1980  000FB2  EFAA  F007         	goto	i2l2985
  1981  000FB6  0A07               	xorlw	7	; case 4
  1982  000FB8  B4D8               	btfsc	status,2,c
  1983  000FBA  EFAE  F007         	goto	i2l2989
  1984  000FBE  EFAE  F007         	goto	i2l2989
  1985  000FC2                     i2l509:
  1986                           
  1987                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  1988  000FC2  9601               	bcf	_i2c_status^0,3,c
  1989  000FC4                     
  1990                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
  1991  000FC4  C003  FFD9         	movff	_i2c_status+2,fsr2l
  1992  000FC8  C004  FFDA         	movff	_i2c_status+3,fsr2h
  1993  000FCC  4A03               	infsnz	(_i2c_status+2)^0,f,c
  1994  000FCE  2A04               	incf	(_i2c_status+3)^0,f,c
  1995  000FD0  50DF               	movf	indf2,w,c
  1996  000FD2  ECA5  F00A         	call	_i2c1_driver_TXData
  1997  000FD6                     
  1998                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  1999  000FD6  0605               	decf	(_i2c_status+4)^0,f,c
  2000  000FD8  A0D8               	btfss	status,0,c
  2001  000FDA  0606               	decf	(_i2c_status+5)^0,f,c
  2002  000FDC  5005               	movf	(_i2c_status+4)^0,w,c
  2003  000FDE  1006               	iorwf	(_i2c_status+5)^0,w,c
  2004  000FE0  A4D8               	btfss	status,2,c
  2005  000FE2  EFF5  F007         	goto	i2u86_41
  2006  000FE6  EFF7  F007         	goto	i2u86_40
  2007  000FEA                     i2u86_41:
  2008  000FEA  EFFA  F007         	goto	i2l3003
  2009  000FEE                     i2u86_40:
  2010  000FEE  0E06               	movlw	6
  2011  000FF0  EFFB  F007         	goto	i2l512
  2012  000FF4                     i2l3003:
  2013  000FF4  0E03               	movlw	3
  2014  000FF6                     i2l512:
  2015  000FF6  0012               	return		;funcret
  2016  000FF8                     __end_of_do_I2C_TX:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  2020 ;; Defined at:
  2021 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      enum E14701
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;Total ram usage:        2 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    3
  2042 ;; This function calls:
  2043 ;;		Absolute function
  2044 ;;		_do_I2C_SEND_RESTART
  2045 ;;		_do_I2C_SEND_STOP
  2046 ;;		_i2c_restartWrite
  2047 ;;		_rd1RegCompleteHandler
  2048 ;;		_rd2RegCompleteHandler
  2049 ;;		_rdBlkRegCompleteHandler
  2050 ;;		_returnReset
  2051 ;;		_returnStop
  2052 ;;		_wr1RegCompleteHandler
  2053 ;;		_wr2RegCompleteHandler
  2054 ;; This function is called by:
  2055 ;;		_i2c_ISR
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text17
  2060  0011A6                     __ptext17:
  2061                           	callstack 0
  2062  0011A6                     _do_I2C_DO_ADDRESS_NACK:
  2063                           	callstack 23
  2064  0011A6                     
  2065                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  2066  0011A6  9601               	bcf	_i2c_status^0,3,c
  2067  0011A8                     
  2068                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  2069  0011A8  0E02               	movlw	2
  2070  0011AA  6E0C               	movwf	(_i2c_status+11)^0,c
  2071                           
  2072                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  2073  0011AC  EFE0  F008         	goto	i2l2971
  2074  0011B0                     i2l2961:
  2075                           
  2076                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  2077  0011B0  EC99  F00A         	call	_do_I2C_SEND_RESTART	;wreg free
  2078  0011B4  EF07  F009         	goto	i2l504
  2079  0011B8                     i2l2965:
  2080                           
  2081                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  2082  0011B8  EC95  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  2083  0011BC  EF07  F009         	goto	i2l504
  2084  0011C0                     i2l2971:
  2085  0011C0  C023  F058         	movff	_i2c_status+34,rdBlkRegCompleteHandler@p
  2086  0011C4  C024  F059         	movff	_i2c_status+35,rdBlkRegCompleteHandler@p+1
  2087  0011C8  EE20  F013         	lfsr	2,_i2c_status+18
  2088  0011CC  D802               	call	i2u83_48
  2089  0011CE  EFF3  F008         	goto	i2u83_49
  2090  0011D2                     i2u83_48:
  2091  0011D2  0005               	push	
  2092  0011D4  6EFA               	movwf	pclath,c
  2093  0011D6  50DE               	movf	postinc2,w,c
  2094  0011D8  6EFD               	movwf	tosl,c
  2095  0011DA  50DE               	movf	postinc2,w,c
  2096  0011DC  6EFE               	movwf	tosh,c
  2097  0011DE  50DE               	movf	postinc2,w,c
  2098  0011E0  6EFF               	movwf	tosu,c
  2099  0011E2  50FA               	movf	pclath,w,c
  2100  0011E4  0012               	return		;indir
  2101  0011E6                     i2u83_49:
  2102  0011E6  6E4D               	movwf	??_do_I2C_DO_ADDRESS_NACK^0,c
  2103  0011E8  6A4E               	clrf	(??_do_I2C_DO_ADDRESS_NACK+1)^0,c
  2104                           
  2105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2106                           ; Switch size 1, requested type "simple"
  2107                           ; Number of cases is 1, Range of values is 0 to 0
  2108                           ; switch strategies available:
  2109                           ; Name         Instructions Cycles
  2110                           ; simple_byte            4     3 (average)
  2111                           ;	Chosen strategy is simple_byte
  2112  0011EA  504E               	movf	(??_do_I2C_DO_ADDRESS_NACK+1)^0,w,c
  2113  0011EC  0A00               	xorlw	0	; case 0
  2114  0011EE  B4D8               	btfsc	status,2,c
  2115  0011F0  EFFC  F008         	goto	i2l4307
  2116  0011F4  EFDC  F008         	goto	i2l2965
  2117  0011F8                     i2l4307:
  2118                           
  2119                           ; Switch size 1, requested type "simple"
  2120                           ; Number of cases is 2, Range of values is 2 to 3
  2121                           ; switch strategies available:
  2122                           ; Name         Instructions Cycles
  2123                           ; simple_byte            7     4 (average)
  2124                           ;	Chosen strategy is simple_byte
  2125  0011F8  504D               	movf	??_do_I2C_DO_ADDRESS_NACK^0,w,c
  2126  0011FA  0A02               	xorlw	2	; case 2
  2127  0011FC  B4D8               	btfsc	status,2,c
  2128  0011FE  EFD8  F008         	goto	i2l2961
  2129  001202  0A01               	xorlw	1	; case 3
  2130  001204  B4D8               	btfsc	status,2,c
  2131  001206  EFD8  F008         	goto	i2l2961
  2132  00120A  EFDC  F008         	goto	i2l2965
  2133  00120E                     i2l504:
  2134  00120E  0012               	return		;funcret
  2135  001210                     __end_of_do_I2C_DO_ADDRESS_NACK:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  2139 ;; Defined at:
  2140 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;		None
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      enum E14701
  2147 ;; Registers used:
  2148 ;;		wreg, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;Total ram usage:        0 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    1
  2161 ;; This function calls:
  2162 ;;		_i2c1_driver_sendNACK
  2163 ;; This function is called by:
  2164 ;;		_do_I2C_RX
  2165 ;;		_i2c_ISR
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text18
  2170  001512                     __ptext18:
  2171                           	callstack 0
  2172  001512                     _do_I2C_DO_NACK_RESTART:
  2173                           	callstack 24
  2174  001512                     
  2175                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
  2176  001512  ECB5  F00A         	call	_i2c1_driver_sendNACK	;wreg free
  2177  001516                     
  2178                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  2179  001516  0E09               	movlw	9
  2180  001518  0012               	return		;funcret
  2181  00151A                     __end_of_do_I2C_DO_NACK_RESTART:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  2185 ;; Defined at:
  2186 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      enum E14701
  2193 ;; Registers used:
  2194 ;;		wreg, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    1
  2207 ;; This function calls:
  2208 ;;		_i2c1_driver_sendNACK
  2209 ;; This function is called by:
  2210 ;;		_do_I2C_RX
  2211 ;;		_i2c_ISR
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text19
  2216  00151A                     __ptext19:
  2217                           	callstack 0
  2218  00151A                     _do_I2C_DO_NACK_STOP:
  2219                           	callstack 24
  2220  00151A                     
  2221                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
  2222  00151A  ECB5  F00A         	call	_i2c1_driver_sendNACK	;wreg free
  2223  00151E                     
  2224                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  2225  00151E  0E0A               	movlw	10
  2226  001520  0012               	return		;funcret
  2227  001522                     __end_of_do_I2C_DO_NACK_STOP:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _do_I2C_DO_ACK *****************
  2231 ;; Defined at:
  2232 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;		None
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      enum E14701
  2239 ;; Registers used:
  2240 ;;		wreg, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2250 ;;Total ram usage:        0 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    1
  2253 ;; This function calls:
  2254 ;;		_i2c1_driver_sendACK
  2255 ;; This function is called by:
  2256 ;;		_i2c_ISR
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text20
  2261  001522                     __ptext20:
  2262                           	callstack 0
  2263  001522                     _do_I2C_DO_ACK:
  2264                           	callstack 25
  2265  001522                     
  2266                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
  2267  001522  ECB8  F00A         	call	_i2c1_driver_sendACK	;wreg free
  2268  001526                     
  2269                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  2270  001526  0E05               	movlw	5
  2271  001528  0012               	return		;funcret
  2272  00152A                     __end_of_do_I2C_DO_ACK:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _do_I2C_RCEN *****************
  2276 ;; Defined at:
  2277 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      enum E14701
  2284 ;; Registers used:
  2285 ;;		wreg, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    1
  2298 ;; This function calls:
  2299 ;;		_i2c1_driver_startRX
  2300 ;; This function is called by:
  2301 ;;		_i2c_ISR
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text21
  2306  0014FE                     __ptext21:
  2307                           	callstack 0
  2308  0014FE                     _do_I2C_RCEN:
  2309                           	callstack 25
  2310  0014FE                     
  2311                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  2312  0014FE  9601               	bcf	_i2c_status^0,3,c
  2313  001500                     
  2314                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
  2315  001500  ECC5  F00A         	call	_i2c1_driver_startRX	;wreg free
  2316  001504                     
  2317                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  2318  001504  0E04               	movlw	4
  2319  001506  0012               	return		;funcret
  2320  001508                     __end_of_do_I2C_RCEN:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  2324 ;; Defined at:
  2325 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      enum E14701
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    1
  2346 ;; This function calls:
  2347 ;;		_i2c1_driver_TXData
  2348 ;; This function is called by:
  2349 ;;		_i2c_ISR
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text22
  2354  0014D4                     __ptext22:
  2355                           	callstack 0
  2356  0014D4                     _do_I2C_SEND_ADR_WRITE:
  2357                           	callstack 25
  2358  0014D4                     
  2359                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  2360  0014D4  8601               	bsf	_i2c_status^0,3,c
  2361  0014D6                     
  2362                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
  2363  0014D6  5002               	movf	(_i2c_status+1)^0,w,c
  2364  0014D8  2402               	addwf	(_i2c_status+1)^0,w,c
  2365  0014DA  ECA5  F00A         	call	_i2c1_driver_TXData
  2366  0014DE                     
  2367                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  2368  0014DE  0E03               	movlw	3
  2369  0014E0  0012               	return		;funcret
  2370  0014E2                     __end_of_do_I2C_SEND_ADR_WRITE:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  2374 ;; Defined at:
  2375 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      enum E14701
  2382 ;; Registers used:
  2383 ;;		wreg, status,0, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    1
  2396 ;; This function calls:
  2397 ;;		_i2c1_driver_TXData
  2398 ;; This function is called by:
  2399 ;;		_i2c_ISR
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text23
  2404  0014E2                     __ptext23:
  2405                           	callstack 0
  2406  0014E2                     _do_I2C_SEND_ADR_READ:
  2407                           	callstack 25
  2408  0014E2                     
  2409                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  2410  0014E2  8601               	bsf	_i2c_status^0,3,c
  2411  0014E4                     
  2412                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
  2413  0014E4  80D8               	bsf	status,0,c
  2414  0014E6  3402               	rlcf	(_i2c_status+1)^0,w,c
  2415  0014E8  ECA5  F00A         	call	_i2c1_driver_TXData
  2416  0014EC                     
  2417                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  2418  0014EC  0E05               	movlw	5
  2419  0014EE  0012               	return		;funcret
  2420  0014F0                     __end_of_do_I2C_SEND_ADR_READ:
  2421                           	callstack 0
  2422                           
  2423 ;; *************** function _do_I2C_SEND_STOP *****************
  2424 ;; Defined at:
  2425 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      enum E14701
  2432 ;; Registers used:
  2433 ;;		wreg, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;Total ram usage:        0 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    1
  2446 ;; This function calls:
  2447 ;;		_i2c1_driver_stop
  2448 ;; This function is called by:
  2449 ;;		_do_I2C_DO_ADDRESS_NACK
  2450 ;;		_do_I2C_TX
  2451 ;;		_do_I2C_TX_EMPTY
  2452 ;;		_i2c_ISR
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text24
  2457  00152A                     __ptext24:
  2458                           	callstack 0
  2459  00152A                     _do_I2C_SEND_STOP:
  2460                           	callstack 24
  2461  00152A                     
  2462                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
  2463  00152A  ECCD  F00A         	call	_i2c1_driver_stop	;wreg free
  2464  00152E                     
  2465                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
  2466  00152E  0E00               	movlw	0
  2467  001530  0012               	return		;funcret
  2468  001532                     __end_of_do_I2C_SEND_STOP:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _do_I2C_SEND_RESTART *****************
  2472 ;; Defined at:
  2473 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      enum E14701
  2480 ;; Registers used:
  2481 ;;		wreg, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2491 ;;Total ram usage:        0 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    1
  2494 ;; This function calls:
  2495 ;;		_i2c1_driver_restart
  2496 ;; This function is called by:
  2497 ;;		_do_I2C_DO_ADDRESS_NACK
  2498 ;;		_do_I2C_TX_EMPTY
  2499 ;;		_i2c_ISR
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text25
  2504  001532                     __ptext25:
  2505                           	callstack 0
  2506  001532                     _do_I2C_SEND_RESTART:
  2507                           	callstack 24
  2508  001532                     
  2509                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
  2510  001532  ECCF  F00A         	call	_i2c1_driver_restart	;wreg free
  2511  001536                     
  2512                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
  2513  001536  0E01               	movlw	1
  2514  001538  0012               	return		;funcret
  2515  00153A                     __end_of_do_I2C_SEND_RESTART:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  2519 ;; Defined at:
  2520 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      enum E14701
  2527 ;; Registers used:
  2528 ;;		wreg, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;Total ram usage:        0 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    1
  2541 ;; This function calls:
  2542 ;;		_i2c1_driver_restart
  2543 ;; This function is called by:
  2544 ;;		_do_I2C_TX
  2545 ;;		_i2c_ISR
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text26
  2550  00153A                     __ptext26:
  2551                           	callstack 0
  2552  00153A                     _do_I2C_SEND_RESTART_WRITE:
  2553                           	callstack 24
  2554  00153A                     
  2555                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
  2556  00153A  ECCF  F00A         	call	_i2c1_driver_restart	;wreg free
  2557  00153E                     
  2558                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
  2559  00153E  0E02               	movlw	2
  2560  001540  0012               	return		;funcret
  2561  001542                     __end_of_do_I2C_SEND_RESTART_WRITE:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  2565 ;; Defined at:
  2566 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      enum E14701
  2573 ;; Registers used:
  2574 ;;		wreg, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;Total ram usage:        0 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    1
  2587 ;; This function calls:
  2588 ;;		_i2c1_driver_restart
  2589 ;; This function is called by:
  2590 ;;		_do_I2C_TX
  2591 ;;		_i2c_ISR
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text27
  2596  001542                     __ptext27:
  2597                           	callstack 0
  2598  001542                     _do_I2C_SEND_RESTART_READ:
  2599                           	callstack 24
  2600  001542                     
  2601                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
  2602  001542  ECCF  F00A         	call	_i2c1_driver_restart	;wreg free
  2603  001546                     
  2604                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
  2605  001546  0E01               	movlw	1
  2606  001548  0012               	return		;funcret
  2607  00154A                     __end_of_do_I2C_SEND_RESTART_READ:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _do_I2C_IDLE *****************
  2611 ;; Defined at:
  2612 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      enum E14701
  2619 ;; Registers used:
  2620 ;;		wreg, status,2
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_i2c_ISR
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text28
  2640  001508                     __ptext28:
  2641                           	callstack 0
  2642  001508                     _do_I2C_IDLE:
  2643                           	callstack 26
  2644  001508                     
  2645                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
  2646  001508  9001               	bcf	_i2c_status^0,0,c
  2647  00150A                     
  2648                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
  2649  00150A  0E00               	movlw	0
  2650  00150C  6E0C               	movwf	(_i2c_status+11)^0,c
  2651  00150E                     
  2652                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
  2653  00150E  0E0E               	movlw	14
  2654  001510  0012               	return		;funcret
  2655  001512                     __end_of_do_I2C_IDLE:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _do_I2C_RESET *****************
  2659 ;; Defined at:
  2660 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      enum E14701
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    1
  2681 ;; This function calls:
  2682 ;;		_i2c1_driver_resetBus
  2683 ;; This function is called by:
  2684 ;;		_i2c_ISR
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text29
  2689  0014F0                     __ptext29:
  2690                           	callstack 0
  2691  0014F0                     _do_I2C_RESET:
  2692                           	callstack 25
  2693  0014F0                     
  2694                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
  2695  0014F0  ECD1  F00A         	call	_i2c1_driver_resetBus	;wreg free
  2696  0014F4                     
  2697                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
  2698  0014F4  9001               	bcf	_i2c_status^0,0,c
  2699  0014F6                     
  2700                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
  2701  0014F6  0E00               	movlw	0
  2702  0014F8  6E0C               	movwf	(_i2c_status+11)^0,c
  2703  0014FA                     
  2704                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
  2705  0014FA  0E0E               	movlw	14
  2706  0014FC  0012               	return		;funcret
  2707  0014FE                     __end_of_do_I2C_RESET:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _do_I2C_TX_EMPTY *****************
  2711 ;; Defined at:
  2712 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      enum E14701
  2719 ;; Registers used:
  2720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2730 ;;Total ram usage:        2 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    3
  2733 ;; This function calls:
  2734 ;;		Absolute function
  2735 ;;		_do_I2C_SEND_RESTART
  2736 ;;		_do_I2C_SEND_STOP
  2737 ;;		_i2c_restartWrite
  2738 ;;		_mssp1_setIRQ
  2739 ;;		_rd1RegCompleteHandler
  2740 ;;		_rd2RegCompleteHandler
  2741 ;;		_rdBlkRegCompleteHandler
  2742 ;;		_returnReset
  2743 ;;		_returnStop
  2744 ;;		_wr1RegCompleteHandler
  2745 ;;		_wr2RegCompleteHandler
  2746 ;; This function is called by:
  2747 ;;		_i2c_ISR
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text30
  2752  001126                     __ptext30:
  2753                           	callstack 0
  2754  001126                     _do_I2C_TX_EMPTY:
  2755                           	callstack 23
  2756  001126                     
  2757                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
  2758  001126  8401               	bsf	_i2c_status^0,2,c
  2759                           
  2760                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  2761  001128  EFA3  F008         	goto	i2l3059
  2762  00112C                     i2l3043:
  2763                           
  2764                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
  2765  00112C  EC99  F00A         	call	_do_I2C_SEND_RESTART	;wreg free
  2766  001130  EFD2  F008         	goto	i2l540
  2767  001134                     i2l3047:
  2768                           
  2769                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
  2770  001134  ECB2  F00A         	call	_mssp1_setIRQ	;wreg free
  2771  001138                     
  2772                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
  2773  001138  0E03               	movlw	3
  2774  00113A  EFD2  F008         	goto	i2l540
  2775  00113E                     i2l3053:
  2776                           
  2777                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
  2778  00113E  EC95  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  2779  001142  EFD2  F008         	goto	i2l540
  2780  001146                     i2l3059:
  2781  001146  C01F  F058         	movff	_i2c_status+30,rdBlkRegCompleteHandler@p
  2782  00114A  C020  F059         	movff	_i2c_status+31,rdBlkRegCompleteHandler@p+1
  2783  00114E  EE20  F00D         	lfsr	2,_i2c_status+12
  2784  001152  D802               	call	i2u89_48
  2785  001154  EFB6  F008         	goto	i2u89_49
  2786  001158                     i2u89_48:
  2787  001158  0005               	push	
  2788  00115A  6EFA               	movwf	pclath,c
  2789  00115C  50DE               	movf	postinc2,w,c
  2790  00115E  6EFD               	movwf	tosl,c
  2791  001160  50DE               	movf	postinc2,w,c
  2792  001162  6EFE               	movwf	tosh,c
  2793  001164  50DE               	movf	postinc2,w,c
  2794  001166  6EFF               	movwf	tosu,c
  2795  001168  50FA               	movf	pclath,w,c
  2796  00116A  0012               	return		;indir
  2797  00116C                     i2u89_49:
  2798  00116C  6E4D               	movwf	??_do_I2C_TX_EMPTY^0,c
  2799  00116E  6A4E               	clrf	(??_do_I2C_TX_EMPTY+1)^0,c
  2800                           
  2801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2802                           ; Switch size 1, requested type "simple"
  2803                           ; Number of cases is 1, Range of values is 0 to 0
  2804                           ; switch strategies available:
  2805                           ; Name         Instructions Cycles
  2806                           ; simple_byte            4     3 (average)
  2807                           ;	Chosen strategy is simple_byte
  2808  001170  504E               	movf	(??_do_I2C_TX_EMPTY+1)^0,w,c
  2809  001172  0A00               	xorlw	0	; case 0
  2810  001174  B4D8               	btfsc	status,2,c
  2811  001176  EFBF  F008         	goto	i2l4309
  2812  00117A  EF9F  F008         	goto	i2l3053
  2813  00117E                     i2l4309:
  2814                           
  2815                           ; Switch size 1, requested type "simple"
  2816                           ; Number of cases is 4, Range of values is 1 to 4
  2817                           ; switch strategies available:
  2818                           ; Name         Instructions Cycles
  2819                           ; simple_byte           13     7 (average)
  2820                           ;	Chosen strategy is simple_byte
  2821  00117E  504D               	movf	??_do_I2C_TX_EMPTY^0,w,c
  2822  001180  0A01               	xorlw	1	; case 1
  2823  001182  B4D8               	btfsc	status,2,c
  2824  001184  EF9F  F008         	goto	i2l3053
  2825  001188  0A03               	xorlw	3	; case 2
  2826  00118A  B4D8               	btfsc	status,2,c
  2827  00118C  EF96  F008         	goto	i2l3043
  2828  001190  0A01               	xorlw	1	; case 3
  2829  001192  B4D8               	btfsc	status,2,c
  2830  001194  EF96  F008         	goto	i2l3043
  2831  001198  0A07               	xorlw	7	; case 4
  2832  00119A  B4D8               	btfsc	status,2,c
  2833  00119C  EF9A  F008         	goto	i2l3047
  2834  0011A0  EF9F  F008         	goto	i2l3053
  2835  0011A4                     i2l540:
  2836  0011A4  0012               	return		;funcret
  2837  0011A6                     __end_of_do_I2C_TX_EMPTY:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _mssp1_setIRQ *****************
  2841 ;; Defined at:
  2842 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		None
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_do_I2C_TX_EMPTY
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text31
  2870  001564                     __ptext31:
  2871                           	callstack 0
  2872  001564                     _mssp1_setIRQ:
  2873                           	callstack 25
  2874  001564                     
  2875                           ;mcc_generated_files/i2c1_driver.c: 61:     else
  2876  001564  010E               	movlb	14	; () banked
  2877  001566  8136               	bsf	54,0,b	;volatile
  2878  001568                     
  2879                           ; BSR set to: 14
  2880  001568  0012               	return		;funcret
  2881  00156A                     __end_of_mssp1_setIRQ:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _i2c1_driver_isNACK *****************
  2885 ;; Defined at:
  2886 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;		None               void
  2893 ;; Registers used:
  2894 ;;		wreg, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;Total ram usage:        1 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_do_I2C_TX
  2910 ;;		_i2c_ISR
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text32
  2915  00147A                     __ptext32:
  2916                           	callstack 0
  2917  00147A                     _i2c1_driver_isNACK:
  2918                           	callstack 26
  2919  00147A                     
  2920                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
  2921  00147A  BC96               	btfsc	150,6,c	;volatile
  2922  00147C  EF42  F00A         	goto	i2u4_41
  2923  001480  EF46  F00A         	goto	i2u4_40
  2924  001484                     i2u4_41:
  2925  001484  6A4D               	clrf	??_i2c1_driver_isNACK^0,c
  2926  001486  2A4D               	incf	??_i2c1_driver_isNACK^0,f,c
  2927  001488  EF47  F00A         	goto	i2u4_48
  2928  00148C                     i2u4_40:
  2929  00148C  6A4D               	clrf	??_i2c1_driver_isNACK^0,c
  2930  00148E                     i2u4_48:
  2931  00148E  304D               	rrcf	??_i2c1_driver_isNACK^0,w,c
  2932  001490  0012               	return		;funcret
  2933  001492                     __end_of_i2c1_driver_isNACK:
  2934                           	callstack 0
  2935                           
  2936 ;; *************** function _i2c1_driver_TXData *****************
  2937 ;; Defined at:
  2938 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  d               1    wreg     unsigned char 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  d               1    0[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;Total ram usage:        1 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_do_I2C_SEND_ADR_READ
  2962 ;;		_do_I2C_SEND_ADR_WRITE
  2963 ;;		_do_I2C_TX
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text33
  2968  00154A                     __ptext33:
  2969                           	callstack 0
  2970  00154A                     _i2c1_driver_TXData:
  2971                           	callstack 25
  2972                           
  2973                           ;incstack = 0
  2974                           ;i2c1_driver_TXData@d stored from wreg
  2975  00154A  6E4D               	movwf	i2c1_driver_TXData@d^0,c
  2976  00154C                     
  2977                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
  2978  00154C  C04D  FF91         	movff	i2c1_driver_TXData@d,3985	;volatile
  2979  001550  0012               	return		;funcret
  2980  001552                     __end_of_i2c1_driver_TXData:
  2981                           	callstack 0
  2982                           
  2983 ;; *************** function _i2c1_driver_getRXData *****************
  2984 ;; Defined at:
  2985 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      unsigned char 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_do_I2C_RX
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text34
  3013  001586                     __ptext34:
  3014                           	callstack 0
  3015  001586                     _i2c1_driver_getRXData:
  3016                           	callstack 25
  3017  001586                     
  3018                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
  3019  001586  5091               	movf	145,w,c	;volatile
  3020  001588  0012               	return		;funcret
  3021  00158A                     __end_of_i2c1_driver_getRXData:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function _i2c1_driver_sendNACK *****************
  3025 ;; Defined at:
  3026 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		None
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_do_I2C_DO_NACK_STOP
  3050 ;;		_do_I2C_DO_NACK_RESTART
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text35
  3055  00156A                     __ptext35:
  3056                           	callstack 0
  3057  00156A                     _i2c1_driver_sendNACK:
  3058                           	callstack 24
  3059  00156A                     
  3060                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
  3061  00156A  8A96               	bsf	150,5,c	;volatile
  3062                           
  3063                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
  3064  00156C  8896               	bsf	150,4,c	;volatile
  3065  00156E  0012               	return		;funcret
  3066  001570                     __end_of_i2c1_driver_sendNACK:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _i2c1_driver_resetBus *****************
  3070 ;; Defined at:
  3071 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		None
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_do_I2C_RESET
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text36
  3099  0015A2                     __ptext36:
  3100                           	callstack 0
  3101  0015A2                     _i2c1_driver_resetBus:
  3102                           	callstack 25
  3103  0015A2  0012               	return		;funcret
  3104  0015A4                     __end_of_i2c1_driver_resetBus:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _i2c1_driver_startRX *****************
  3108 ;; Defined at:
  3109 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		None
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_do_I2C_RCEN
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text37
  3137  00158A                     __ptext37:
  3138                           	callstack 0
  3139  00158A                     _i2c1_driver_startRX:
  3140                           	callstack 25
  3141  00158A                     
  3142                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
  3143  00158A  8696               	bsf	150,3,c	;volatile
  3144  00158C  0012               	return		;funcret
  3145  00158E                     __end_of_i2c1_driver_startRX:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _rdBlkRegCompleteHandler *****************
  3149 ;; Defined at:
  3150 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  p               2   11[COMRAM] PTR void 
  3153 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3154 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      enum E360
  3159 ;; Registers used:
  3160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    2
  3173 ;; This function calls:
  3174 ;;		_i2c_setBuffer
  3175 ;;		_i2c_setDataCompleteCallback
  3176 ;; This function is called by:
  3177 ;;		_i2c_readDataBlock
  3178 ;;		_do_I2C_DO_ADDRESS_NACK
  3179 ;;		_do_I2C_TX
  3180 ;;		_do_I2C_RX
  3181 ;;		_do_I2C_TX_EMPTY
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text38
  3186  0012C2                     __ptext38:
  3187                           	callstack 0
  3188  0012C2                     _rdBlkRegCompleteHandler:
  3189                           	callstack 23
  3190  0012C2                     
  3191                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
  3192  0012C2  EE20 F002          	lfsr	2,2
  3193  0012C6  5058               	movf	rdBlkRegCompleteHandler@p^0,w,c
  3194  0012C8  26D9               	addwf	fsr2l,f,c
  3195  0012CA  5059               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
  3196  0012CC  22DA               	addwfc	fsr2h,f,c
  3197  0012CE  CFDE F04D          	movff	postinc2,i2c_setBuffer@buffer
  3198  0012D2  CFDD F04E          	movff	postdec2,i2c_setBuffer@buffer+1
  3199  0012D6  C058  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
  3200  0012DA  C059  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
  3201  0012DE  CFDE F04F          	movff	postinc2,i2c_setBuffer@bufferSize
  3202  0012E2  CFDD F050          	movff	postdec2,i2c_setBuffer@bufferSize+1
  3203  0012E6  EC04  F00A         	call	_i2c_setBuffer	;wreg free
  3204  0012EA                     
  3205                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
  3206  0012EA  0E00               	movlw	0
  3207  0012EC  6E53               	movwf	i2c_setDataCompleteCallback@cb^0,c
  3208  0012EE  0E00               	movlw	0
  3209  0012F0  6E54               	movwf	(i2c_setDataCompleteCallback@cb+1)^0,c
  3210  0012F2  0E00               	movlw	0
  3211  0012F4  6E55               	movwf	(i2c_setDataCompleteCallback@cb+2)^0,c
  3212  0012F6  0E00               	movlw	0
  3213  0012F8  6E56               	movwf	i2c_setDataCompleteCallback@p^0,c
  3214  0012FA  0E00               	movlw	0
  3215  0012FC  6E57               	movwf	(i2c_setDataCompleteCallback@p+1)^0,c
  3216  0012FE  EC23  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3217  001302                     
  3218                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
  3219  001302  0E02               	movlw	2
  3220  001304  0012               	return		;funcret
  3221  001306                     __end_of_rdBlkRegCompleteHandler:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _rd2RegCompleteHandler *****************
  3225 ;; Defined at:
  3226 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  p               2   11[COMRAM] PTR void 
  3229 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3230 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      enum E360
  3235 ;; Registers used:
  3236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;Total ram usage:        2 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    2
  3249 ;; This function calls:
  3250 ;;		_i2c_setBuffer
  3251 ;;		_i2c_setDataCompleteCallback
  3252 ;; This function is called by:
  3253 ;;		_i2c_read2ByteRegister
  3254 ;;		_do_I2C_DO_ADDRESS_NACK
  3255 ;;		_do_I2C_TX
  3256 ;;		_do_I2C_RX
  3257 ;;		_do_I2C_TX_EMPTY
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text39
  3262  001348                     __ptext39:
  3263                           	callstack 0
  3264  001348                     _rd2RegCompleteHandler:
  3265                           	callstack 23
  3266  001348                     
  3267                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
  3268  001348  C058  F04D         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
  3269  00134C  C059  F04E         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  3270  001350  0E00               	movlw	0
  3271  001352  6E50               	movwf	(i2c_setBuffer@bufferSize+1)^0,c
  3272  001354  0E02               	movlw	2
  3273  001356  6E4F               	movwf	i2c_setBuffer@bufferSize^0,c
  3274  001358  EC04  F00A         	call	_i2c_setBuffer	;wreg free
  3275  00135C                     
  3276                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  3277  00135C  0E00               	movlw	0
  3278  00135E  6E53               	movwf	i2c_setDataCompleteCallback@cb^0,c
  3279  001360  0E00               	movlw	0
  3280  001362  6E54               	movwf	(i2c_setDataCompleteCallback@cb+1)^0,c
  3281  001364  0E00               	movlw	0
  3282  001366  6E55               	movwf	(i2c_setDataCompleteCallback@cb+2)^0,c
  3283  001368  0E00               	movlw	0
  3284  00136A  6E56               	movwf	i2c_setDataCompleteCallback@p^0,c
  3285  00136C  0E00               	movlw	0
  3286  00136E  6E57               	movwf	(i2c_setDataCompleteCallback@p+1)^0,c
  3287  001370  EC23  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3288  001374                     
  3289                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
  3290  001374  0E02               	movlw	2
  3291  001376  0012               	return		;funcret
  3292  001378                     __end_of_rd2RegCompleteHandler:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function _rd1RegCompleteHandler *****************
  3296 ;; Defined at:
  3297 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  p               2   11[COMRAM] PTR void 
  3300 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3301 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      enum E360
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;Total ram usage:        2 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    2
  3320 ;; This function calls:
  3321 ;;		_i2c_setBuffer
  3322 ;;		_i2c_setDataCompleteCallback
  3323 ;; This function is called by:
  3324 ;;		_i2c_read1ByteRegister
  3325 ;;		_do_I2C_DO_ADDRESS_NACK
  3326 ;;		_do_I2C_TX
  3327 ;;		_do_I2C_RX
  3328 ;;		_do_I2C_TX_EMPTY
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text40
  3333  001378                     __ptext40:
  3334                           	callstack 0
  3335  001378                     _rd1RegCompleteHandler:
  3336                           	callstack 23
  3337  001378                     
  3338                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
  3339  001378  C058  F04D         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
  3340  00137C  C059  F04E         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  3341  001380  0E00               	movlw	0
  3342  001382  6E50               	movwf	(i2c_setBuffer@bufferSize+1)^0,c
  3343  001384  0E01               	movlw	1
  3344  001386  6E4F               	movwf	i2c_setBuffer@bufferSize^0,c
  3345  001388  EC04  F00A         	call	_i2c_setBuffer	;wreg free
  3346  00138C                     
  3347                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  3348  00138C  0E00               	movlw	0
  3349  00138E  6E53               	movwf	i2c_setDataCompleteCallback@cb^0,c
  3350  001390  0E00               	movlw	0
  3351  001392  6E54               	movwf	(i2c_setDataCompleteCallback@cb+1)^0,c
  3352  001394  0E00               	movlw	0
  3353  001396  6E55               	movwf	(i2c_setDataCompleteCallback@cb+2)^0,c
  3354  001398  0E00               	movlw	0
  3355  00139A  6E56               	movwf	i2c_setDataCompleteCallback@p^0,c
  3356  00139C  0E00               	movlw	0
  3357  00139E  6E57               	movwf	(i2c_setDataCompleteCallback@p+1)^0,c
  3358  0013A0  EC23  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3359  0013A4                     
  3360                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
  3361  0013A4  0E02               	movlw	2
  3362  0013A6  0012               	return		;funcret
  3363  0013A8                     __end_of_rd1RegCompleteHandler:
  3364                           	callstack 0
  3365                           
  3366 ;; *************** function _wr1RegCompleteHandler *****************
  3367 ;; Defined at:
  3368 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  p               2   11[COMRAM] PTR void 
  3371 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3372 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      enum E360
  3377 ;; Registers used:
  3378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;Total ram usage:        2 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    2
  3391 ;; This function calls:
  3392 ;;		_i2c_setBuffer
  3393 ;;		_i2c_setDataCompleteCallback
  3394 ;; This function is called by:
  3395 ;;		_i2c_write1ByteRegister
  3396 ;;		_do_I2C_DO_ADDRESS_NACK
  3397 ;;		_do_I2C_TX
  3398 ;;		_do_I2C_RX
  3399 ;;		_do_I2C_TX_EMPTY
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text41
  3404  0013A8                     __ptext41:
  3405                           	callstack 0
  3406  0013A8                     _wr1RegCompleteHandler:
  3407                           	callstack 23
  3408  0013A8                     
  3409                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
  3410  0013A8  C058  F04D         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
  3411  0013AC  C059  F04E         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  3412  0013B0  0E00               	movlw	0
  3413  0013B2  6E50               	movwf	(i2c_setBuffer@bufferSize+1)^0,c
  3414  0013B4  0E01               	movlw	1
  3415  0013B6  6E4F               	movwf	i2c_setBuffer@bufferSize^0,c
  3416  0013B8  EC04  F00A         	call	_i2c_setBuffer	;wreg free
  3417  0013BC                     
  3418                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
  3419  0013BC  0E00               	movlw	0
  3420  0013BE  6E53               	movwf	i2c_setDataCompleteCallback@cb^0,c
  3421  0013C0  0E00               	movlw	0
  3422  0013C2  6E54               	movwf	(i2c_setDataCompleteCallback@cb+1)^0,c
  3423  0013C4  0E00               	movlw	0
  3424  0013C6  6E55               	movwf	(i2c_setDataCompleteCallback@cb+2)^0,c
  3425  0013C8  0E00               	movlw	0
  3426  0013CA  6E56               	movwf	i2c_setDataCompleteCallback@p^0,c
  3427  0013CC  0E00               	movlw	0
  3428  0013CE  6E57               	movwf	(i2c_setDataCompleteCallback@p+1)^0,c
  3429  0013D0  EC23  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3430  0013D4                     
  3431                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
  3432  0013D4  0E04               	movlw	4
  3433  0013D6  0012               	return		;funcret
  3434  0013D8                     __end_of_wr1RegCompleteHandler:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _i2c_restartWrite *****************
  3438 ;; Defined at:
  3439 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  p               2   11[COMRAM] PTR void 
  3442 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3443 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      enum E360
  3448 ;; Registers used:
  3449 ;;		wreg
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;Total ram usage:        2 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_i2c_write1ByteRegister
  3465 ;;		_i2c_writeNBytes
  3466 ;;		_i2c_read1ByteRegister
  3467 ;;		_i2c_read2ByteRegister
  3468 ;;		_i2c_write2ByteRegister
  3469 ;;		_i2c_readDataBlock
  3470 ;;		_do_I2C_DO_ADDRESS_NACK
  3471 ;;		_do_I2C_TX
  3472 ;;		_do_I2C_RX
  3473 ;;		_do_I2C_TX_EMPTY
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text42
  3478  00158E                     __ptext42:
  3479                           	callstack 0
  3480  00158E                     _i2c_restartWrite:
  3481                           	callstack 25
  3482  00158E                     
  3483                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
  3484  00158E  0E03               	movlw	3
  3485  001590  0012               	return		;funcret
  3486  001592                     __end_of_i2c_restartWrite:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function _returnReset *****************
  3490 ;; Defined at:
  3491 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  p               2   11[COMRAM] PTR void 
  3494 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3495 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      enum E14547
  3500 ;; Registers used:
  3501 ;;		wreg
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3511 ;;Total ram usage:        2 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_i2c_open
  3517 ;;		_do_I2C_DO_ADDRESS_NACK
  3518 ;;		_do_I2C_TX
  3519 ;;		_do_I2C_RX
  3520 ;;		_do_I2C_TX_EMPTY
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text43
  3525  001592                     __ptext43:
  3526                           	callstack 0
  3527  001592                     _returnReset:
  3528                           	callstack 25
  3529  001592                     
  3530                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
  3531  001592  0E05               	movlw	5
  3532  001594  0012               	return		;funcret
  3533  001596                     __end_of_returnReset:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _returnStop *****************
  3537 ;; Defined at:
  3538 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  p               2   11[COMRAM] PTR void 
  3541 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3542 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      enum E14547
  3547 ;; Registers used:
  3548 ;;		wreg
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;Total ram usage:        2 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_setCallBack
  3564 ;;		_i2c_open
  3565 ;;		_do_I2C_DO_ADDRESS_NACK
  3566 ;;		_do_I2C_TX
  3567 ;;		_do_I2C_RX
  3568 ;;		_do_I2C_TX_EMPTY
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text44
  3573  001596                     __ptext44:
  3574                           	callstack 0
  3575  001596                     _returnStop:
  3576                           	callstack 25
  3577  001596                     
  3578                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
  3579  001596  0E01               	movlw	1
  3580  001598  0012               	return		;funcret
  3581  00159A                     __end_of_returnStop:
  3582                           	callstack 0
  3583                           
  3584 ;; *************** function _wr2RegCompleteHandler *****************
  3585 ;; Defined at:
  3586 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  p               2   11[COMRAM] PTR void 
  3589 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3590 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      enum E360
  3595 ;; Registers used:
  3596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;Total ram usage:        2 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    2
  3609 ;; This function calls:
  3610 ;;		_i2c_setBuffer
  3611 ;;		_i2c_setDataCompleteCallback
  3612 ;; This function is called by:
  3613 ;;		_i2c_write2ByteRegister
  3614 ;;		_do_I2C_DO_ADDRESS_NACK
  3615 ;;		_do_I2C_TX
  3616 ;;		_do_I2C_RX
  3617 ;;		_do_I2C_TX_EMPTY
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text45
  3622  0013D8                     __ptext45:
  3623                           	callstack 0
  3624  0013D8                     _wr2RegCompleteHandler:
  3625                           	callstack 23
  3626  0013D8                     
  3627                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
  3628  0013D8  C058  F04D         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
  3629  0013DC  C059  F04E         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  3630  0013E0  0E00               	movlw	0
  3631  0013E2  6E50               	movwf	(i2c_setBuffer@bufferSize+1)^0,c
  3632  0013E4  0E02               	movlw	2
  3633  0013E6  6E4F               	movwf	i2c_setBuffer@bufferSize^0,c
  3634  0013E8  EC04  F00A         	call	_i2c_setBuffer	;wreg free
  3635  0013EC                     
  3636                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
  3637  0013EC  0E00               	movlw	0
  3638  0013EE  6E53               	movwf	i2c_setDataCompleteCallback@cb^0,c
  3639  0013F0  0E00               	movlw	0
  3640  0013F2  6E54               	movwf	(i2c_setDataCompleteCallback@cb+1)^0,c
  3641  0013F4  0E00               	movlw	0
  3642  0013F6  6E55               	movwf	(i2c_setDataCompleteCallback@cb+2)^0,c
  3643  0013F8  0E00               	movlw	0
  3644  0013FA  6E56               	movwf	i2c_setDataCompleteCallback@p^0,c
  3645  0013FC  0E00               	movlw	0
  3646  0013FE  6E57               	movwf	(i2c_setDataCompleteCallback@p+1)^0,c
  3647  001400  EC23  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3648  001404                     
  3649                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
  3650  001404  0E04               	movlw	4
  3651  001406  0012               	return		;funcret
  3652  001408                     __end_of_wr2RegCompleteHandler:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _i2c_setDataCompleteCallback *****************
  3656 ;; Defined at:
  3657 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  cb              3    6[COMRAM] PTR FTN(PTR void ,)enum 
  3660 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  3661 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  3662 ;;  p               2    9[COMRAM] PTR void 
  3663 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3664 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3676 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;Total ram usage:        5 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    1
  3683 ;; This function calls:
  3684 ;;		_setCallBack
  3685 ;; This function is called by:
  3686 ;;		_wr1RegCompleteHandler
  3687 ;;		_rd1RegCompleteHandler
  3688 ;;		_rd2RegCompleteHandler
  3689 ;;		_wr2RegCompleteHandler
  3690 ;;		_rdBlkRegCompleteHandler
  3691 ;;		_i2c_write1ByteRegister
  3692 ;;		_i2c_read1ByteRegister
  3693 ;;		_i2c_read2ByteRegister
  3694 ;;		_i2c_write2ByteRegister
  3695 ;;		_i2c_readDataBlock
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text46
  3700  001446                     __ptext46:
  3701                           	callstack 0
  3702  001446                     _i2c_setDataCompleteCallback:
  3703                           	callstack 23
  3704  001446                     
  3705                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
  3706  001446  C053  F04D         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
  3707  00144A  C054  F04E         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
  3708  00144E  C055  F04F         	movff	i2c_setDataCompleteCallback@cb+2,setCallBack@cb+2
  3709  001452  C056  F050         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
  3710  001456  C057  F051         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
  3711  00145A  0E00               	movlw	0
  3712  00145C  EC51  F008         	call	_setCallBack
  3713  001460  0012               	return		;funcret
  3714  001462                     __end_of_i2c_setDataCompleteCallback:
  3715                           	callstack 0
  3716                           
  3717 ;; *************** function _setCallBack *****************
  3718 ;; Defined at:
  3719 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  idx             1    wreg     enum E14719
  3722 ;;  cb              3    0[COMRAM] PTR FTN(PTR void ,)enum 
  3723 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  3724 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  3725 ;;  p               2    3[COMRAM] PTR void 
  3726 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3727 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  idx             1    5[COMRAM] enum E14719
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3739 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3743 ;;Total ram usage:        6 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_i2c_setDataCompleteCallback
  3749 ;;		_i2c_setWriteCollisionCallback
  3750 ;;		_i2c_setAddressNACKCallback
  3751 ;;		_i2c_setDataNACKCallback
  3752 ;;		_i2c_setTimeOutCallback
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text47
  3757  0010A2                     __ptext47:
  3758                           	callstack 0
  3759  0010A2                     _setCallBack:
  3760                           	callstack 23
  3761                           
  3762                           ;incstack = 0
  3763                           ;setCallBack@idx stored from wreg
  3764  0010A2  6E52               	movwf	setCallBack@idx^0,c
  3765  0010A4                     
  3766                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
  3767  0010A4  504D               	movf	setCallBack@cb^0,w,c
  3768  0010A6  104E               	iorwf	(setCallBack@cb+1)^0,w,c
  3769  0010A8  104F               	iorwf	(setCallBack@cb+2)^0,w,c
  3770  0010AA  B4D8               	btfsc	status,2,c
  3771  0010AC  EF5A  F008         	goto	i2u55_41
  3772  0010B0  EF5C  F008         	goto	i2u55_40
  3773  0010B4                     i2u55_41:
  3774  0010B4  EF78  F008         	goto	i2l2707
  3775  0010B8                     i2u55_40:
  3776  0010B8                     
  3777                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
  3778  0010B8  5052               	movf	setCallBack@idx^0,w,c
  3779  0010BA  0D03               	mullw	3
  3780  0010BC  0E0D               	movlw	low (_i2c_status+12)
  3781  0010BE  24F3               	addwf	243,w,c
  3782  0010C0  6ED9               	movwf	fsr2l,c
  3783  0010C2  0E00               	movlw	high (_i2c_status+12)
  3784  0010C4  20F4               	addwfc	prodh,w,c
  3785  0010C6  6EDA               	movwf	fsr2h,c
  3786  0010C8  C04D  FFDE         	movff	setCallBack@cb,postinc2
  3787  0010CC  C04E  FFDE         	movff	setCallBack@cb+1,postinc2
  3788  0010D0  C04F  FFDE         	movff	setCallBack@cb+2,postinc2
  3789                           
  3790                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
  3791  0010D4  5052               	movf	setCallBack@idx^0,w,c
  3792  0010D6  0D02               	mullw	2
  3793  0010D8  0E1F               	movlw	low (_i2c_status+30)
  3794  0010DA  24F3               	addwf	243,w,c
  3795  0010DC  6ED9               	movwf	fsr2l,c
  3796  0010DE  0E00               	movlw	high (_i2c_status+30)
  3797  0010E0  20F4               	addwfc	prodh,w,c
  3798  0010E2  6EDA               	movwf	fsr2h,c
  3799  0010E4  C050  FFDE         	movff	setCallBack@p,postinc2
  3800  0010E8  C051  FFDD         	movff	setCallBack@p+1,postdec2
  3801                           
  3802                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
  3803  0010EC  EF92  F008         	goto	i2l564
  3804  0010F0                     i2l2707:
  3805                           
  3806                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
  3807  0010F0  5052               	movf	setCallBack@idx^0,w,c
  3808  0010F2  0D03               	mullw	3
  3809  0010F4  0E0D               	movlw	low (_i2c_status+12)
  3810  0010F6  24F3               	addwf	243,w,c
  3811  0010F8  6ED9               	movwf	fsr2l,c
  3812  0010FA  0E00               	movlw	high (_i2c_status+12)
  3813  0010FC  20F4               	addwfc	prodh,w,c
  3814  0010FE  6EDA               	movwf	fsr2h,c
  3815  001100  0E96               	movlw	low _returnStop
  3816  001102  6EDE               	movwf	postinc2,c
  3817  001104  0E15               	movlw	high _returnStop
  3818  001106  6EDE               	movwf	postinc2,c
  3819  001108  0E00               	movlw	low (_returnStop shr (0+16))
  3820  00110A  6EDE               	movwf	postinc2,c
  3821                           
  3822                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
  3823  00110C  5052               	movf	setCallBack@idx^0,w,c
  3824  00110E  0D02               	mullw	2
  3825  001110  0E1F               	movlw	low (_i2c_status+30)
  3826  001112  24F3               	addwf	243,w,c
  3827  001114  6ED9               	movwf	fsr2l,c
  3828  001116  0E00               	movlw	high (_i2c_status+30)
  3829  001118  20F4               	addwfc	prodh,w,c
  3830  00111A  6EDA               	movwf	fsr2h,c
  3831  00111C  0E00               	movlw	0
  3832  00111E  6EDE               	movwf	postinc2,c
  3833  001120  0E00               	movlw	0
  3834  001122  6EDD               	movwf	postdec2,c
  3835  001124                     i2l564:
  3836  001124  0012               	return		;funcret
  3837  001126                     __end_of_setCallBack:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _i2c_setBuffer *****************
  3841 ;; Defined at:
  3842 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  buffer          2    0[COMRAM] PTR void 
  3845 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
  3846 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
  3847 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  3848 ;;  bufferSize      2    2[COMRAM] unsigned int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;Total ram usage:        4 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_wr1RegCompleteHandler
  3870 ;;		_rd1RegCompleteHandler
  3871 ;;		_rd2RegCompleteHandler
  3872 ;;		_wr2RegCompleteHandler
  3873 ;;		_rdBlkRegCompleteHandler
  3874 ;;		_i2c_write1ByteRegister
  3875 ;;		_i2c_writeNBytes
  3876 ;;		_i2c_read1ByteRegister
  3877 ;;		_i2c_read2ByteRegister
  3878 ;;		_i2c_write2ByteRegister
  3879 ;;		_i2c_readDataBlock
  3880 ;;		_i2c_readNBytes
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text48
  3885  001408                     __ptext48:
  3886                           	callstack 0
  3887  001408                     _i2c_setBuffer:
  3888                           	callstack 24
  3889  001408                     
  3890                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
  3891  001408  A401               	btfss	_i2c_status^0,2,c
  3892  00140A  EF09  F00A         	goto	i2u57_41
  3893  00140E  EF0B  F00A         	goto	i2u57_40
  3894  001412                     i2u57_41:
  3895  001412  EF14  F00A         	goto	i2l443
  3896  001416                     i2u57_40:
  3897  001416                     
  3898                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
  3899  001416  C04D  F003         	movff	i2c_setBuffer@buffer,_i2c_status+2
  3900  00141A  C04E  F004         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
  3901  00141E                     
  3902                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
  3903  00141E  C04F  F005         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
  3904  001422  C050  F006         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
  3905  001426                     
  3906                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
  3907  001426  9401               	bcf	_i2c_status^0,2,c
  3908  001428                     i2l443:
  3909  001428  0012               	return		;funcret
  3910  00142A                     __end_of_i2c_setBuffer:
  3911                           	callstack 0
  3912                           
  3913 ;; *************** function _i2c1_driver_stop *****************
  3914 ;; Defined at:
  3915 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		None
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_do_I2C_SEND_STOP
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text49
  3943  00159A                     __ptext49:
  3944                           	callstack 0
  3945  00159A                     _i2c1_driver_stop:
  3946                           	callstack 24
  3947  00159A                     
  3948                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
  3949  00159A  8496               	bsf	150,2,c	;volatile
  3950  00159C  0012               	return		;funcret
  3951  00159E                     __end_of_i2c1_driver_stop:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _i2c1_driver_restart *****************
  3955 ;; Defined at:
  3956 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		None
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;Total ram usage:        0 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_do_I2C_SEND_RESTART_READ
  3980 ;;		_do_I2C_SEND_RESTART_WRITE
  3981 ;;		_do_I2C_SEND_RESTART
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text50
  3986  00159E                     __ptext50:
  3987                           	callstack 0
  3988  00159E                     _i2c1_driver_restart:
  3989                           	callstack 24
  3990  00159E                     
  3991                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
  3992  00159E  8296               	bsf	150,1,c	;volatile
  3993  0015A0  0012               	return		;funcret
  3994  0015A2                     __end_of_i2c1_driver_restart:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _i2c1_driver_sendACK *****************
  3998 ;; Defined at:
  3999 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		None
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;Total ram usage:        0 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_do_I2C_DO_ACK
  4023 ;;		_do_I2C_RX
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text51
  4028  001570                     __ptext51:
  4029                           	callstack 0
  4030  001570                     _i2c1_driver_sendACK:
  4031                           	callstack 25
  4032  001570                     
  4033                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
  4034  001570  9A96               	bcf	150,5,c	;volatile
  4035                           
  4036                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
  4037  001572  8896               	bsf	150,4,c	;volatile
  4038  001574  0012               	return		;funcret
  4039  001576                     __end_of_i2c1_driver_sendACK:
  4040                           	callstack 0
  4041                           
  4042                           	psect	text52
  4043  000000                     __ptext52:
  4044                           	callstack 0
  4045  000000                     
  4046                           	psect	rparam
  4047  0000                     
  4048                           	psect	temp
  4049  00005E                     btemp:
  4050                           	callstack 0
  4051  00005E                     	ds	1
  4052  0000                     int$flags	set	btemp
  4053  0000                     wtemp8	set	btemp+1
  4054  0000                     ttemp5	set	btemp+1
  4055  0000                     ttemp6	set	btemp+4
  4056  0000                     ttemp7	set	btemp+8
  4057                           
  4058                           	psect	idloc
  4059                           
  4060                           ;Config register IDLOC0 @ 0x200000
  4061                           ;	unspecified, using default values
  4062  200000                     	org	2097152
  4063  200000  0FFF               	dw	4095
  4064                           
  4065                           ;Config register IDLOC1 @ 0x200002
  4066                           ;	unspecified, using default values
  4067  200002                     	org	2097154
  4068  200002  0FFF               	dw	4095
  4069                           
  4070                           ;Config register IDLOC2 @ 0x200004
  4071                           ;	unspecified, using default values
  4072  200004                     	org	2097156
  4073  200004  0FFF               	dw	4095
  4074                           
  4075                           ;Config register IDLOC3 @ 0x200006
  4076                           ;	unspecified, using default values
  4077  200006                     	org	2097158
  4078  200006  0FFF               	dw	4095
  4079                           
  4080                           ;Config register IDLOC4 @ 0x200008
  4081                           ;	unspecified, using default values
  4082  200008                     	org	2097160
  4083  200008  0FFF               	dw	4095
  4084                           
  4085                           ;Config register IDLOC5 @ 0x20000A
  4086                           ;	unspecified, using default values
  4087  20000A                     	org	2097162
  4088  20000A  0FFF               	dw	4095
  4089                           
  4090                           ;Config register IDLOC6 @ 0x20000C
  4091                           ;	unspecified, using default values
  4092  20000C                     	org	2097164
  4093  20000C  0FFF               	dw	4095
  4094                           
  4095                           ;Config register IDLOC7 @ 0x20000E
  4096                           ;	unspecified, using default values
  4097  20000E                     	org	2097166
  4098  20000E  0FFF               	dw	4095
  4099                           
  4100                           	psect	config
  4101                           
  4102                           ;Config register CONFIG1L @ 0x300000
  4103                           ;	External Oscillator mode Selection bits
  4104                           ;	FEXTOSC = OFF, Oscillator not enabled
  4105                           ;	Power-up default value for COSC bits
  4106                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  4107  300000                     	org	3145728
  4108  300000  EC                 	db	236
  4109                           
  4110                           ;Config register CONFIG1H @ 0x300001
  4111                           ;	Clock Out Enable bit
  4112                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4113                           ;	Clock Switch Enable bit
  4114                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4115                           ;	Fail-Safe Clock Monitor Enable bit
  4116                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4117  300001                     	org	3145729
  4118  300001  FF                 	db	255
  4119                           
  4120                           ;Config register CONFIG2L @ 0x300002
  4121                           ;	Master Clear Enable bit
  4122                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RG5 pin function is MCLR
  4123                           ;	Power-up Timer Enable bit
  4124                           ;	PWRTE = OFF, Power up timer disabled
  4125                           ;	Low-power BOR enable bit
  4126                           ;	LPBOREN = OFF, ULPBOR disabled
  4127                           ;	Brown-out Reset Enable bits
  4128                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4129  300002                     	org	3145730
  4130  300002  FF                 	db	255
  4131                           
  4132                           ;Config register CONFIG2H @ 0x300003
  4133                           ;	Brown Out Reset Voltage selection bits
  4134                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4135                           ;	ZCD Disable bit
  4136                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4137                           ;	PPSLOCK bit One-Way Set Enable bit
  4138                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4139                           ;	Stack Full/Underflow Reset Enable bit
  4140                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4141                           ;	Debugger Enable bit
  4142                           ;	DEBUG = OFF, Background debugger disabled
  4143                           ;	Extended Instruction Set Enable bit
  4144                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4145  300003                     	org	3145731
  4146  300003  FF                 	db	255
  4147                           
  4148                           ;Config register CONFIG3L @ 0x300004
  4149                           ;	WDT Period Select bits
  4150                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4151                           ;	WDT operating mode
  4152                           ;	WDTE = OFF, WDT Disabled
  4153  300004                     	org	3145732
  4154  300004  9F                 	db	159
  4155                           
  4156                           ;Config register CONFIG3H @ 0x300005
  4157                           ;	WDT Window Select bits
  4158                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4159                           ;	WDT input clock selector
  4160                           ;	WDTCCS = SC, Software Control
  4161  300005                     	org	3145733
  4162  300005  FF                 	db	255
  4163                           
  4164                           ;Config register CONFIG4L @ 0x300006
  4165                           ;	Write Protection Block 0
  4166                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4167                           ;	Write Protection Block 1
  4168                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4169                           ;	Write Protection Block 2
  4170                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4171                           ;	Write Protection Block 3
  4172                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4173                           ;	Write Protection Block 3
  4174                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  4175                           ;	Write Protection Block 3
  4176                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  4177                           ;	Write Protection Block 3
  4178                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  4179                           ;	Write Protection Block 3
  4180                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  4181  300006                     	org	3145734
  4182  300006  FF                 	db	255
  4183                           
  4184                           ;Config register CONFIG4H @ 0x300007
  4185                           ;	Configuration Register Write Protection bit
  4186                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  4187                           ;	Boot Block Write Protection bit
  4188                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4189                           ;	Data EEPROM Write Protection bit
  4190                           ;	WRTD = OFF, Data EEPROM not write-protected
  4191                           ;	Scanner Enable bit
  4192                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  4193                           ;	Low Voltage Programming Enable bit
  4194                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  4195  300007                     	org	3145735
  4196  300007  FF                 	db	255
  4197                           
  4198                           ;Config register CONFIG5L @ 0x300008
  4199                           ;	UserNVM Program Memory Code Protection bit
  4200                           ;	CP = OFF, UserNVM code protection disabled
  4201                           ;	DataNVM Memory Code Protection bit
  4202                           ;	CPD = OFF, DataNVM code protection disabled
  4203  300008                     	org	3145736
  4204  300008  FF                 	db	255
  4205                           
  4206                           ;Config register CONFIG5H @ 0x300009
  4207                           ;	unspecified, using default values
  4208  300009                     	org	3145737
  4209  300009  FF                 	db	255
  4210                           
  4211                           ;Config register CONFIG6L @ 0x30000A
  4212                           ;	Table Read Protection Block 0
  4213                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4214                           ;	Table Read Protection Block 1
  4215                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4216                           ;	Table Read Protection Block 2
  4217                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4218                           ;	Table Read Protection Block 3
  4219                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4220                           ;	Table Read Protection Block 4
  4221                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  4222                           ;	Table Read Protection Block 5
  4223                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  4224                           ;	Table Read Protection Block 6
  4225                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  4226                           ;	Table Read Protection Block 7
  4227                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  4228  30000A                     	org	3145738
  4229  30000A  FF                 	db	255
  4230                           
  4231                           ;Config register CONFIG6H @ 0x30000B
  4232                           ;	Boot Block Table Read Protection bit
  4233                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4234  30000B                     	org	3145739
  4235  30000B  FF                 	db	255
  4236                           tosu	equ	0xFFF
  4237                           tosh	equ	0xFFE
  4238                           tosl	equ	0xFFD
  4239                           stkptr	equ	0xFFC
  4240                           pclatu	equ	0xFFB
  4241                           pclath	equ	0xFFA
  4242                           pcl	equ	0xFF9
  4243                           tblptru	equ	0xFF8
  4244                           tblptrh	equ	0xFF7
  4245                           tblptrl	equ	0xFF6
  4246                           tablat	equ	0xFF5
  4247                           prodh	equ	0xFF4
  4248                           prodl	equ	0xFF3
  4249                           indf0	equ	0xFEF
  4250                           postinc0	equ	0xFEE
  4251                           postdec0	equ	0xFED
  4252                           preinc0	equ	0xFEC
  4253                           plusw0	equ	0xFEB
  4254                           fsr0h	equ	0xFEA
  4255                           fsr0l	equ	0xFE9
  4256                           wreg	equ	0xFE8
  4257                           indf1	equ	0xFE7
  4258                           postinc1	equ	0xFE6
  4259                           postdec1	equ	0xFE5
  4260                           preinc1	equ	0xFE4
  4261                           plusw1	equ	0xFE3
  4262                           fsr1h	equ	0xFE2
  4263                           fsr1l	equ	0xFE1
  4264                           bsr	equ	0xFE0
  4265                           indf2	equ	0xFDF
  4266                           postinc2	equ	0xFDE
  4267                           postdec2	equ	0xFDD
  4268                           preinc2	equ	0xFDC
  4269                           plusw2	equ	0xFDB
  4270                           fsr2h	equ	0xFDA
  4271                           fsr2l	equ	0xFD9
  4272                           status	equ	0xFD8

Data Sizes:
    Strings     1
    Constant    112
    Data        4
    BSS         198
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      93
    BANK0           160      1     123
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    do_I2C_TX$2832$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2838$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2844$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_ISR$2850	const PTR FTN()enum E14701 size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2849	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2844	PTR FTN(PTR void ,)enum E14547 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2843	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2838	PTR FTN(PTR void ,)enum E14547 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2837	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX$2832	PTR FTN(PTR void ,)enum E14547 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    ?___localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    ?_localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    S620$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    __tm_to_secs@tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    mktime@tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    new.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_1(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __tm_to_tzname@tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK0[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK0[7]), std_name(BANK0[7]), NULL(NULL[0]), 

    __secs_to_tm@tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    __localtime_r@tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK0[24]), NULL(NULL[0]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    d.data	PTR unsigned char  size(2) Largest target is 0

    S951$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E14547 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E14701[16] size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E14547 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S620$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S620$callbackTable	PTR FTN(PTR void ,)enum E14547[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E14547[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S620$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    tm_t.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm_t.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm_t.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    S298tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    rtc6_SetTime@tm_t.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK0[24]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> localtime@tm(BANK0[24]), NULL(NULL[0]), rtc6_GetTime@tm_t(COMRAM[24]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_StartTimer
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          10    10      0   88341
                                              3 COMRAM    10    10      0
                   Absolute function *
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (4) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_ISR                                              0     0      0   88341
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (5) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_TX_EMPTY                                      2     2      0   22074
                                              0 COMRAM     2     2      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_TX                                            2     2      0   22089
                                              1 COMRAM     2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (5) _do_I2C_SEND_ADR_WRITE                                0     0      0      15
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (5) _do_I2C_SEND_ADR_READ                                 0     0      0      15
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_TXData                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RX                                            2     2      0   22074
                                              0 COMRAM     2     2      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_DO_ADDRESS_NACK                               2     2      0   22074
                                              0 COMRAM     2     2      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _wr2RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _wr1RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _returnStop                                           2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _returnReset                                          2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _rdBlkRegCompleteHandler                              2     0      2    4602
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rd2RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rd1RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _i2c_setDataCompleteCallback                          5     0      5    2478
                                              6 COMRAM     5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (8) _setCallBack                                          6     1      5     914
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (7) _i2c_setBuffer                                        4     0      4    1868
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _i2c_restartWrite                                     2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_StartTimer
   _TMR0_StopTimer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      7B       5       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      5D       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8       8        0.0%
DATA                 0      0      D8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 27 14:17:38 2021

                              returnReset@p 0058             __end_of_TMR0_HasOverflowOccured 14A8  
                                        l42 1478                                          l45 1444  
                                        l39 14BC                                          _r0 00C2  
                                        _r1 00B8                        __size_of_do_I2C_IDLE 000A  
                                        _zi 0045                         _do_I2C_SEND_RESTART 1532  
                      __size_of_do_I2C_RCEN 000A                                         l211 14D2  
                                       l214 1580                                         l217 157C  
                                       l341 1584                                         l229 14A6  
                                       l166 0F34               i2c_setDataCompleteCallback@cb 0053  
                   __size_of_PMD_Initialize 001C                       __size_of_do_I2C_RESET 000E  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                     ??_rd2RegCompleteHandler 005A  
                                      l4201 157E                                        l4131 142A  
                                      l4203 1492                                        l4211 1276  
                                      l4141 0E9E                                        l4133 0E74  
                                      l4213 127A                                        l4151 0EB6  
                                      l4143 0EA4                                        l4135 0E94  
                                      l4207 157A                                        l4215 128E  
                                      l4129 1582                                        l4161 0F04  
                                      l4153 0EFC                                        l4145 0EB0  
                                      l4137 0E96                                        l4217 1292  
                                      l4209 1272                                        l4171 0F0E  
                                      l4163 0F06                                        l4155 0EFE  
                                      l4147 0EB2                                        l4139 0E98  
                                      l4219 1296                                        l4181 0F18  
                                      l4173 0F10                                        l4165 0F08  
                                      l4157 0F00                                        l4149 0EB4  
                                      l4183 0F1A                                        l4175 0F12  
                                      l4167 0F0A                                        l4159 0F02  
                                      l4191 14A8                                        l4185 1462  
                                      l4177 0F14                                        l4169 0F0C  
                                      l4193 14AC                                        l4179 0F16  
                                      l4187 14BE                                        l4195 14B0  
                                      l4189 14CA                                        l4197 14B4  
                                      l4199 14B8                                        STR_1 0E71  
                                      u2100 14A4                                        u2101 149E  
                                      u2110 128E                                        u2111 128A  
                                      u2120 12A6                                        u2121 12A0  
                                      u2106 14A6                                        _LATA 000F79  
                                      u2126 12A8                                        _LATB 000F7A  
                                      _LATC 000F7B                                        _LATD 000F7C  
                                      _LATE 000F7D                                        _LATF 000F7E  
                                      _LATG 000F7F                                        _LATH 000F80  
                                      _PMD0 000E4C                                        _PMD1 000E4D  
                                      _PMD2 000E4E                                        _PMD3 000E4F  
                                      _PMD4 000E50                                        _PMD5 000E51  
                      ?_do_I2C_SEND_RESTART 004D                                        _WPUA 000E91  
                                      _WPUB 000E99                                        _WPUC 000EA1  
                                      _WPUD 000EA6                                        _WPUE 000EAE  
                                      _WPUF 000EB3                                        _WPUG 000EBB  
                                      _WPUH 000EC0                     ??_wr2RegCompleteHandler 005A  
         __size_of_do_I2C_SEND_RESTART_READ 0008                   ?_do_I2C_SEND_RESTART_READ 004D  
                                      _main 1272                                        _lock 0074  
                 __size_of_do_I2C_SEND_STOP 0008                      __size_of_do_I2C_DO_ACK 0008  
                           _TMR0_StartTimer 157E                            fp__do_I2C_DO_ACK 0000  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr1l 000FE1                                        fsr2l 000FD9  
                                      btemp 005E                       ?_do_I2C_SEND_ADR_READ 004D  
                                      prodh 000FF4                                        prodl 000FF3  
           ??_i2c1_driver_clearBusCollision 004D                                        start 00E2  
                             _i2c_setBuffer 1408                             __end_of_i2c_ISR 1272  
                              ___param_bank 000000            __size_of_rdBlkRegCompleteHandler 0044  
                  ??_do_I2C_DO_NACK_RESTART 004D                     __end_of_TMR0_Initialize 14D4  
                              _do_I2C_RESET 14F0              __size_of_OSCILLATOR_Initialize 0018  
             __end_of_OSCILLATOR_Initialize 147A                                       ?_main 004D  
                  __end_of_i2c1_driver_stop 159E                  __end_of_i2c1_driver_TXData 1552  
                                     i2l413 1460                                       i2l504 120E  
                                     i2l512 0FF6                                       i2l352 00B6  
                                     i2l443 1428                                       i2l347 007C  
                                     i2l540 11A4                                       i2l348 00B6  
                                     i2l509 0FC2                                       i2l525 102C  
                                     i2l526 10A0                                       i2l550 1270  
                                     i2l631 1376                                       i2l471 1548  
                                     i2l616 13A6                                       i2l480 1530  
                                     i2l465 14FC                                       i2l553 1556  
                                     i2l474 1540                                       i2l643 1406  
                                     i2l483 14EE                                       i2l564 1124  
                                     i2l556 1598                                       i2l468 1510  
                                     i2l492 1528                                       i2l716 1562  
                                     i2l812 155C                                       i2l573 1590  
                                     i2l477 1538                                       i2l742 15A2  
                                     i2l486 14E0                                       i2l751 159C  
                                     i2l559 1594                                       i2l655 1304  
                                     i2l719 1568                                       i2l495 1520  
                                     i2l760 1588                                       i2l489 1506  
                                     i2l754 1490                                       i2l498 1518  
                                     i2l595 13D6                                       i2l748 15A0  
                                     i2l757 158C                                       i2l775 1574  
                                     i2l769 1550                                       i2l778 156E  
                                     _OSCEN 000E47                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                                       _TRISA 000F81  
                                     _TRISB 000F82                                       _TRISC 000F83  
                                     _TRISD 000F84                                       _TRISE 000F85  
                                     _TRISF 000F86                                       _TRISG 000F87  
                                     _TRISH 000F88                               fp__returnStop 0000  
                                     ___gmt 0E6D                  __end_of_i2c1_driver_isNACK 1492  
                                     _index 0041                                       _errno 004B  
                ?_do_I2C_SEND_RESTART_WRITE 004D                                       _trans 0043  
                     ??_do_I2C_SEND_RESTART 004D                                       _types 003F  
                                     pclath 000FFA                                       tablat 000FF5  
                   __size_of_mssp1_clearIRQ 0006                   fp__do_I2C_DO_ADDRESS_NACK 0000  
                    ?_do_I2C_SEND_ADR_WRITE 004D                                       ttemp5 005F  
                                     ttemp6 0062                                       ttemp7 0066  
                                     status 000FD8                                       wtemp8 005F  
                            ?_i2c_setBuffer 004D                                ?_setCallBack 004D  
                             _fsmStateTable 0E31                    fp__rd1RegCompleteHandler 0000  
                           __initialization 1306                                  _i2c_status 0001  
                              __end_of_main 12C2                    fp__wr1RegCompleteHandler 0000  
               ?_INTERRUPT_InterruptManager 004D                               setCallBack@cb 004D  
                             _do_I2C_DO_ACK 1522                                      ??_main 00DA  
                         ?_i2c_restartWrite 0058               __size_of_i2c1_driver_sendNACK 0006  
                             __activetblptr 000003                          ??_i2c_restartWrite 005A  
             __size_of_i2c1_driver_resetBus 0002                     ?_do_I2C_DO_ADDRESS_NACK 004D  
                   __end_of_TMR0_StartTimer 1582                                      _ANSELA 000E92  
                                    _ANSELB 000E9A                                      _ANSELD 000EA7  
                                    _ANSELE 000EAF                                      _ANSELF 000EB4  
                                    _ANSELG 000EBC                                      _T0CON0 000FD5  
                                    _T0CON1 000FD6                                      _RC3PPS 000E65  
                                    _RC5PPS 000E67                                      _ODCONA 000E90  
                                    _ODCONB 000E98                                      _ODCONC 000EA0  
                                    _ODCOND 000EA5                                      _ODCONE 000EAD  
                                    _ODCONF 000EB2                                      _ODCONG 000EBA  
                                    _ODCONH 000EBF                                      i2l2031 14FA  
                                    i2l2025 14F0                                      i2l3001 0FEE  
                                    i2l2027 14F4                                      i2l2035 1508  
                                    i2l2043 14E2                                      i2l2051 14D4  
                                    i2l3003 0FF4                                      i2l3011 0FF8  
                                    i2l2029 14F6                                      i2l2037 150A  
                                    i2l2045 14E4                                      i2l2053 14D6  
                                    i2l2061 1500                                      i2l3013 1006  
                                    i2l2301 1552                                      i2l2039 150E  
                                    i2l2047 14EC                                      i2l2055 14DE  
                                    i2l2063 1504                                      i2l3015 100A  
                                    i2l3041 1126                                      i2l3025 1032  
                                    i2l3017 1022                                      i2l3043 112C  
                                    i2l2059 14FE                                      i2l2067 1522  
                                    i2l3035 1042                                      i2l3019 1026  
                                    i2l3053 113E                                      i2l2069 1526  
                                    i2l3029 103A                                      i2l2181 1558  
                                    i2l3047 1134                                      i2l3049 1138  
                                    i2l3059 1146                                      i2l1821 159E  
                                    i2l3501 1214                                      i2l1823 159A  
                                    i2l2703 10A4                                      i2l4303 107A  
                                    i2l3503 1222                                      i2l2721 1416  
                                    i2l2705 10B8                                      i2l2801 1404  
                                    i2l1825 156A                                      i2l1833 1542  
                                    i2l1841 153E                                      i2l4305 0F9C  
                                    i2l3505 1234                                      i2l2723 141E  
                                    i2l2707 10F0                                      i2l1835 1546  
                                    i2l1851 152A                                      i2l4307 11F8  
                                    i2l3507 1238                                      i2l1861 1570  
                                    i2l2725 1426                                      i2l2717 1446  
                                    i2l2805 12C2                                      i2l4309 117E  
                                    i2l1845 1532                                      i2l1853 152E  
                                    i2l2719 1408                                      i2l2807 12EA  
                                    i2l1839 153A                                      i2l1847 1536  
                                    i2l1863 151A                                      i2l1871 1516  
                                    i2l2809 1302                                      i2l1857 154C  
                                    i2l1865 151E                                      i2l1859 158A  
                                    i2l1875 147A                                      i2l1883 1564  
                                    i2l1893 158E                                      i2l2773 13A8  
                                    i2l2781 1378                                      i2l1869 1512  
                                    i2l2775 13BC                                      i2l2783 138C  
                                    i2l2791 135C                                      i2l1879 1586  
                                    i2l3911 008A                                      i2l3903 0032  
                                    i2l2769 1596                                      i2l1889 1592  
                                    i2l2777 13D4                                      i2l2785 13A4  
                                    i2l2793 1374                                      i2l2961 11B0  
                                    i2l3913 0098                                      i2l3905 0040  
                                    _INLVLA 000E8E                                      _INLVLB 000E96  
                                    i2l2971 11C0                                      i2l3499 1210  
                                    i2l3907 0050                                      _INLVLC 000E9E  
                                    _INLVLD 000EA3                                      i2l2797 13D8  
                                    i2l2789 1348                                      i2l2965 11B8  
                                    i2l2957 11A6                                      i2l2981 0F4C  
                                    i2l3909 005E                                      _INLVLE 000EAB  
                                    _INLVLF 000EB0                                      i2l2799 13EC  
                                    i2l2959 11A8                                      i2l1999 155E  
                                    _INLVLG 000EB8                                      _INLVLH 000EBD  
                                    i2l2985 0F54                                      i2l2977 0F36  
                                    i2l2995 0F64                                      i2l2997 0FC4  
                                    i2l2989 0F5C                                      i2l2999 0FD6  
                                    _OSCFRQ 000E49            __size_of_TMR0_HasOverflowOccured 0016  
                    ??_do_I2C_SEND_ADR_READ 004D                                      i2u4_40 148C  
                                    i2u4_41 1484                                      i2u4_48 148E  
                  rdBlkRegCompleteHandler@p 0058                                   ??_i2c_ISR 0050  
                            fp__returnReset 0000                       _i2c1_driver_getRXData 1586  
               __end_of_do_I2C_DO_NACK_STOP 1522         __end_of_i2c_setDataCompleteCallback 1462  
               _i2c_setDataCompleteCallback 1446       __end_of_i2c1_driver_clearBusCollision 155E  
    __size_of_i2c1_driver_clearBusCollision 0006               _i2c1_driver_clearBusCollision 1558  
           __size_of_do_I2C_DO_NACK_RESTART 0008                            ?_TMR0_Initialize 004D  
                                    clear_0 132C                                      clear_1 1338  
                                    _old_tz 005C                              ?_do_I2C_DO_ACK 004D  
                                    _tzname 006E                 __end_of_i2c1_driver_sendACK 1576  
                            _PMD_Initialize 142A              __end_of_do_I2C_DO_ADDRESS_NACK 1210  
                              __pdataCOMRAM 005A                                __mediumconst 0000  
               __end_of_i2c1_driver_restart 15A2                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                              ?_returnReset 0058                 __end_of_i2c1_driver_startRX 158E  
                               localtime@tm 00A0               __size_of_INTERRUPT_Initialize 0004  
                         _SYSTEM_Initialize 14A8                                  ___daylight 0049  
                                __accesstop 0060                     __end_of__initialization 133E  
                           ??_i2c_setBuffer 0051                            _do_I2C_SEND_STOP 152A  
                        __size_of_do_I2C_RX 00AA                          __size_of_do_I2C_TX 00C2  
                        ?_SYSTEM_Initialize 004D                               ___rparam_used 000001  
                  __size_of_do_I2C_TX_EMPTY 0080                          fp__do_I2C_TX_EMPTY 0000  
                   _rdBlkRegCompleteHandler 12C2                  fp__rdBlkRegCompleteHandler 0000  
                    fp__i2c_busCollisionISR 0000                              __pcstackCOMRAM 004D  
                             __end_of___gmt 0E71                         ??_SYSTEM_Initialize 00DA  
                    __end_of_PMD_Initialize 1446                                  ___timezone 002F  
                            setCallBack@idx 0052                            ?_TMR0_StartTimer 004D  
                    _do_I2C_DO_NACK_RESTART 1512                   __end_of_SYSTEM_Initialize 14BE  
                            _mssp1_clearIRQ 155E                                  __pbssBANK0 0060  
            __size_of_rd2RegCompleteHandler 0030               __end_of_rd2RegCompleteHandler 1378  
            __size_of_wr2RegCompleteHandler 0030               __end_of_wr2RegCompleteHandler 1408  
                     _rd1RegCompleteHandler 1378                      ?_i2c1_driver_getRXData 004D  
                     _wr1RegCompleteHandler 13A8                __size_of_i2c_busCollisionISR 0006  
                             ??_do_I2C_IDLE 004D                        __size_of_setCallBack 0084  
                             ??_do_I2C_RCEN 004D                     __size_of_TMR0_StopTimer 0004  
                           ??_do_I2C_DO_ACK 004D                         i2c_setBuffer@buffer 004D  
                           ?_PMD_Initialize 004D              ?_i2c1_driver_clearBusCollision 004D  
                         __end_of_do_I2C_RX 10A2                           __end_of_do_I2C_TX 0FF8  
                         ?_i2c1_driver_stop 004D                          ??_i2c1_driver_stop 004D  
                                   _OSCCON1 000E43                                     _OSCCON3 000E45  
                             ?_mssp1_setIRQ 004D                                     _OSCTUNE 000E48  
                                   i2u55_40 10B8                                     i2u55_41 10B4  
                                   i2u57_40 1416                                     i2u57_41 1412  
                                   i2u83_48 11D2                                     i2u84_40 0F48  
                                   i2u83_49 11E6                                     i2u84_41 0F44  
                                   i2u86_40 0FEE                                     i2u85_48 0F76  
                                   i2u86_41 0FEA                                     i2u85_49 0F8A  
                                   i2u87_40 1022                                     i2u87_41 101E  
                                   _SSP1ADD 000F92                                     i2u88_48 1054  
                                   i2u88_49 1068                                     i2u89_48 1158  
                                   i2u89_49 116C                                     _SLRCONA 000E8F  
                                   _SLRCONB 000E97                                     _SLRCONC 000E9F  
                                   _SLRCOND 000EA4                                     _SLRCONE 000EAC  
                                   _SLRCONF 000EB1                                     _SLRCONG 000EB9  
                                   _SLRCONH 000EBE                                     _SSP1BUF 000F91  
                    __end_of_mssp1_clearIRQ 1564                                     _SSP1MSK 000F93  
                   ??_do_I2C_SEND_ADR_WRITE 004E                 ??_do_I2C_SEND_RESTART_WRITE 004D  
                   _TMR0_HasOverflowOccured 1492                          _i2c1_driver_TXData 154A  
                        _i2c1_driver_i2cISR 0033                                     _i2c_ISR 1210  
                 ??_rdBlkRegCompleteHandler 005A                                     __Hparam 0000  
                   fp__do_I2C_SEND_ADR_READ 0000                          _i2c1_driver_isNACK 147A  
                       ?_i2c1_driver_TXData 004D                                     __Lparam 0000  
                                   _abbrevs 003D                                __psmallconst 0E00  
                         ??_do_I2C_TX_EMPTY 004D                         ?_i2c1_driver_isNACK 004D  
                                   __pcinit 1306                                     __ramtop 0E00  
                                   __ptext0 1272                                     __ptext1 157A  
                                   __ptext2 157E                                     __ptext3 1492  
                                   __ptext4 14A8                                     __ptext5 14BE  
                                   __ptext6 142A                                     __ptext7 0E74  
                                   __ptext8 1462                                     __ptext9 1582  
                       __end_of_do_I2C_IDLE 1512                         __end_of_do_I2C_RCEN 1508  
                                   _dst_off 0078                       _OSCILLATOR_Initialize 1462  
               __end_of_do_I2C_SEND_RESTART 153A                              ??_mssp1_setIRQ 004D  
                      ??_i2c1_driver_TXData 004D                    ??_PIN_MANAGER_Initialize 00DA  
                                _old_tz_buf 0080                             ?_mssp1_clearIRQ 004D  
                  _do_I2C_SEND_RESTART_READ 1542                  __size_of_SYSTEM_Initialize 0016  
               fp__do_I2C_SEND_RESTART_READ 0000                        __size_of_returnReset 0004  
                      end_of_initialization 133E                        ??_i2c1_driver_isNACK 004D  
                 __size_of_i2c_restartWrite 0004                __end_of_i2c1_driver_sendNACK 1570  
                    ?_rd1RegCompleteHandler 0058                      ?_wr1RegCompleteHandler 0058  
              __end_of_i2c1_driver_resetBus 15A4                                  fp__i2c_ISR 0000  
                       fp__do_I2C_SEND_STOP 0000                    fp__rd2RegCompleteHandler 0000  
                                   postdec1 000FE5                                     postdec2 000FDD  
                  fp__wr2RegCompleteHandler 0000                                     postinc0 000FEE  
                                   postinc2 000FDE                   _do_I2C_SEND_RESTART_WRITE 153A  
                                _returnStop 1596             __end_of_rdBlkRegCompleteHandler 1306  
                  __end_of_do_I2C_SEND_STOP 1532                      fp__do_I2C_DO_NACK_STOP 0000  
      __size_of_i2c_setDataCompleteCallback 001C                   ??_TMR0_HasOverflowOccured 00DA  
                               returnStop@p 0058                   fp__do_I2C_DO_NACK_RESTART 0000  
              i2c_setDataCompleteCallback@p 0056               __size_of_do_I2C_SEND_ADR_READ 000E  
                           fp__do_I2C_RESET 0000                              _TMR0_StopTimer 157A  
                               _do_I2C_IDLE 1508                                 _do_I2C_RCEN 14FE  
              __end_of_INTERRUPT_Initialize 1586                               __pidataCOMRAM 1576  
                    ?_OSCILLATOR_Initialize 004D                __size_of_do_I2C_DO_NACK_STOP 0008  
__end_of___month_to_secs@secs_through_month 0E31          ___month_to_secs@secs_through_month 0E01  
                   ?_do_I2C_DO_NACK_RESTART 004D                         start_initialization 1306  
                       _i2c_busCollisionISR 1552                    __size_of_TMR0_Initialize 0016  
           __size_of_PIN_MANAGER_Initialize 00C2                                 _abbrevs_end 003B  
                              setCallBack@p 0050                __size_of_i2c1_driver_sendACK 0006  
                   i2c_setBuffer@bufferSize 004F                     ??_i2c1_driver_getRXData 004D  
                    rd1RegCompleteHandler@p 0058                __size_of_i2c1_driver_restart 0004  
              __size_of_i2c1_driver_startRX 0004                       __end_of_i2c_setBuffer 142A  
                    __end_of_TMR0_StopTimer 157E                        ?_i2c_busCollisionISR 004D  
                      __end_of_mssp1_setIRQ 156A                            ??_PMD_Initialize 00DA  
                    wr1RegCompleteHandler@p 0058                               ?_do_I2C_RESET 004D  
                               ?_returnStop 0058              __end_of_do_I2C_DO_NACK_RESTART 151A  
                      _i2c1_driver_sendNACK 156A                                 __pbssCOMRAM 0001  
                      _i2c1_driver_resetBus 15A2                               __pcstackBANK0 00DA  
                                 _do_I2C_RX 0FF8                                   _do_I2C_TX 0F36  
            __size_of_do_I2C_SEND_ADR_WRITE 000E               __end_of_do_I2C_SEND_ADR_WRITE 14E2  
                          _i2c_restartWrite 158E                   __size_of_i2c1_driver_stop 0004  
                                  ?_i2c_ISR 004D                             _do_I2C_TX_EMPTY 1126  
                             ??_setCallBack 0052                       _rd2RegCompleteHandler 1348  
                  __size_of_TMR0_StartTimer 0004                             ?_TMR0_StopTimer 004D  
                     ??_i2c_busCollisionISR 004D                       __end_of_fsmStateTable 0E61  
                    _PIN_MANAGER_Initialize 0E74                       _wr2RegCompleteHandler 13D8  
                                 __pintcode 0008                              ??_do_I2C_RESET 004D  
                  ??_do_I2C_DO_ADDRESS_NACK 004D                 _i2c1_driver_busCollisionISR 0036  
                     __end_of_do_I2C_DO_ACK 152A                ??_INTERRUPT_InterruptManager 0050  
                ??_do_I2C_SEND_RESTART_READ 004D                       ?_i2c1_driver_sendNACK 004D  
                          ??_mssp1_clearIRQ 004D                                 __smallconst 0E00  
                     ?_i2c1_driver_resetBus 004D          __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                                ?_do_I2C_RX 004D                                  ?_do_I2C_TX 004D  
                                  _T0CKIPPS 000DF4                     ??_rd1RegCompleteHandler 005A  
                      _INTERRUPT_Initialize 1582                     ??_wr1RegCompleteHandler 005A  
                    fp__do_I2C_SEND_RESTART 0000                           ??_TMR0_Initialize 00DA  
                                  _LATDbits 000F7C                         __size_of_returnStop 0004  
                                  _PIE3bits 000E2C                                    i2u135_40 1222  
                                  i2u135_41 121E         __size_of_INTERRUPT_InterruptManager 00DA  
                                  i2u136_40 1234                                    i2u136_41 1230  
                                  i2u137_48 1254                                    i2u137_49 126E  
                                  i2u190_48 009E                                    i2u190_49 00B2  
                                  _PIR0bits 000E33                                    i2u184_40 0040  
                                  i2u184_41 003C                                    i2u185_40 0050  
                                  i2u185_41 004C                                    i2u186_40 005E  
                                  i2u186_41 005A                                    i2u188_40 008A  
                                  i2u187_48 0064                                    i2u188_41 0086  
                                  i2u187_49 0078                                    i2u189_40 0098  
                                  i2u189_41 0094                                    _PIR3bits 000E36  
                                  _SSP1CON1 000F95                                    _SSP1CON2 000F96  
              ?_i2c_setDataCompleteCallback 0053          __end_of___secs_to_tm@days_in_month 0E6D  
                ___secs_to_tm@days_in_month 0E61                                    _SSP1STAT 000F94  
                       __end_of_setCallBack 1126                           ?_do_I2C_SEND_STOP 004D  
                            fp__do_I2C_IDLE 0000                              fp__do_I2C_RCEN 0000  
                             ??_returnReset 005A                          ??_do_I2C_SEND_STOP 004D  
               __size_of_i2c1_driver_TXData 0008           __end_of_do_I2C_SEND_RESTART_WRITE 1542  
                   __end_of_do_I2C_TX_EMPTY 11A6                                   copy_data0 131A  
                     ?_INTERRUPT_Initialize 004D                    ?_rdBlkRegCompleteHandler 0058  
              __size_of_do_I2C_SEND_RESTART 0008                 __size_of_i2c1_driver_isNACK 0018  
                     __size_of_mssp1_setIRQ 0006                      ?_rd2RegCompleteHandler 0058  
                       _do_I2C_DO_NACK_STOP 151A                            __size_of_i2c_ISR 0062  
                    ?_wr2RegCompleteHandler 0058                                    __Hrparam 0000  
                  fp__do_I2C_SEND_ADR_WRITE 0000                                    __Lrparam 0000  
                              ?_do_I2C_IDLE 004D                                ?_do_I2C_RCEN 004D  
                   ??_OSCILLATOR_Initialize 00DA                           ??_TMR0_StartTimer 00DA  
                       _i2c1_driver_sendACK 1570             __size_of_do_I2C_DO_ADDRESS_NACK 006A  
                       i2c1_driver_TXData@d 004D                      ??_i2c1_driver_sendNACK 004D  
             ??_i2c_setDataCompleteCallback 0058                         _i2c1_driver_restart 159E  
                      ?_do_I2C_DO_NACK_STOP 004D                         _i2c1_driver_startRX 158A  
              __end_of_do_I2C_SEND_ADR_READ 14F0                      ??_i2c1_driver_resetBus 004D  
                                  ___tzname 002B                                  _T0CON0bits 000FD5  
                                  _dateTime 0060                                _mssp1_setIRQ 1564  
                               ??_do_I2C_RX 004D                                 ??_do_I2C_TX 004E  
                                  _daylight 0047                                    __ptext11 1552  
                                  __ptext20 1522                                    __ptext12 1558  
                                  __ptext21 14FE                                    __ptext13 1210  
                                  __ptext30 1126                                    __ptext22 14D4  
                                  __ptext14 155E                                    __ptext31 1564  
                                  __ptext23 14E2                                    __ptext15 0FF8  
                                  __ptext40 1378                                    __ptext32 147A  
                                  __ptext24 152A                                    __ptext16 0F36  
                                  __ptext41 13A8                                    __ptext33 154A  
                                  __ptext25 1532                                    __ptext17 11A6  
                                  __ptext50 159E                                    __ptext42 158E  
                                  __ptext34 1586                                    __ptext26 153A  
                                  __ptext18 1512                                    __ptext51 1570  
                                  __ptext43 1592                                    __ptext35 156A  
                                  __ptext27 1542                                    __ptext19 151A  
                                  __ptext52 0000                                    __ptext44 1596  
                                  __ptext36 15A2                                    __ptext28 1508  
                                  __ptext45 13D8                                    __ptext37 158A  
                                  __ptext29 14F0                                    __ptext46 1446  
                                  __ptext38 12C2                                    __ptext47 10A2  
                                  __ptext39 1348                                    __ptext48 1408  
                                  __ptext49 159A                                _SSP1CON1bits 000F95  
                              _SSP1CON2bits 000F96                        ?_i2c1_driver_sendACK 004D  
                      __end_of_do_I2C_RESET 14FE                                    _map_size 0039  
                                  _dst_name 00CC                        ?_i2c1_driver_restart 004D  
                       __end_of_returnReset 1596                            _i2c1_driver_stop 159A  
                             __size_of_main 0050                        ?_i2c1_driver_startRX 004D  
            __size_of_i2c1_driver_getRXData 0004               __end_of_i2c1_driver_getRXData 158A  
                               _setCallBack 10A2                         fp__i2c_restartWrite 0000  
                                  _timezone 007C                                    int$flags 005E  
                                  _std_name 00D3                                 _old_tz_size 005A  
        __end_of_INTERRUPT_InterruptManager 00E2                  _INTERRUPT_InterruptManager 0008  
                              _SSP1STATbits 000F94            __end_of_do_I2C_SEND_RESTART_READ 154A  
                              ??_returnStop 005A                    __end_of_i2c_restartWrite 1592  
                     ??_do_I2C_DO_NACK_STOP 004D                fp__do_I2C_SEND_RESTART_WRITE 0000  
                  ?_TMR0_HasOverflowOccured 004D                                  _INTCONbits 000FF2  
                    ??_INTERRUPT_Initialize 00DA                       ??_i2c1_driver_sendACK 004D  
                          ?_do_I2C_TX_EMPTY 004D                      _do_I2C_DO_ADDRESS_NACK 11A6  
                                  intlevel2 0000                            ??_TMR0_StopTimer 00DA  
                     ??_i2c1_driver_restart 004D                      rd2RegCompleteHandler@p 0058  
                     ??_i2c1_driver_startRX 004D                     ?_PIN_MANAGER_Initialize 004D  
                         i2c_restartWrite@p 0058                          __end_of_returnStop 159A  
                    wr2RegCompleteHandler@p 0058                                fp__do_I2C_RX 0000  
                              fp__do_I2C_TX 0000                                  _SSP1DATPPS 000E1A  
                                _SSP1CLKPPS 000E19                             _TMR0_Initialize 14BE  
                    __size_of_i2c_setBuffer 0022                                 _returnReset 1592  
            __end_of_PIN_MANAGER_Initialize 0F36                 __end_of_i2c_busCollisionISR 1558  
            __size_of_rd1RegCompleteHandler 0030               __end_of_rd1RegCompleteHandler 13A8  
            __size_of_wr1RegCompleteHandler 0030               __end_of_wr1RegCompleteHandler 13D8  
                     _do_I2C_SEND_ADR_WRITE 14D4                        _do_I2C_SEND_ADR_READ 14E2  
