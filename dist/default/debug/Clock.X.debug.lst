

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 26 07:26:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 05/05/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F67K40 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _PIR3bits	set	3638
    71  0000                     _PIE3bits	set	3628
    72  0000                     _SSP1DATPPS	set	3610
    73  0000                     _RC5PPS	set	3687
    74  0000                     _RC3PPS	set	3685
    75  0000                     _SSP1CLKPPS	set	3609
    76  0000                     _INLVLH	set	3773
    77  0000                     _INLVLG	set	3768
    78  0000                     _INLVLF	set	3760
    79  0000                     _INLVLE	set	3755
    80  0000                     _INLVLD	set	3747
    81  0000                     _INLVLC	set	3742
    82  0000                     _INLVLB	set	3734
    83  0000                     _INLVLA	set	3726
    84  0000                     _SLRCONH	set	3774
    85  0000                     _SLRCONG	set	3769
    86  0000                     _SLRCONF	set	3761
    87  0000                     _SLRCONE	set	3756
    88  0000                     _SLRCOND	set	3748
    89  0000                     _SLRCONC	set	3743
    90  0000                     _SLRCONB	set	3735
    91  0000                     _SLRCONA	set	3727
    92  0000                     _ODCOND	set	3749
    93  0000                     _ODCONC	set	3744
    94  0000                     _ODCONH	set	3775
    95  0000                     _ODCONB	set	3736
    96  0000                     _ODCONG	set	3770
    97  0000                     _ODCONA	set	3728
    98  0000                     _ODCONF	set	3762
    99  0000                     _ODCONE	set	3757
   100  0000                     _WPUH	set	3776
   101  0000                     _WPUC	set	3745
   102  0000                     _WPUA	set	3729
   103  0000                     _WPUG	set	3771
   104  0000                     _WPUB	set	3737
   105  0000                     _WPUE	set	3758
   106  0000                     _WPUF	set	3763
   107  0000                     _WPUD	set	3750
   108  0000                     _ANSELA	set	3730
   109  0000                     _ANSELF	set	3764
   110  0000                     _ANSELG	set	3772
   111  0000                     _ANSELE	set	3759
   112  0000                     _ANSELB	set	3738
   113  0000                     _ANSELD	set	3751
   114  0000                     _PMD5	set	3665
   115  0000                     _PMD4	set	3664
   116  0000                     _PMD3	set	3663
   117  0000                     _PMD2	set	3662
   118  0000                     _PMD1	set	3661
   119  0000                     _PMD0	set	3660
   120  0000                     _OSCTUNE	set	3656
   121  0000                     _OSCFRQ	set	3657
   122  0000                     _OSCEN	set	3655
   123  0000                     _OSCCON3	set	3653
   124  0000                     _OSCCON1	set	3651
   125  0000                     _PIR0bits	set	3635
   126  0000                     _SSP1IF	set	29104
   127  0000                     _SSP1MSK	set	3987
   128  0000                     _INTCONbits	set	4082
   129  0000                     _SSP1BUF	set	3985
   130  0000                     _SSP1CON2bits	set	3990
   131  0000                     _SSP1STATbits	set	3988
   132  0000                     _SSP1CON1bits	set	3989
   133  0000                     _SSP1ADD	set	3986
   134  0000                     _SSP1CON2	set	3990
   135  0000                     _SSP1CON1	set	3989
   136  0000                     _SSP1STAT	set	3988
   137  0000                     _T0CON0bits	set	4053
   138  0000                     _T0CON0	set	4053
   139  0000                     _TMR0L	set	4051
   140  0000                     _TMR0H	set	4052
   141  0000                     _T0CON1	set	4054
   142  0000                     _TRISD	set	3972
   143  0000                     _TRISC	set	3971
   144  0000                     _TRISH	set	3976
   145  0000                     _TRISB	set	3970
   146  0000                     _TRISG	set	3975
   147  0000                     _TRISA	set	3969
   148  0000                     _TRISF	set	3974
   149  0000                     _TRISE	set	3973
   150  0000                     _LATH	set	3968
   151  0000                     _LATC	set	3963
   152  0000                     _LATG	set	3967
   153  0000                     _LATB	set	3962
   154  0000                     _LATF	set	3966
   155  0000                     _LATA	set	3961
   156  0000                     _LATD	set	3964
   157  0000                     _LATE	set	3965
   158  0000                     _LATDbits	set	3964
   159                           
   160                           ; #config settings
   161                           
   162                           	psect	cinit
   163  000282                     __pcinit:
   164                           	callstack 0
   165  000282                     start_initialization:
   166                           	callstack 0
   167  000282                     __initialization:
   168                           	callstack 0
   169                           
   170                           ; Clear objects allocated to COMRAM (16 bytes)
   171  000282  EE00  F001         	lfsr	0,__pbssCOMRAM
   172  000286  0E10               	movlw	16
   173  000288                     clear_0:
   174  000288  6AEE               	clrf	postinc0,c
   175  00028A  06E8               	decf	wreg,f,c
   176  00028C  E1FD               	bnz	clear_0
   177  00028E                     end_of_initialization:
   178                           	callstack 0
   179  00028E                     __end_of__initialization:
   180                           	callstack 0
   181  00028E  9018               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   182  000290  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   183  000292  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  000294  6EF8               	movwf	tblptru,c
   185  000296  0100               	movlb	0
   186  000298  EF87  F000         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189  000001                     __pbssCOMRAM:
   190                           	callstack 0
   191  000001                     _i2c1_driver_i2cISR:
   192                           	callstack 0
   193  000001                     	ds	3
   194  000004                     _i2c1_driver_busCollisionISR:
   195                           	callstack 0
   196  000004                     	ds	3
   197  000007                     _err_flg:
   198                           	callstack 0
   199  000007                     	ds	1
   200  000008                     _err_cnt:
   201                           	callstack 0
   202  000008                     	ds	1
   203  000009                     _rtcc_buf:
   204                           	callstack 0
   205  000009                     	ds	1
   206  00000A                     _yr:
   207                           	callstack 0
   208  00000A                     	ds	1
   209  00000B                     _mon:
   210                           	callstack 0
   211  00000B                     	ds	1
   212  00000C                     _dat:
   213                           	callstack 0
   214  00000C                     	ds	1
   215  00000D                     _day:
   216                           	callstack 0
   217  00000D                     	ds	1
   218  00000E                     _hr:
   219                           	callstack 0
   220  00000E                     	ds	1
   221  00000F                     _min:
   222                           	callstack 0
   223  00000F                     	ds	1
   224  000010                     _sec:
   225                           	callstack 0
   226  000010                     	ds	1
   227                           
   228                           	psect	cstackCOMRAM
   229  000011                     __pcstackCOMRAM:
   230                           	callstack 0
   231  000011                     ??_I2C_Master_Idle:
   232  000011                     I2C_Master_Write@data:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x0
   236  000011                     	ds	1
   237  000012                     MCP7940_Write@reg_addr:
   238                           	callstack 0
   239  000012                     MCP7940_Read@reg_addr:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x1
   243  000012                     	ds	1
   244  000013                     ??_MCP7940_Read:
   245  000013                     MCP7940_Write@reg_data:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x2
   249  000013                     	ds	1
   250  000014                     ??_MCP7940_Write:
   251                           
   252                           ; 1 bytes @ 0x3
   253  000014                     	ds	1
   254  000015                     MCP7940_Read@dev_addr:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x4
   258  000015                     	ds	1
   259  000016                     MCP7940_Write@dev_addr:
   260                           	callstack 0
   261  000016                     MCP7940_Read@temp:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x5
   265  000016                     	ds	1
   266  000017                     ??_main:
   267                           
   268                           ; 1 bytes @ 0x6
   269  000017                     	ds	1
   270                           
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 41 in file "main.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   294 ;;Total ram usage:        1 bytes
   295 ;; Hardware stack levels required when called:    5
   296 ;; This function calls:
   297 ;;		_I2C_Initialize
   298 ;;		_MCP7940_Read
   299 ;;		_MCP7940_Write
   300 ;;		_SYSTEM_Initialize
   301 ;;		_TMR0_HasOverflowOccured
   302 ;;		_TMR0_StartTimer
   303 ;;		_TMR0_StopTimer
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text0
   310  00010E                     __ptext0:
   311                           	callstack 0
   312  00010E                     _main:
   313                           	callstack 26
   314  00010E                     
   315                           ;main.c: 44:     SYSTEM_Initialize();
   316  00010E  EC65  F001         	call	_SYSTEM_Initialize	;wreg free
   317                           
   318                           ;main.c: 45:     I2C_Initialize();
   319  000112  EC90  F001         	call	_I2C_Initialize	;wreg free
   320  000116                     
   321                           ;main.c: 61:     TMR0_StartTimer();
   322  000116  ECB0  F001         	call	_TMR0_StartTimer	;wreg free
   323  00011A                     
   324                           ;main.c: 63:     MCP7940_Write(0x6F, 0x00, 0x0 | 0x80);
   325  00011A  0E00               	movlw	0
   326  00011C  6E12               	movwf	MCP7940_Write@reg_addr^0,c
   327  00011E  0E80               	movlw	128
   328  000120  6E13               	movwf	MCP7940_Write@reg_data^0,c
   329  000122  0E6F               	movlw	111
   330  000124  ECF2  F000         	call	_MCP7940_Write
   331  000128                     
   332                           ;main.c: 64:     MCP7940_Write(0x6F, 0x01, 0x59);
   333  000128  0E01               	movlw	1
   334  00012A  6E12               	movwf	MCP7940_Write@reg_addr^0,c
   335  00012C  0E59               	movlw	89
   336  00012E  6E13               	movwf	MCP7940_Write@reg_data^0,c
   337  000130  0E6F               	movlw	111
   338  000132  ECF2  F000         	call	_MCP7940_Write
   339  000136                     
   340                           ;main.c: 65:     MCP7940_Write(0x6F, 0x02, 0x12);
   341  000136  0E02               	movlw	2
   342  000138  6E12               	movwf	MCP7940_Write@reg_addr^0,c
   343  00013A  0E12               	movlw	18
   344  00013C  6E13               	movwf	MCP7940_Write@reg_data^0,c
   345  00013E  0E6F               	movlw	111
   346  000140  ECF2  F000         	call	_MCP7940_Write
   347  000144                     l1511:
   348                           
   349                           ;main.c: 67:     {;main.c: 69:         if(TMR0_HasOverflowOccured()){
   350  000144  EC5A  F001         	call	_TMR0_HasOverflowOccured	;wreg free
   351  000148  0900               	iorlw	0
   352  00014A  B4D8               	btfsc	status,2,c
   353  00014C  EFAA  F000         	goto	u171
   354  000150  EFAC  F000         	goto	u170
   355  000154                     u171:
   356  000154  EFA2  F000         	goto	l1511
   357  000158                     u170:
   358  000158                     
   359                           ;main.c: 70:             sec = MCP7940_Read(0x6F, 0x00);
   360  000158  0E00               	movlw	0
   361  00015A  6E12               	movwf	MCP7940_Read@reg_addr^0,c
   362  00015C  0E6F               	movlw	111
   363  00015E  ECD3  F000         	call	_MCP7940_Read
   364  000162  6E10               	movwf	_sec^0,c
   365                           
   366                           ;main.c: 71:             min = MCP7940_Read(0x6F, 0x01);
   367  000164  0E01               	movlw	1
   368  000166  6E12               	movwf	MCP7940_Read@reg_addr^0,c
   369  000168  0E6F               	movlw	111
   370  00016A  ECD3  F000         	call	_MCP7940_Read
   371  00016E  6E0F               	movwf	_min^0,c
   372  000170                     
   373                           ;main.c: 72:             TMR0_StopTimer();
   374  000170  ECAE  F001         	call	_TMR0_StopTimer	;wreg free
   375  000174                     
   376                           ;main.c: 73:             PIR0bits.TMR0IF = 0;
   377  000174  010E               	movlb	14	; () banked
   378  000176  9B33               	bcf	51,5,b	;volatile
   379  000178                     
   380                           ; BSR set to: 14
   381  000178  B27C               	btfsc	124,1,c	;volatile
   382  00017A  EFC1  F000         	goto	u181
   383  00017E  EFC4  F000         	goto	u180
   384  000182                     u181:
   385  000182  0E01               	movlw	1
   386  000184  EFC5  F000         	goto	u186
   387  000188                     u180:
   388  000188  0E00               	movlw	0
   389  00018A                     u186:
   390  00018A  0AFF               	xorlw	255
   391  00018C  6E17               	movwf	??_main^0,c
   392  00018E  4617               	rlncf	??_main^0,f,c
   393  000190  507C               	movf	124,w,c	;volatile
   394  000192  1817               	xorwf	??_main^0,w,c
   395  000194  0BFD               	andlw	-3
   396  000196  1817               	xorwf	??_main^0,w,c
   397  000198  6E7C               	movwf	124,c	;volatile
   398  00019A                     
   399                           ; BSR set to: 14
   400                           ;main.c: 75:             TMR0_StartTimer();
   401  00019A  ECB0  F001         	call	_TMR0_StartTimer	;wreg free
   402  00019E  EFA2  F000         	goto	l1511
   403  0001A2  EF29  F000         	goto	start
   404  0001A6                     __end_of_main:
   405                           	callstack 0
   406                           
   407 ;; *************** function _TMR0_StopTimer *****************
   408 ;; Defined at:
   409 ;;		line 86 in file "mcc_generated_files/tmr0.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		None
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    1
   430 ;; This function calls:
   431 ;;		Nothing
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text1
   438  00035C                     __ptext1:
   439                           	callstack 0
   440  00035C                     _TMR0_StopTimer:
   441                           	callstack 29
   442  00035C                     
   443                           ;mcc_generated_files/tmr0.c: 89:     T0CON0bits.T0EN = 0;
   444  00035C  9ED5               	bcf	213,7,c	;volatile
   445  00035E  0012               	return		;funcret
   446  000360                     __end_of_TMR0_StopTimer:
   447                           	callstack 0
   448                           
   449 ;; *************** function _TMR0_StartTimer *****************
   450 ;; Defined at:
   451 ;;		line 80 in file "mcc_generated_files/tmr0.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		None
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; Hardware stack levels required when called:    1
   472 ;; This function calls:
   473 ;;		Nothing
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text2
   480  000360                     __ptext2:
   481                           	callstack 0
   482  000360                     _TMR0_StartTimer:
   483                           	callstack 29
   484  000360                     
   485                           ;mcc_generated_files/tmr0.c: 83:     T0CON0bits.T0EN = 1;
   486  000360  8ED5               	bsf	213,7,c	;volatile
   487  000362  0012               	return		;funcret
   488  000364                     __end_of_TMR0_StartTimer:
   489                           	callstack 0
   490                           
   491 ;; *************** function _TMR0_HasOverflowOccured *****************
   492 ;; Defined at:
   493 ;;		line 114 in file "mcc_generated_files/tmr0.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      _Bool 
   500 ;; Registers used:
   501 ;;		wreg
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; Hardware stack levels required when called:    1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text3
   522  0002B4                     __ptext3:
   523                           	callstack 0
   524  0002B4                     _TMR0_HasOverflowOccured:
   525                           	callstack 29
   526  0002B4                     
   527                           ;mcc_generated_files/tmr0.c: 117:     return(PIR0bits.TMR0IF);
   528  0002B4  010E               	movlb	14	; () banked
   529  0002B6  BB33               	btfsc	51,5,b	;volatile
   530  0002B8  EF60  F001         	goto	u61
   531  0002BC  EF63  F001         	goto	u60
   532  0002C0                     u61:
   533  0002C0  0E01               	movlw	1
   534  0002C2  EF64  F001         	goto	u66
   535  0002C6                     u60:
   536  0002C6  0E00               	movlw	0
   537  0002C8                     u66:
   538  0002C8                     
   539                           ; BSR set to: 14
   540  0002C8  0012               	return		;funcret
   541  0002CA                     __end_of_TMR0_HasOverflowOccured:
   542                           	callstack 0
   543                           
   544 ;; *************** function _SYSTEM_Initialize *****************
   545 ;; Defined at:
   546 ;;		line 50 in file "mcc_generated_files/mcc.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    2
   567 ;; This function calls:
   568 ;;		_INTERRUPT_Initialize
   569 ;;		_OSCILLATOR_Initialize
   570 ;;		_PIN_MANAGER_Initialize
   571 ;;		_PMD_Initialize
   572 ;;		_TMR0_Initialize
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text4
   579  0002CA                     __ptext4:
   580                           	callstack 0
   581  0002CA                     _SYSTEM_Initialize:
   582                           	callstack 28
   583  0002CA                     
   584                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   585  0002CA  ECB2  F001         	call	_INTERRUPT_Initialize	;wreg free
   586  0002CE                     
   587                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   588  0002CE  EC33  F001         	call	_PMD_Initialize	;wreg free
   589  0002D2                     
   590                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   591  0002D2  EC2B  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   592  0002D6                     
   593                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   594  0002D6  EC4E  F001         	call	_OSCILLATOR_Initialize	;wreg free
   595  0002DA                     
   596                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   597  0002DA  EC70  F001         	call	_TMR0_Initialize	;wreg free
   598  0002DE  0012               	return		;funcret
   599  0002E0                     __end_of_SYSTEM_Initialize:
   600                           	callstack 0
   601                           
   602 ;; *************** function _TMR0_Initialize *****************
   603 ;; Defined at:
   604 ;;		line 60 in file "mcc_generated_files/tmr0.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_SYSTEM_Initialize
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text5
   633  0002E0                     __ptext5:
   634                           	callstack 0
   635  0002E0                     _TMR0_Initialize:
   636                           	callstack 28
   637  0002E0                     
   638                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x4C;
   639  0002E0  0E4C               	movlw	76
   640  0002E2  6ED6               	movwf	214,c	;volatile
   641                           
   642                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x3C;
   643  0002E4  0E3C               	movlw	60
   644  0002E6  6ED4               	movwf	212,c	;volatile
   645                           
   646                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
   647  0002E8  0E00               	movlw	0
   648  0002EA  6ED3               	movwf	211,c	;volatile
   649  0002EC                     
   650                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
   651  0002EC  010E               	movlb	14	; () banked
   652  0002EE  9B33               	bcf	51,5,b	;volatile
   653                           
   654                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x8F;
   655  0002F0  0E8F               	movlw	143
   656  0002F2  6ED5               	movwf	213,c	;volatile
   657  0002F4                     
   658                           ; BSR set to: 14
   659  0002F4  0012               	return		;funcret
   660  0002F6                     __end_of_TMR0_Initialize:
   661                           	callstack 0
   662                           
   663 ;; *************** function _PMD_Initialize *****************
   664 ;; Defined at:
   665 ;;		line 73 in file "mcc_generated_files/mcc.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_SYSTEM_Initialize
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text6
   694  000266                     __ptext6:
   695                           	callstack 0
   696  000266                     _PMD_Initialize:
   697                           	callstack 28
   698  000266                     
   699                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
   700  000266  0E00               	movlw	0
   701  000268  010E               	movlb	14	; () banked
   702  00026A  6F4C               	movwf	76,b	;volatile
   703                           
   704                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
   705  00026C  0E00               	movlw	0
   706  00026E  6F4D               	movwf	77,b	;volatile
   707                           
   708                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
   709  000270  0E00               	movlw	0
   710  000272  6F4E               	movwf	78,b	;volatile
   711                           
   712                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
   713  000274  0E00               	movlw	0
   714  000276  6F4F               	movwf	79,b	;volatile
   715                           
   716                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
   717  000278  0E00               	movlw	0
   718  00027A  6F50               	movwf	80,b	;volatile
   719                           
   720                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
   721  00027C  0E00               	movlw	0
   722  00027E  6F51               	movwf	81,b	;volatile
   723  000280                     
   724                           ; BSR set to: 14
   725  000280  0012               	return		;funcret
   726  000282                     __end_of_PMD_Initialize:
   727                           	callstack 0
   728                           
   729 ;; *************** function _PIN_MANAGER_Initialize *****************
   730 ;; Defined at:
   731 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    1
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_SYSTEM_Initialize
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text7
   760  000056                     __ptext7:
   761                           	callstack 0
   762  000056                     _PIN_MANAGER_Initialize:
   763                           	callstack 28
   764  000056                     
   765                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   766  000056  0E00               	movlw	0
   767  000058  6E7D               	movwf	125,c	;volatile
   768                           
   769                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
   770  00005A  0E02               	movlw	2
   771  00005C  6E7C               	movwf	124,c	;volatile
   772                           
   773                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   774  00005E  0E00               	movlw	0
   775  000060  6E79               	movwf	121,c	;volatile
   776                           
   777                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
   778  000062  0E00               	movlw	0
   779  000064  6E7E               	movwf	126,c	;volatile
   780                           
   781                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
   782  000066  0E00               	movlw	0
   783  000068  6E7A               	movwf	122,c	;volatile
   784                           
   785                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
   786  00006A  0E00               	movlw	0
   787  00006C  6E7F               	movwf	127,c	;volatile
   788                           
   789                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x80;
   790  00006E  0E80               	movlw	128
   791  000070  6E7B               	movwf	123,c	;volatile
   792                           
   793                           ;mcc_generated_files/pin_manager.c: 67:     LATH = 0x00;
   794  000072  0E00               	movlw	0
   795  000074  6E80               	movwf	128,c	;volatile
   796  000076                     
   797                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0xFF;
   798  000076  6885               	setf	133,c	;volatile
   799  000078                     
   800                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
   801  000078  6886               	setf	134,c	;volatile
   802  00007A                     
   803                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
   804  00007A  6881               	setf	129,c	;volatile
   805                           
   806                           ;mcc_generated_files/pin_manager.c: 75:     TRISG = 0xDF;
   807  00007C  0EDF               	movlw	223
   808  00007E  6E87               	movwf	135,c	;volatile
   809  000080                     
   810                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xFF;
   811  000080  6882               	setf	130,c	;volatile
   812                           
   813                           ;mcc_generated_files/pin_manager.c: 77:     TRISH = 0x0F;
   814  000082  0E0F               	movlw	15
   815  000084  6E88               	movwf	136,c	;volatile
   816  000086                     
   817                           ;mcc_generated_files/pin_manager.c: 78:     TRISC = 0xFF;
   818  000086  6883               	setf	131,c	;volatile
   819                           
   820                           ;mcc_generated_files/pin_manager.c: 79:     TRISD = 0xFD;
   821  000088  0EFD               	movlw	253
   822  00008A  6E84               	movwf	132,c	;volatile
   823                           
   824                           ;mcc_generated_files/pin_manager.c: 84:     ANSELD = 0xFD;
   825  00008C  0EFD               	movlw	253
   826  00008E  010E               	movlb	14	; () banked
   827  000090  6FA7               	movwf	167,b	;volatile
   828  000092                     
   829                           ; BSR set to: 14
   830                           ;mcc_generated_files/pin_manager.c: 85:     ANSELB = 0xFF;
   831  000092  699A               	setf	154,b	;volatile
   832  000094                     
   833                           ; BSR set to: 14
   834                           ;mcc_generated_files/pin_manager.c: 86:     ANSELE = 0xFF;
   835  000094  69AF               	setf	175,b	;volatile
   836  000096                     
   837                           ; BSR set to: 14
   838                           ;mcc_generated_files/pin_manager.c: 87:     ANSELG = 0xFF;
   839  000096  69BC               	setf	188,b	;volatile
   840  000098                     
   841                           ; BSR set to: 14
   842                           ;mcc_generated_files/pin_manager.c: 88:     ANSELF = 0xFF;
   843  000098  69B4               	setf	180,b	;volatile
   844  00009A                     
   845                           ; BSR set to: 14
   846                           ;mcc_generated_files/pin_manager.c: 89:     ANSELA = 0xFF;
   847  00009A  6992               	setf	146,b	;volatile
   848                           
   849                           ;mcc_generated_files/pin_manager.c: 94:     WPUD = 0x00;
   850  00009C  0E00               	movlw	0
   851  00009E  6FA6               	movwf	166,b	;volatile
   852                           
   853                           ;mcc_generated_files/pin_manager.c: 95:     WPUF = 0x00;
   854  0000A0  0E00               	movlw	0
   855  0000A2  6FB3               	movwf	179,b	;volatile
   856                           
   857                           ;mcc_generated_files/pin_manager.c: 96:     WPUE = 0x00;
   858  0000A4  0E00               	movlw	0
   859  0000A6  6FAE               	movwf	174,b	;volatile
   860                           
   861                           ;mcc_generated_files/pin_manager.c: 97:     WPUB = 0x00;
   862  0000A8  0E00               	movlw	0
   863  0000AA  6F99               	movwf	153,b	;volatile
   864                           
   865                           ;mcc_generated_files/pin_manager.c: 98:     WPUG = 0x00;
   866  0000AC  0E00               	movlw	0
   867  0000AE  6FBB               	movwf	187,b	;volatile
   868                           
   869                           ;mcc_generated_files/pin_manager.c: 99:     WPUA = 0x00;
   870  0000B0  0E00               	movlw	0
   871  0000B2  6F91               	movwf	145,b	;volatile
   872                           
   873                           ;mcc_generated_files/pin_manager.c: 100:     WPUC = 0x00;
   874  0000B4  0E00               	movlw	0
   875  0000B6  6FA1               	movwf	161,b	;volatile
   876                           
   877                           ;mcc_generated_files/pin_manager.c: 101:     WPUH = 0x00;
   878  0000B8  0E00               	movlw	0
   879  0000BA  6FC0               	movwf	192,b	;volatile
   880                           
   881                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
   882  0000BC  0E00               	movlw	0
   883  0000BE  6FAD               	movwf	173,b	;volatile
   884                           
   885                           ;mcc_generated_files/pin_manager.c: 107:     ODCONF = 0x00;
   886  0000C0  0E00               	movlw	0
   887  0000C2  6FB2               	movwf	178,b	;volatile
   888                           
   889                           ;mcc_generated_files/pin_manager.c: 108:     ODCONA = 0x00;
   890  0000C4  0E00               	movlw	0
   891  0000C6  6F90               	movwf	144,b	;volatile
   892                           
   893                           ;mcc_generated_files/pin_manager.c: 109:     ODCONG = 0x00;
   894  0000C8  0E00               	movlw	0
   895  0000CA  6FBA               	movwf	186,b	;volatile
   896                           
   897                           ;mcc_generated_files/pin_manager.c: 110:     ODCONB = 0x00;
   898  0000CC  0E00               	movlw	0
   899  0000CE  6F98               	movwf	152,b	;volatile
   900                           
   901                           ;mcc_generated_files/pin_manager.c: 111:     ODCONH = 0x00;
   902  0000D0  0E00               	movlw	0
   903  0000D2  6FBF               	movwf	191,b	;volatile
   904                           
   905                           ;mcc_generated_files/pin_manager.c: 112:     ODCONC = 0x00;
   906  0000D4  0E00               	movlw	0
   907  0000D6  6FA0               	movwf	160,b	;volatile
   908                           
   909                           ;mcc_generated_files/pin_manager.c: 113:     ODCOND = 0x00;
   910  0000D8  0E00               	movlw	0
   911  0000DA  6FA5               	movwf	165,b	;volatile
   912  0000DC                     
   913                           ; BSR set to: 14
   914                           ;mcc_generated_files/pin_manager.c: 118:     SLRCONA = 0xFF;
   915  0000DC  698F               	setf	143,b	;volatile
   916  0000DE                     
   917                           ; BSR set to: 14
   918                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONB = 0xFF;
   919  0000DE  6997               	setf	151,b	;volatile
   920  0000E0                     
   921                           ; BSR set to: 14
   922                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONC = 0xFF;
   923  0000E0  699F               	setf	159,b	;volatile
   924  0000E2                     
   925                           ; BSR set to: 14
   926                           ;mcc_generated_files/pin_manager.c: 121:     SLRCOND = 0xFF;
   927  0000E2  69A4               	setf	164,b	;volatile
   928  0000E4                     
   929                           ; BSR set to: 14
   930                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONE = 0xFF;
   931  0000E4  69AC               	setf	172,b	;volatile
   932  0000E6                     
   933                           ; BSR set to: 14
   934                           ;mcc_generated_files/pin_manager.c: 123:     SLRCONF = 0xFF;
   935  0000E6  69B1               	setf	177,b	;volatile
   936  0000E8                     
   937                           ; BSR set to: 14
   938                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONG = 0xFF;
   939  0000E8  69B9               	setf	185,b	;volatile
   940  0000EA                     
   941                           ; BSR set to: 14
   942                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONH = 0xFF;
   943  0000EA  69BE               	setf	190,b	;volatile
   944  0000EC                     
   945                           ; BSR set to: 14
   946                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
   947  0000EC  698E               	setf	142,b	;volatile
   948  0000EE                     
   949                           ; BSR set to: 14
   950                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
   951  0000EE  6996               	setf	150,b	;volatile
   952  0000F0                     
   953                           ; BSR set to: 14
   954                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
   955  0000F0  699E               	setf	158,b	;volatile
   956  0000F2                     
   957                           ; BSR set to: 14
   958                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
   959  0000F2  69A3               	setf	163,b	;volatile
   960  0000F4                     
   961                           ; BSR set to: 14
   962                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0xFF;
   963  0000F4  69AB               	setf	171,b	;volatile
   964  0000F6                     
   965                           ; BSR set to: 14
   966                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
   967  0000F6  69B0               	setf	176,b	;volatile
   968  0000F8                     
   969                           ; BSR set to: 14
   970                           ;mcc_generated_files/pin_manager.c: 136:     INLVLG = 0xFF;
   971  0000F8  69B8               	setf	184,b	;volatile
   972  0000FA                     
   973                           ; BSR set to: 14
   974                           ;mcc_generated_files/pin_manager.c: 137:     INLVLH = 0xFF;
   975  0000FA  69BD               	setf	189,b	;volatile
   976                           
   977                           ;mcc_generated_files/pin_manager.c: 146:     SSP1CLKPPS = 0x13;
   978  0000FC  0E13               	movlw	19
   979  0000FE  6F19               	movwf	25,b	;volatile
   980                           
   981                           ;mcc_generated_files/pin_manager.c: 147:     RC3PPS = 0x19;
   982  000100  0E19               	movlw	25
   983  000102  6F65               	movwf	101,b	;volatile
   984                           
   985                           ;mcc_generated_files/pin_manager.c: 148:     RC5PPS = 0x1A;
   986  000104  0E1A               	movlw	26
   987  000106  6F67               	movwf	103,b	;volatile
   988                           
   989                           ;mcc_generated_files/pin_manager.c: 149:     SSP1DATPPS = 0x15;
   990  000108  0E15               	movlw	21
   991  00010A  6F1A               	movwf	26,b	;volatile
   992  00010C                     
   993                           ; BSR set to: 14
   994  00010C  0012               	return		;funcret
   995  00010E                     __end_of_PIN_MANAGER_Initialize:
   996                           	callstack 0
   997                           
   998 ;; *************** function _OSCILLATOR_Initialize *****************
   999 ;; Defined at:
  1000 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_SYSTEM_Initialize
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text8
  1029  00029C                     __ptext8:
  1030                           	callstack 0
  1031  00029C                     _OSCILLATOR_Initialize:
  1032                           	callstack 28
  1033  00029C                     
  1034                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  1035  00029C  0E62               	movlw	98
  1036  00029E  010E               	movlb	14	; () banked
  1037  0002A0  6F43               	movwf	67,b	;volatile
  1038                           
  1039                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  1040  0002A2  0E00               	movlw	0
  1041  0002A4  6F45               	movwf	69,b	;volatile
  1042                           
  1043                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  1044  0002A6  0E00               	movlw	0
  1045  0002A8  6F47               	movwf	71,b	;volatile
  1046                           
  1047                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x06;
  1048  0002AA  0E06               	movlw	6
  1049  0002AC  6F49               	movwf	73,b	;volatile
  1050                           
  1051                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  1052  0002AE  0E00               	movlw	0
  1053  0002B0  6F48               	movwf	72,b	;volatile
  1054  0002B2                     
  1055                           ; BSR set to: 14
  1056  0002B2  0012               	return		;funcret
  1057  0002B4                     __end_of_OSCILLATOR_Initialize:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _INTERRUPT_Initialize *****************
  1061 ;; Defined at:
  1062 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		None
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;Total ram usage:        0 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_SYSTEM_Initialize
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text9
  1091  000364                     __ptext9:
  1092                           	callstack 0
  1093  000364                     _INTERRUPT_Initialize:
  1094                           	callstack 28
  1095  000364                     
  1096                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1097  000364  9AF2               	bcf	242,5,c	;volatile
  1098  000366  0012               	return		;funcret
  1099  000368                     __end_of_INTERRUPT_Initialize:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _MCP7940_Write *****************
  1103 ;; Defined at:
  1104 ;;		line 18 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  dev_addr        1    wreg     unsigned char 
  1107 ;;  reg_addr        1    1[COMRAM] unsigned char 
  1108 ;;  reg_data        1    2[COMRAM] unsigned char 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  dev_addr        1    5[COMRAM] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;Total ram usage:        5 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    4
  1127 ;; This function calls:
  1128 ;;		_I2C_Master_Start
  1129 ;;		_I2C_Master_Stop
  1130 ;;		_I2C_Master_Write
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text10
  1137  0001E4                     __ptext10:
  1138                           	callstack 0
  1139  0001E4                     _MCP7940_Write:
  1140                           	callstack 26
  1141                           
  1142                           ;incstack = 0
  1143                           ;MCP7940_Write@dev_addr stored from wreg
  1144  0001E4  6E16               	movwf	MCP7940_Write@dev_addr^0,c
  1145  0001E6                     
  1146                           ;main.c: 18: void MCP7940_Write (uint8_t dev_addr, uint8_t reg_addr, uint8_t reg_data);m
      +                          ain.c: 19: {;main.c: 21:     I2C_Master_Start();
  1147  0001E6  EC9A  F001         	call	_I2C_Master_Start	;wreg free
  1148                           
  1149                           ;main.c: 22:     I2C_Master_Write((dev_addr << 1) & 0xfe );
  1150  0001EA  5016               	movf	MCP7940_Write@dev_addr^0,w,c
  1151  0001EC  2416               	addwf	MCP7940_Write@dev_addr^0,w,c
  1152  0001EE  0BFE               	andlw	254
  1153  0001F0  EC22  F001         	call	_I2C_Master_Write
  1154  0001F4                     
  1155                           ;main.c: 23:     I2C_Master_Write(reg_addr);
  1156  0001F4  5012               	movf	MCP7940_Write@reg_addr^0,w,c
  1157  0001F6  EC22  F001         	call	_I2C_Master_Write
  1158  0001FA                     
  1159                           ;main.c: 24:     I2C_Master_Write(reg_data);
  1160  0001FA  5013               	movf	MCP7940_Write@reg_data^0,w,c
  1161  0001FC  EC22  F001         	call	_I2C_Master_Write
  1162  000200                     
  1163                           ;main.c: 25:     I2C_Master_Stop();
  1164  000200  ECA0  F001         	call	_I2C_Master_Stop	;wreg free
  1165  000204                     
  1166                           ;main.c: 26:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1167  000204  0E03               	movlw	3
  1168  000206  6E15               	movwf	(??_MCP7940_Write+1)^0,c
  1169  000208  0E08               	movlw	8
  1170  00020A  6E14               	movwf	??_MCP7940_Write^0,c
  1171  00020C  0E77               	movlw	119
  1172  00020E                     u197:
  1173  00020E  2EE8               	decfsz	wreg,f,c
  1174  000210  D7FE               	bra	u197
  1175  000212  2E14               	decfsz	??_MCP7940_Write^0,f,c
  1176  000214  D7FC               	bra	u197
  1177  000216  2E15               	decfsz	(??_MCP7940_Write+1)^0,f,c
  1178  000218  D7FA               	bra	u197
  1179  00021A  F000               	nop	
  1180  00021C  0012               	return		;funcret
  1181  00021E                     __end_of_MCP7940_Write:
  1182                           	callstack 0
  1183                           
  1184 ;; *************** function _MCP7940_Read *****************
  1185 ;; Defined at:
  1186 ;;		line 29 in file "main.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  dev_addr        1    wreg     unsigned char 
  1189 ;;  reg_addr        1    1[COMRAM] unsigned char 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  dev_addr        1    4[COMRAM] unsigned char 
  1192 ;;  temp            1    5[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      unsigned char 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1202 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;Total ram usage:        5 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    4
  1209 ;; This function calls:
  1210 ;;		_I2C_Master_NAK
  1211 ;;		_I2C_Master_Read
  1212 ;;		_I2C_Master_Start
  1213 ;;		_I2C_Master_Stop
  1214 ;;		_I2C_Master_Write
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text11
  1221  0001A6                     __ptext11:
  1222                           	callstack 0
  1223  0001A6                     _MCP7940_Read:
  1224                           	callstack 26
  1225                           
  1226                           ;incstack = 0
  1227                           ;MCP7940_Read@dev_addr stored from wreg
  1228  0001A6  6E15               	movwf	MCP7940_Read@dev_addr^0,c
  1229  0001A8                     
  1230                           ;main.c: 29: uint8_t MCP7940_Read (uint8_t dev_addr, uint8_t reg_addr);main.c: 30: {;mai
      +                          n.c: 31:     I2C_Master_Start();
  1231  0001A8  EC9A  F001         	call	_I2C_Master_Start	;wreg free
  1232  0001AC                     
  1233                           ;main.c: 32:     I2C_Master_Write((dev_addr << 1) | 0x01);
  1234  0001AC  80D8               	bsf	status,0,c
  1235  0001AE  3415               	rlcf	MCP7940_Read@dev_addr^0,w,c
  1236  0001B0  EC22  F001         	call	_I2C_Master_Write
  1237  0001B4                     
  1238                           ;main.c: 33:     I2C_Master_Write(reg_addr);
  1239  0001B4  5012               	movf	MCP7940_Read@reg_addr^0,w,c
  1240  0001B6  EC22  F001         	call	_I2C_Master_Write
  1241  0001BA                     
  1242                           ;main.c: 34:     uint8_t temp = I2C_Master_Read();
  1243  0001BA  EC7B  F001         	call	_I2C_Master_Read	;wreg free
  1244  0001BE  6E16               	movwf	MCP7940_Read@temp^0,c
  1245  0001C0                     
  1246                           ;main.c: 35:     I2C_Master_NAK();
  1247  0001C0  ECA5  F001         	call	_I2C_Master_NAK	;wreg free
  1248  0001C4                     
  1249                           ;main.c: 36:     I2C_Master_Stop();
  1250  0001C4  ECA0  F001         	call	_I2C_Master_Stop	;wreg free
  1251  0001C8                     
  1252                           ;main.c: 37:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1253  0001C8  0E03               	movlw	3
  1254  0001CA  6E14               	movwf	(??_MCP7940_Read+1)^0,c
  1255  0001CC  0E08               	movlw	8
  1256  0001CE  6E13               	movwf	??_MCP7940_Read^0,c
  1257  0001D0  0E77               	movlw	119
  1258  0001D2                     u207:
  1259  0001D2  2EE8               	decfsz	wreg,f,c
  1260  0001D4  D7FE               	bra	u207
  1261  0001D6  2E13               	decfsz	??_MCP7940_Read^0,f,c
  1262  0001D8  D7FC               	bra	u207
  1263  0001DA  2E14               	decfsz	(??_MCP7940_Read+1)^0,f,c
  1264  0001DC  D7FA               	bra	u207
  1265  0001DE  F000               	nop	
  1266                           
  1267                           ;main.c: 38:     return temp;
  1268  0001E0  5016               	movf	MCP7940_Read@temp^0,w,c
  1269  0001E2  0012               	return		;funcret
  1270  0001E4                     __end_of_MCP7940_Read:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _I2C_Master_Write *****************
  1274 ;; Defined at:
  1275 ;;		line 62 in file "I2C.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  data            1    wreg     unsigned char 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  data            1    0[COMRAM] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;Total ram usage:        1 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    3
  1296 ;; This function calls:
  1297 ;;		_I2C_Master_Restart
  1298 ;;		_I2C_Master_Wait
  1299 ;; This function is called by:
  1300 ;;		_MCP7940_Write
  1301 ;;		_MCP7940_Read
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text12
  1306  000244                     __ptext12:
  1307                           	callstack 0
  1308  000244                     _I2C_Master_Write:
  1309                           	callstack 26
  1310                           
  1311                           ;incstack = 0
  1312                           ;I2C_Master_Write@data stored from wreg
  1313  000244  6E11               	movwf	I2C_Master_Write@data^0,c
  1314  000246                     l315:
  1315  000246                     
  1316                           ;I2C.c: 65:     {;I2C.c: 66:         SSP1BUF = data;
  1317  000246  C011  FF91         	movff	I2C_Master_Write@data,3985	;volatile
  1318  00024A                     
  1319                           ;I2C.c: 67:         I2C_Master_Wait();
  1320  00024A  EC86  F001         	call	_I2C_Master_Wait	;wreg free
  1321  00024E                     
  1322                           ;I2C.c: 68:         if (SSP1CON2bits.ACKSTAT)
  1323  00024E  AC96               	btfss	150,6,c	;volatile
  1324  000250  EF2C  F001         	goto	u41
  1325  000254  EF2E  F001         	goto	u40
  1326  000258                     u41:
  1327  000258  EF32  F001         	goto	l320
  1328  00025C                     u40:
  1329  00025C                     
  1330                           ;I2C.c: 69:         {;I2C.c: 70:             I2C_Master_Restart();
  1331  00025C  ECAA  F001         	call	_I2C_Master_Restart	;wreg free
  1332                           
  1333                           ;I2C.c: 71:         } else break;
  1334  000260  EF23  F001         	goto	l315
  1335  000264                     l320:
  1336  000264  0012               	return		;funcret
  1337  000266                     __end_of_I2C_Master_Write:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function _I2C_Master_Restart *****************
  1341 ;; Defined at:
  1342 ;;		line 42 in file "I2C.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    2
  1363 ;; This function calls:
  1364 ;;		_I2C_Master_Wait
  1365 ;; This function is called by:
  1366 ;;		_I2C_Master_Write
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text13
  1371  000354                     __ptext13:
  1372                           	callstack 0
  1373  000354                     _I2C_Master_Restart:
  1374                           	callstack 26
  1375  000354                     
  1376                           ;I2C.c: 44:   SSP1CON2bits.RSEN = 1;
  1377  000354  8296               	bsf	150,1,c	;volatile
  1378  000356                     
  1379                           ;I2C.c: 45:   I2C_Master_Wait();
  1380  000356  EC86  F001         	call	_I2C_Master_Wait	;wreg free
  1381  00035A  0012               	return		;funcret
  1382  00035C                     __end_of_I2C_Master_Restart:
  1383                           	callstack 0
  1384                           
  1385 ;; *************** function _I2C_Master_Stop *****************
  1386 ;; Defined at:
  1387 ;;		line 48 in file "I2C.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    2
  1408 ;; This function calls:
  1409 ;;		_I2C_Master_Wait
  1410 ;; This function is called by:
  1411 ;;		_MCP7940_Write
  1412 ;;		_MCP7940_Read
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text14
  1417  000340                     __ptext14:
  1418                           	callstack 0
  1419  000340                     _I2C_Master_Stop:
  1420                           	callstack 27
  1421  000340                     
  1422                           ;I2C.c: 50:   SSP1CON2bits.PEN = 1;
  1423  000340  8496               	bsf	150,2,c	;volatile
  1424  000342                     
  1425                           ;I2C.c: 51:   I2C_Master_Wait();
  1426  000342  EC86  F001         	call	_I2C_Master_Wait	;wreg free
  1427  000346                     
  1428                           ;I2C.c: 52:   SSP1CON1bits.SSPEN = 0;
  1429  000346  9A95               	bcf	149,5,c	;volatile
  1430  000348  0012               	return		;funcret
  1431  00034A                     __end_of_I2C_Master_Stop:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _I2C_Master_Start *****************
  1435 ;; Defined at:
  1436 ;;		line 35 in file "I2C.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    2
  1457 ;; This function calls:
  1458 ;;		_I2C_Master_Idle
  1459 ;;		_I2C_Master_Wait
  1460 ;; This function is called by:
  1461 ;;		_MCP7940_Write
  1462 ;;		_MCP7940_Read
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text15
  1467  000334                     __ptext15:
  1468                           	callstack 0
  1469  000334                     _I2C_Master_Start:
  1470                           	callstack 27
  1471  000334                     
  1472                           ;I2C.c: 37:   I2C_Master_Idle();
  1473  000334  EC0F  F001         	call	_I2C_Master_Idle	;wreg free
  1474  000338                     
  1475                           ;I2C.c: 38:   SSP1CON2bits.SEN = 1;
  1476  000338  8096               	bsf	150,0,c	;volatile
  1477  00033A                     
  1478                           ;I2C.c: 39:   I2C_Master_Wait();
  1479  00033A  EC86  F001         	call	_I2C_Master_Wait	;wreg free
  1480  00033E  0012               	return		;funcret
  1481  000340                     __end_of_I2C_Master_Start:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _I2C_Master_Idle *****************
  1485 ;; Defined at:
  1486 ;;		line 24 in file "I2C.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1504 ;;Total ram usage:        1 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_I2C_Master_Start
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text16
  1515  00021E                     __ptext16:
  1516                           	callstack 0
  1517  00021E                     _I2C_Master_Idle:
  1518                           	callstack 27
  1519  00021E                     l291:
  1520  00021E  B494               	btfsc	148,2,c	;volatile
  1521  000220  EF14  F001         	goto	u21
  1522  000224  EF16  F001         	goto	u20
  1523  000228                     u21:
  1524  000228  EF0F  F001         	goto	l291
  1525  00022C                     u20:
  1526  00022C  CF96 F011          	movff	3990,??_I2C_Master_Idle	;volatile
  1527  000230  0E1F               	movlw	31
  1528  000232  1611               	andwf	??_I2C_Master_Idle^0,f,c
  1529  000234  A4D8               	btfss	status,2,c
  1530  000236  EF1F  F001         	goto	u31
  1531  00023A  EF21  F001         	goto	u30
  1532  00023E                     u31:
  1533  00023E  EF0F  F001         	goto	l291
  1534  000242                     u30:
  1535  000242  0012               	return		;funcret
  1536  000244                     __end_of_I2C_Master_Idle:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _I2C_Master_Read *****************
  1540 ;; Defined at:
  1541 ;;		line 75 in file "I2C.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      unsigned char 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_MCP7940_Read
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text17
  1570  0002F6                     __ptext17:
  1571                           	callstack 0
  1572  0002F6                     _I2C_Master_Read:
  1573                           	callstack 28
  1574  0002F6                     
  1575                           ;I2C.c: 77:   SSP1CON2bits.RCEN = 1;
  1576  0002F6  8696               	bsf	150,3,c	;volatile
  1577  0002F8                     l323:
  1578  0002F8  A094               	btfss	148,0,c	;volatile
  1579  0002FA  EF81  F001         	goto	u51
  1580  0002FE  EF83  F001         	goto	u50
  1581  000302                     u51:
  1582  000302  EF7C  F001         	goto	l323
  1583  000306                     u50:
  1584  000306                     
  1585                           ;I2C.c: 79:   SSP1CON2bits.RCEN = 0;
  1586  000306  9696               	bcf	150,3,c	;volatile
  1587  000308                     
  1588                           ;I2C.c: 80:   return SSP1BUF;
  1589  000308  5091               	movf	145,w,c	;volatile
  1590  00030A  0012               	return		;funcret
  1591  00030C                     __end_of_I2C_Master_Read:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _I2C_Master_NAK *****************
  1595 ;; Defined at:
  1596 ;;		line 55 in file "I2C.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    2
  1617 ;; This function calls:
  1618 ;;		_I2C_Master_Wait
  1619 ;; This function is called by:
  1620 ;;		_MCP7940_Read
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text18
  1625  00034A                     __ptext18:
  1626                           	callstack 0
  1627  00034A                     _I2C_Master_NAK:
  1628                           	callstack 27
  1629  00034A                     
  1630                           ;I2C.c: 57:     SSP1CON2bits.ACKDT = 1;
  1631  00034A  8A96               	bsf	150,5,c	;volatile
  1632                           
  1633                           ;I2C.c: 58:     SSP1CON2bits.ACKEN=1;
  1634  00034C  8896               	bsf	150,4,c	;volatile
  1635  00034E                     
  1636                           ;I2C.c: 59:     I2C_Master_Wait();
  1637  00034E  EC86  F001         	call	_I2C_Master_Wait	;wreg free
  1638  000352  0012               	return		;funcret
  1639  000354                     __end_of_I2C_Master_NAK:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _I2C_Master_Wait *****************
  1643 ;; Defined at:
  1644 ;;		line 29 in file "I2C.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		None
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    1
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_I2C_Master_Start
  1669 ;;		_I2C_Master_Restart
  1670 ;;		_I2C_Master_Stop
  1671 ;;		_I2C_Master_NAK
  1672 ;;		_I2C_Master_Write
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text19
  1677  00030C                     __ptext19:
  1678                           	callstack 0
  1679  00030C                     _I2C_Master_Wait:
  1680                           	callstack 27
  1681  00030C                     l297:
  1682  00030C  010E               	movlb	14	; () banked
  1683  00030E  A136               	btfss	54,0,b	;volatile
  1684  000310  EF8C  F001         	goto	u11
  1685  000314  EF8E  F001         	goto	u10
  1686  000318                     u11:
  1687  000318  EF86  F001         	goto	l297
  1688  00031C                     u10:
  1689  00031C                     
  1690                           ; BSR set to: 14
  1691                           ;I2C.c: 32:     SSP1IF=0;
  1692  00031C  9136               	bcf	54,0,b	;volatile
  1693  00031E                     
  1694                           ; BSR set to: 14
  1695  00031E  0012               	return		;funcret
  1696  000320                     __end_of_I2C_Master_Wait:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _I2C_Initialize *****************
  1700 ;; Defined at:
  1701 ;;		line 13 in file "I2C.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text20
  1730  000320                     __ptext20:
  1731                           	callstack 0
  1732  000320                     _I2C_Initialize:
  1733                           	callstack 29
  1734  000320                     
  1735                           ;I2C.c: 17:     SSP1STAT = 0x80;
  1736  000320  0E80               	movlw	128
  1737  000322  6E94               	movwf	148,c	;volatile
  1738                           
  1739                           ;I2C.c: 18:     SSP1CON1 = 0x28;
  1740  000324  0E28               	movlw	40
  1741  000326  6E95               	movwf	149,c	;volatile
  1742                           
  1743                           ;I2C.c: 19:     SSP1CON2 = 0x00;
  1744  000328  0E00               	movlw	0
  1745  00032A  6E96               	movwf	150,c	;volatile
  1746                           
  1747                           ;I2C.c: 20:     SSP1ADD = 0x19;
  1748  00032C  0E19               	movlw	25
  1749  00032E  6E92               	movwf	146,c	;volatile
  1750  000330                     
  1751                           ;I2C.c: 21:     SSP1CON1bits.SSPEN = 0;
  1752  000330  9A95               	bcf	149,5,c	;volatile
  1753  000332  0012               	return		;funcret
  1754  000334                     __end_of_I2C_Initialize:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _INTERRUPT_InterruptManager *****************
  1758 ;; Defined at:
  1759 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		Interrupt level 2
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	intcode
  1787  000008                     __pintcode:
  1788                           	callstack 0
  1789  000008                     _INTERRUPT_InterruptManager:
  1790                           	callstack 26
  1791                           
  1792                           ;incstack = 0
  1793  000008  8218               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1794  00000A                     
  1795                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  1796  00000A  ACF2               	btfss	242,6,c	;volatile
  1797  00000C  EF0A  F000         	goto	i2u9_41
  1798  000010  EF0C  F000         	goto	i2u9_40
  1799  000014                     i2u9_41:
  1800  000014  EF27  F000         	goto	i2l350
  1801  000018                     i2u9_40:
  1802  000018                     
  1803                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  1804  000018  010E               	movlb	14	; () banked
  1805  00001A  A32C               	btfss	44,1,b	;volatile
  1806  00001C  EF12  F000         	goto	i2u10_41
  1807  000020  EF14  F000         	goto	i2u10_40
  1808  000024                     i2u10_41:
  1809  000024  EF1D  F000         	goto	i2l345
  1810  000028                     i2u10_40:
  1811  000028                     
  1812                           ; BSR set to: 14
  1813                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             i2c1_driver_busCollisionISR();
  1814  000028  A336               	btfss	54,1,b	;volatile
  1815  00002A  EF19  F000         	goto	i2u11_41
  1816  00002E  EF1B  F000         	goto	i2u11_40
  1817  000032                     i2u11_41:
  1818  000032  EF1D  F000         	goto	i2l345
  1819  000036                     i2u11_40:
  1820  000036  EF27  F000         	goto	i2l350
  1821  00003A                     i2l345:
  1822                           
  1823                           ; BSR set to: 14
  1824  00003A  A12C               	btfss	44,0,b	;volatile
  1825  00003C  EF22  F000         	goto	i2u12_41
  1826  000040  EF24  F000         	goto	i2u12_40
  1827  000044                     i2u12_41:
  1828  000044  EF27  F000         	goto	i2l346
  1829  000048                     i2u12_40:
  1830  000048                     
  1831                           ; BSR set to: 14
  1832                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             i2c1_driver_i2cISR();
  1833  000048  5136               	movf	54,w,b	;volatile
  1834  00004A  EF27  F000         	goto	i2l350
  1835  00004E                     i2l346:
  1836  00004E                     i2l350:
  1837  00004E  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1838  000050  0011               	retfie		f
  1839  000052                     __end_of_INTERRUPT_InterruptManager:
  1840                           	callstack 0
  1841  0000                     
  1842                           	psect	rparam
  1843  0000                     
  1844                           	psect	temp
  1845  000018                     btemp:
  1846                           	callstack 0
  1847  000018                     	ds	1
  1848  0000                     int$flags	set	btemp
  1849  0000                     wtemp8	set	btemp+1
  1850  0000                     ttemp5	set	btemp+1
  1851  0000                     ttemp6	set	btemp+4
  1852  0000                     ttemp7	set	btemp+8
  1853                           
  1854                           	psect	idloc
  1855                           
  1856                           ;Config register IDLOC0 @ 0x200000
  1857                           ;	unspecified, using default values
  1858  200000                     	org	2097152
  1859  200000  0FFF               	dw	4095
  1860                           
  1861                           ;Config register IDLOC1 @ 0x200002
  1862                           ;	unspecified, using default values
  1863  200002                     	org	2097154
  1864  200002  0FFF               	dw	4095
  1865                           
  1866                           ;Config register IDLOC2 @ 0x200004
  1867                           ;	unspecified, using default values
  1868  200004                     	org	2097156
  1869  200004  0FFF               	dw	4095
  1870                           
  1871                           ;Config register IDLOC3 @ 0x200006
  1872                           ;	unspecified, using default values
  1873  200006                     	org	2097158
  1874  200006  0FFF               	dw	4095
  1875                           
  1876                           ;Config register IDLOC4 @ 0x200008
  1877                           ;	unspecified, using default values
  1878  200008                     	org	2097160
  1879  200008  0FFF               	dw	4095
  1880                           
  1881                           ;Config register IDLOC5 @ 0x20000A
  1882                           ;	unspecified, using default values
  1883  20000A                     	org	2097162
  1884  20000A  0FFF               	dw	4095
  1885                           
  1886                           ;Config register IDLOC6 @ 0x20000C
  1887                           ;	unspecified, using default values
  1888  20000C                     	org	2097164
  1889  20000C  0FFF               	dw	4095
  1890                           
  1891                           ;Config register IDLOC7 @ 0x20000E
  1892                           ;	unspecified, using default values
  1893  20000E                     	org	2097166
  1894  20000E  0FFF               	dw	4095
  1895                           
  1896                           	psect	config
  1897                           
  1898                           ;Config register CONFIG1L @ 0x300000
  1899                           ;	External Oscillator mode Selection bits
  1900                           ;	FEXTOSC = OFF, Oscillator not enabled
  1901                           ;	Power-up default value for COSC bits
  1902                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  1903  300000                     	org	3145728
  1904  300000  EC                 	db	236
  1905                           
  1906                           ;Config register CONFIG1H @ 0x300001
  1907                           ;	Clock Out Enable bit
  1908                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1909                           ;	Clock Switch Enable bit
  1910                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1911                           ;	Fail-Safe Clock Monitor Enable bit
  1912                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1913  300001                     	org	3145729
  1914  300001  FF                 	db	255
  1915                           
  1916                           ;Config register CONFIG2L @ 0x300002
  1917                           ;	Master Clear Enable bit
  1918                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RG5 pin function is MCLR
  1919                           ;	Power-up Timer Enable bit
  1920                           ;	PWRTE = OFF, Power up timer disabled
  1921                           ;	Low-power BOR enable bit
  1922                           ;	LPBOREN = OFF, ULPBOR disabled
  1923                           ;	Brown-out Reset Enable bits
  1924                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1925  300002                     	org	3145730
  1926  300002  FF                 	db	255
  1927                           
  1928                           ;Config register CONFIG2H @ 0x300003
  1929                           ;	Brown Out Reset Voltage selection bits
  1930                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1931                           ;	ZCD Disable bit
  1932                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1933                           ;	PPSLOCK bit One-Way Set Enable bit
  1934                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1935                           ;	Stack Full/Underflow Reset Enable bit
  1936                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1937                           ;	Debugger Enable bit
  1938                           ;	DEBUG = OFF, Background debugger disabled
  1939                           ;	Extended Instruction Set Enable bit
  1940                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1941  300003                     	org	3145731
  1942  300003  FF                 	db	255
  1943                           
  1944                           ;Config register CONFIG3L @ 0x300004
  1945                           ;	WDT Period Select bits
  1946                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1947                           ;	WDT operating mode
  1948                           ;	WDTE = OFF, WDT Disabled
  1949  300004                     	org	3145732
  1950  300004  9F                 	db	159
  1951                           
  1952                           ;Config register CONFIG3H @ 0x300005
  1953                           ;	WDT Window Select bits
  1954                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1955                           ;	WDT input clock selector
  1956                           ;	WDTCCS = SC, Software Control
  1957  300005                     	org	3145733
  1958  300005  FF                 	db	255
  1959                           
  1960                           ;Config register CONFIG4L @ 0x300006
  1961                           ;	Write Protection Block 0
  1962                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1963                           ;	Write Protection Block 1
  1964                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1965                           ;	Write Protection Block 2
  1966                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1967                           ;	Write Protection Block 3
  1968                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1969                           ;	Write Protection Block 3
  1970                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1971                           ;	Write Protection Block 3
  1972                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1973                           ;	Write Protection Block 3
  1974                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  1975                           ;	Write Protection Block 3
  1976                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1977  300006                     	org	3145734
  1978  300006  FF                 	db	255
  1979                           
  1980                           ;Config register CONFIG4H @ 0x300007
  1981                           ;	Configuration Register Write Protection bit
  1982                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  1983                           ;	Boot Block Write Protection bit
  1984                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1985                           ;	Data EEPROM Write Protection bit
  1986                           ;	WRTD = OFF, Data EEPROM not write-protected
  1987                           ;	Scanner Enable bit
  1988                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  1989                           ;	Low Voltage Programming Enable bit
  1990                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1991  300007                     	org	3145735
  1992  300007  FF                 	db	255
  1993                           
  1994                           ;Config register CONFIG5L @ 0x300008
  1995                           ;	UserNVM Program Memory Code Protection bit
  1996                           ;	CP = OFF, UserNVM code protection disabled
  1997                           ;	DataNVM Memory Code Protection bit
  1998                           ;	CPD = OFF, DataNVM code protection disabled
  1999  300008                     	org	3145736
  2000  300008  FF                 	db	255
  2001                           
  2002                           ;Config register CONFIG5H @ 0x300009
  2003                           ;	unspecified, using default values
  2004  300009                     	org	3145737
  2005  300009  FF                 	db	255
  2006                           
  2007                           ;Config register CONFIG6L @ 0x30000A
  2008                           ;	Table Read Protection Block 0
  2009                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2010                           ;	Table Read Protection Block 1
  2011                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2012                           ;	Table Read Protection Block 2
  2013                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2014                           ;	Table Read Protection Block 3
  2015                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2016                           ;	Table Read Protection Block 4
  2017                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  2018                           ;	Table Read Protection Block 5
  2019                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  2020                           ;	Table Read Protection Block 6
  2021                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  2022                           ;	Table Read Protection Block 7
  2023                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  2024  30000A                     	org	3145738
  2025  30000A  FF                 	db	255
  2026                           
  2027                           ;Config register CONFIG6H @ 0x30000B
  2028                           ;	Boot Block Table Read Protection bit
  2029                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2030  30000B                     	org	3145739
  2031  30000B  FF                 	db	255
  2032                           tosu	equ	0xFFF
  2033                           tosh	equ	0xFFE
  2034                           tosl	equ	0xFFD
  2035                           stkptr	equ	0xFFC
  2036                           pclatu	equ	0xFFB
  2037                           pclath	equ	0xFFA
  2038                           pcl	equ	0xFF9
  2039                           tblptru	equ	0xFF8
  2040                           tblptrh	equ	0xFF7
  2041                           tblptrl	equ	0xFF6
  2042                           tablat	equ	0xFF5
  2043                           prodh	equ	0xFF4
  2044                           prodl	equ	0xFF3
  2045                           indf0	equ	0xFEF
  2046                           postinc0	equ	0xFEE
  2047                           postdec0	equ	0xFED
  2048                           preinc0	equ	0xFEC
  2049                           plusw0	equ	0xFEB
  2050                           fsr0h	equ	0xFEA
  2051                           fsr0l	equ	0xFE9
  2052                           wreg	equ	0xFE8
  2053                           indf1	equ	0xFE7
  2054                           postinc1	equ	0xFE6
  2055                           postdec1	equ	0xFE5
  2056                           preinc1	equ	0xFE4
  2057                           plusw1	equ	0xFE3
  2058                           fsr1h	equ	0xFE2
  2059                           fsr1l	equ	0xFE1
  2060                           bsr	equ	0xFE0
  2061                           indf2	equ	0xFDF
  2062                           postinc2	equ	0xFDE
  2063                           postdec2	equ	0xFDD
  2064                           preinc2	equ	0xFDC
  2065                           plusw2	equ	0xFDB
  2066                           fsr2h	equ	0xFDA
  2067                           fsr2l	equ	0xFD9
  2068                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_MCP7940_Read
    _main->_MCP7940_Write
    _MCP7940_Write->_I2C_Master_Write
    _MCP7940_Read->_I2C_Master_Write
    _I2C_Master_Start->_I2C_Master_Idle

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     771
                                              6 COMRAM     1     1      0
                     _I2C_Initialize
                       _MCP7940_Read
                      _MCP7940_Write
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_StartTimer
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP7940_Write                                        5     3      2     537
                                              1 COMRAM     5     3      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _MCP7940_Read                                         5     4      1     234
                                              1 COMRAM     5     4      1
                     _I2C_Master_NAK
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      15
                                              0 COMRAM     1     1      0
                 _I2C_Master_Restart
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Restart                                   0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Idle
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Idle                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_NAK                                       0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
   _MCP7940_Read
     _I2C_Master_NAK
       _I2C_Master_Wait
     _I2C_Master_Read
     _I2C_Master_Start
       _I2C_Master_Idle
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Restart
         _I2C_Master_Wait
       _I2C_Master_Wait
   _MCP7940_Write
     _I2C_Master_Start
       _I2C_Master_Idle
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Restart
         _I2C_Master_Wait
       _I2C_Master_Wait
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_StartTimer
   _TMR0_StopTimer

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      17       1       24.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17       8        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 26 07:26:19 2021

    __end_of_TMR0_HasOverflowOccured 02CA                                   l53 021C  
                                 l63 0178                                   l56 01E2  
                                 u10 031C                                   u11 0318  
                                 u20 022C                                   u21 0228  
                                 u30 0242                                   u31 023E  
                                 u40 025C                                   u41 0258  
                                 u50 0306                                   u51 0302  
                                 u60 02C6                                   u61 02C0  
                                 u66 02C8                                   _hr 000E  
                                 _yr 000A          __size_of_I2C_Master_Restart 0008  
                                l112 0280                                  l106 02DE  
                                l300 031E                                  l109 02B2  
                                l303 033E                                  l231 010C  
                                l312 0352                                  l320 0264  
                                l306 035A                                  l323 02F8  
                                l315 0246                                  l252 0362  
                                l325 0306                                  l309 0348  
                                l326 030A                                  l255 035E  
                                l249 02F4                                  l291 021E  
                                l339 0366                                  l267 02C8  
                                l294 0242                                  l288 0332  
                                l297 030C                                  l299 031C  
                                u207 01D2                                  u170 0158  
                                u171 0154                                  u180 0188  
                                u181 0182                                  u186 018A  
                                u197 020E                                  _dat 000C  
                                _day 000D                                  _min 000F  
                                _sec 0010                                  _mon 000B  
            __size_of_PMD_Initialize 001C                                  wreg 000FE8  
                               l1201 02F6                                 l1203 0308  
                               l1211 0364                                 l1221 007A  
                               l1213 0266                                 l1301 02CA  
                               l1311 0320                                 l1207 034A  
                               l1231 0096                                 l1223 0080  
                               l1215 0056                                 l1303 02CE  
                               l1313 0330                                 l1209 034E  
                               l1241 00E0                                 l1233 0098  
                               l1225 0086                                 l1217 0076  
                               l1305 02D2                                 l1321 035C  
                               l1171 030C                                 l1251 00EA  
                               l1243 00E2                                 l1235 009A  
                               l1227 0092                                 l1219 0078  
                               l1307 02D6                                 l1315 0360  
                               l1173 021E                                 l1181 0334  
                               l1261 00F4                                 l1253 00EC  
                               l1245 00E4                                 l1237 00DC  
                               l1229 0094                                 l1309 02DA  
                               l1317 02B4                                 l1501 010E  
                               l1175 022C                                 l1183 0338  
                               l1191 024E                                 l1263 00F6  
                               l1255 00EE                                 l1247 00E6  
                               l1239 00DE                                 l1271 02E0  
                               l1511 0144                                 l1503 0116  
                               l1185 033A                                 l1177 0354  
                               l1193 025C                                 l1265 00F8  
                               l1257 00F0                                 l1249 00E8  
                               l1273 02EC                                 l1513 0158  
                               l1505 011A                                 l1195 0340  
                               l1179 0356                                 l1187 0246  
                               l1267 00FA                                 l1259 00F2  
                               l1515 0170                                 l1507 0128  
                               l1197 0342                                 l1189 024A  
                               l1269 029C                                 l1517 0174  
                               l1509 0136                                 l1199 0346  
                               l1519 019A                                 l1481 0200  
                               l1491 01BA                                 l1483 0204  
                               l1475 01E6                                 l1493 01C0  
                               l1485 01A8                                 l1477 01F4  
                               l1495 01C4                                 l1487 01AC  
                               l1479 01FA                                 l1497 01C8  
                               l1489 01B4                                 _LATA 000F79  
                               _LATB 000F7A                                 _LATC 000F7B  
                               _LATD 000F7C                                 _LATE 000F7D  
                               _LATF 000F7E                                 _LATG 000F7F  
                               _LATH 000F80                                 _PMD0 000E4C  
                               _PMD1 000E4D                                 _PMD2 000E4E  
                               _PMD3 000E4F                                 _PMD4 000E50  
                               _PMD5 000E51                                 _WPUA 000E91  
                               _WPUB 000E99                                 _WPUC 000EA1  
                               _WPUD 000EA6                                 _WPUE 000EAE  
                               _WPUF 000EB3                                 _WPUG 000EBB  
                               _WPUH 000EC0                                 _main 010E  
                    _TMR0_StartTimer 0360                                 btemp 0018  
                               start 0052                         ___param_bank 000000  
            __end_of_TMR0_Initialize 02F6                     ?_I2C_Master_Idle 0011  
                   ?_I2C_Master_Read 0011                     ?_I2C_Master_Wait 0011  
                   ?_I2C_Master_Stop 0011       __size_of_OSCILLATOR_Initialize 0018  
      __end_of_OSCILLATOR_Initialize 02B4                                ?_main 0011  
                              i2l350 004E                                i2l345 003A  
                              i2l346 004E                                _OSCEN 000E47  
                              _TMR0H 000FD4                                _TMR0L 000FD3  
                              _TRISA 000F81                                _TRISB 000F82  
                              _TRISC 000F83                                _TRISD 000F84  
                              _TRISE 000F85                                _TRISF 000F86  
                              _TRISG 000F87                                _TRISH 000F88  
               __end_of_MCP7940_Read 01E4                                ttemp5 0019  
                              ttemp6 001C                                ttemp7 0020  
                              status 000FD8                                wtemp8 0019  
                    __initialization 0282                         __end_of_main 01A6  
        ?_INTERRUPT_InterruptManager 0011                               ??_main 0017  
                      __activetblptr 000002                    ?_I2C_Master_Start 0011  
                  ?_I2C_Master_Write 0011                   ??_I2C_Master_Start 0012  
            __end_of_TMR0_StartTimer 0364                   ??_I2C_Master_Write 0011  
                             _ANSELA 000E92                               _ANSELB 000E9A  
                             _ANSELD 000EA7                               _ANSELE 000EAF  
                             _ANSELF 000EB4                               _ANSELG 000EBC  
                             _T0CON0 000FD5                               _T0CON1 000FD6  
                             _RC3PPS 000E65                               _RC5PPS 000E67  
                             _ODCONA 000E90                               _ODCONB 000E98  
                             _ODCONC 000EA0                               _ODCOND 000EA5  
                             _ODCONE 000EAD                               _ODCONF 000EB2  
                             _ODCONG 000EBA                               _ODCONH 000EBF  
                             i2l1351 0018                               i2l1353 0028  
                             i2l1357 0048                               i2l1349 000A  
                             _INLVLA 000E8E                               _INLVLB 000E96  
                             _INLVLC 000E9E                               _INLVLD 000EA3  
                             _INLVLE 000EAB                               _INLVLF 000EB0  
                             _INLVLG 000EB8                               _INLVLH 000EBD  
                             _OSCFRQ 000E49                 MCP7940_Read@dev_addr 0015  
   __size_of_TMR0_HasOverflowOccured 0016                               _SSP1IF 0071B0  
                             i2u9_40 0018                               i2u9_41 0014  
              __end_of_MCP7940_Write 021E                 MCP7940_Read@reg_addr 0012  
                   ?_TMR0_Initialize 0011                               clear_0 0288  
            __size_of_I2C_Master_NAK 000A              __size_of_I2C_Initialize 0014  
                     _PMD_Initialize 0266                               tblptru 000FF8  
      __size_of_INTERRUPT_Initialize 0004                    _SYSTEM_Initialize 02CA  
                         __accesstop 0060              __end_of__initialization 028E  
                 ?_SYSTEM_Initialize 0011                        ___rparam_used 000001  
                     __pcstackCOMRAM 0011                  ??_SYSTEM_Initialize 0011  
             __end_of_PMD_Initialize 0282                __size_of_MCP7940_Read 003E  
                   ?_TMR0_StartTimer 0011            __end_of_SYSTEM_Initialize 02E0  
                       _MCP7940_Read 01A6              __size_of_TMR0_StopTimer 0004  
         __end_of_I2C_Master_Restart 035C                      ?_PMD_Initialize 0011  
                            _OSCCON1 000E43                              _OSCCON3 000E45  
                            i2u10_40 0028                              i2u10_41 0024  
                            i2u11_40 0036                              i2u11_41 0032  
                            i2u12_40 0048                              i2u12_41 0044  
                            _OSCTUNE 000E48                              _SSP1ADD 000F92  
                            _SLRCONA 000E8F                              _SLRCONB 000E97  
                            _SLRCONC 000E9F                              _SLRCOND 000EA4  
                            _SLRCONE 000EAC                              _SLRCONF 000EB1  
                            _SLRCONG 000EB9                              _SLRCONH 000EBE  
                            _SSP1BUF 000F91                              _SSP1MSK 000F93  
            _TMR0_HasOverflowOccured 02B4                   _i2c1_driver_i2cISR 0001  
                            __Hparam 0000                              __Lparam 0000  
                     _I2C_Master_NAK 034A                              __pcinit 0282  
                     _I2C_Initialize 0320                              __ramtop 0E00  
                            __ptext0 010E                              __ptext1 035C  
                            __ptext2 0360                              __ptext3 02B4  
                            __ptext4 02CA                              __ptext5 02E0  
                            __ptext6 0266                              __ptext7 0056  
                            __ptext8 029C                              __ptext9 0364  
                            _err_flg 0007                              _err_cnt 0008  
              _OSCILLATOR_Initialize 029C             ??_PIN_MANAGER_Initialize 0011  
           __size_of_I2C_Master_Idle 0026             __size_of_I2C_Master_Read 0016  
           __size_of_I2C_Master_Wait 0014             __size_of_I2C_Master_Stop 000A  
         __size_of_SYSTEM_Initialize 0016                 end_of_initialization 028E  
                      __Lmediumconst 0000            __size_of_I2C_Master_Start 000C  
          __size_of_I2C_Master_Write 0022               __end_of_I2C_Master_NAK 0354  
                            postinc0 000FEE               __end_of_I2C_Initialize 0334  
          ??_TMR0_HasOverflowOccured 0011                       _TMR0_StopTimer 035C  
                    ?_I2C_Master_NAK 0011         __end_of_INTERRUPT_Initialize 0368  
                    ?_I2C_Initialize 0011               ?_OSCILLATOR_Initialize 0011  
                start_initialization 0282             __size_of_TMR0_Initialize 0016  
    __size_of_PIN_MANAGER_Initialize 00B8               __size_of_MCP7940_Write 003A  
                  ??_I2C_Master_Idle 0011                    ??_I2C_Master_Read 0011  
                  ??_I2C_Master_Wait 0011                    ??_I2C_Master_Stop 0011  
             __end_of_TMR0_StopTimer 0360                     ??_PMD_Initialize 0011  
              MCP7940_Write@dev_addr 0016                          __pbssCOMRAM 0001  
                 _I2C_Master_Restart 0354                MCP7940_Write@reg_addr 0012  
              MCP7940_Write@reg_data 0013                  ?_I2C_Master_Restart 0011  
                   _I2C_Master_Start 0334             __size_of_TMR0_StartTimer 0004  
                   _I2C_Master_Write 0244                      ?_TMR0_StopTimer 0011  
             _PIN_MANAGER_Initialize 0056                            __pintcode 0008  
                      _MCP7940_Write 01E4          _i2c1_driver_busCollisionISR 0004  
               ??_I2C_Master_Restart 0011                 I2C_Master_Write@data 0011  
       ??_INTERRUPT_InterruptManager 0011                 _INTERRUPT_Initialize 0364  
                  ??_TMR0_Initialize 0011                             _LATDbits 000F7C  
                           _PIE3bits 000E2C  __size_of_INTERRUPT_InterruptManager 004A  
                           _PIR0bits 000E33                             _PIR3bits 000E36  
                     ?_MCP7940_Write 0012                             _SSP1CON1 000F95  
                           _SSP1CON2 000F96                             _SSP1STAT 000F94  
              ?_INTERRUPT_Initialize 0011                     ??_I2C_Master_NAK 0011  
                   ??_I2C_Initialize 0011                             __Hrparam 0000  
                           __Lrparam 0000              ??_OSCILLATOR_Initialize 0011  
                  ??_TMR0_StartTimer 0011                     MCP7940_Read@temp 0016  
                    _I2C_Master_Idle 021E                      _I2C_Master_Read 02F6  
                         _T0CON0bits 000FD5                      _I2C_Master_Wait 030C  
                    _I2C_Master_Stop 0340                             __ptext10 01E4  
                           __ptext11 01A6                             __ptext20 0320  
                           __ptext12 0244                             __ptext13 0354  
                           __ptext14 0340                             __ptext15 0334  
                           __ptext16 021E                             __ptext17 02F6  
                           __ptext18 034A                             __ptext19 030C  
                       _SSP1CON1bits 000F95                         _SSP1CON2bits 000F96  
                      __size_of_main 0098                      ??_MCP7940_Write 0014  
                      ?_MCP7940_Read 0012                             _rtcc_buf 0009  
                           int$flags 0018   __end_of_INTERRUPT_InterruptManager 0052  
         _INTERRUPT_InterruptManager 0008                         _SSP1STATbits 000F94  
           ?_TMR0_HasOverflowOccured 0011             __end_of_I2C_Master_Start 0340  
           __end_of_I2C_Master_Write 0266                           _INTCONbits 000FF2  
             ??_INTERRUPT_Initialize 0011                             intlevel2 0000  
                   ??_TMR0_StopTimer 0011              ?_PIN_MANAGER_Initialize 0011  
                     ??_MCP7940_Read 0013              __end_of_I2C_Master_Idle 0244  
            __end_of_I2C_Master_Read 030C              __end_of_I2C_Master_Wait 0320  
            __end_of_I2C_Master_Stop 034A                           _SSP1DATPPS 000E1A  
                         _SSP1CLKPPS 000E19                      _TMR0_Initialize 02E0  
     __end_of_PIN_MANAGER_Initialize 010E  
