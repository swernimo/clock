

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 28 07:33:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 05/05/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F67K40 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PIR0bits	set	3635
    56  0000                     _INLVLH	set	3773
    57  0000                     _INLVLG	set	3768
    58  0000                     _INLVLF	set	3760
    59  0000                     _INLVLE	set	3755
    60  0000                     _INLVLD	set	3747
    61  0000                     _INLVLC	set	3742
    62  0000                     _INLVLB	set	3734
    63  0000                     _INLVLA	set	3726
    64  0000                     _SLRCONH	set	3774
    65  0000                     _SLRCONG	set	3769
    66  0000                     _SLRCONF	set	3761
    67  0000                     _SLRCONE	set	3756
    68  0000                     _SLRCOND	set	3748
    69  0000                     _SLRCONC	set	3743
    70  0000                     _SLRCONB	set	3735
    71  0000                     _SLRCONA	set	3727
    72  0000                     _ODCOND	set	3749
    73  0000                     _ODCONC	set	3744
    74  0000                     _ODCONH	set	3775
    75  0000                     _ODCONB	set	3736
    76  0000                     _ODCONG	set	3770
    77  0000                     _ODCONA	set	3728
    78  0000                     _ODCONF	set	3762
    79  0000                     _ODCONE	set	3757
    80  0000                     _WPUH	set	3776
    81  0000                     _WPUC	set	3745
    82  0000                     _WPUA	set	3729
    83  0000                     _WPUG	set	3771
    84  0000                     _WPUB	set	3737
    85  0000                     _WPUE	set	3758
    86  0000                     _WPUF	set	3763
    87  0000                     _WPUD	set	3750
    88  0000                     _ANSELA	set	3730
    89  0000                     _ANSELF	set	3764
    90  0000                     _ANSELG	set	3772
    91  0000                     _ANSELE	set	3759
    92  0000                     _ANSELB	set	3738
    93  0000                     _ANSELD	set	3751
    94  0000                     _PMD5	set	3665
    95  0000                     _PMD4	set	3664
    96  0000                     _PMD3	set	3663
    97  0000                     _PMD2	set	3662
    98  0000                     _PMD1	set	3661
    99  0000                     _PMD0	set	3660
   100  0000                     _OSCTUNE	set	3656
   101  0000                     _OSCFRQ	set	3657
   102  0000                     _OSCEN	set	3655
   103  0000                     _OSCCON3	set	3653
   104  0000                     _OSCCON1	set	3651
   105  0000                     _LATDbits	set	3964
   106  0000                     _T0CON0bits	set	4053
   107  0000                     _T0CON0	set	4053
   108  0000                     _TMR0L	set	4051
   109  0000                     _TMR0H	set	4052
   110  0000                     _T0CON1	set	4054
   111  0000                     _TRISD	set	3972
   112  0000                     _TRISC	set	3971
   113  0000                     _TRISH	set	3976
   114  0000                     _TRISB	set	3970
   115  0000                     _TRISG	set	3975
   116  0000                     _TRISA	set	3969
   117  0000                     _TRISF	set	3974
   118  0000                     _TRISE	set	3973
   119  0000                     _LATH	set	3968
   120  0000                     _LATC	set	3963
   121  0000                     _LATG	set	3967
   122  0000                     _LATB	set	3962
   123  0000                     _LATF	set	3966
   124  0000                     _LATA	set	3961
   125  0000                     _LATD	set	3964
   126  0000                     _LATE	set	3965
   127                           
   128                           ; #config settings
   129                           
   130                           	psect	cinit
   131  01FE92                     __pcinit:
   132                           	callstack 0
   133  01FE92                     start_initialization:
   134                           	callstack 0
   135  01FE92                     __initialization:
   136                           	callstack 0
   137  01FE92                     end_of_initialization:
   138                           	callstack 0
   139  01FE92                     __end_of__initialization:
   140                           	callstack 0
   141  01FE92  0100               	movlb	0
   142  01FE94  EF85  F0FF         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	cstackCOMRAM
   145  000001                     __pcstackCOMRAM:
   146                           	callstack 0
   147  000001                     ??_main:
   148                           
   149                           ; 1 bytes @ 0x0
   150  000001                     	ds	1
   151                           
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 6 in file "main.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   175 ;;Total ram usage:        1 bytes
   176 ;; Hardware stack levels required when called:    2
   177 ;; This function calls:
   178 ;;		_SYSTEM_Initialize
   179 ;;		_TMR0_HasOverflowOccured
   180 ;;		_TMR0_StartTimer
   181 ;;		_TMR0_StopTimer
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  01FF0A                     __ptext0:
   189                           	callstack 0
   190  01FF0A                     _main:
   191                           	callstack 29
   192  01FF0A                     
   193                           ;main.c: 9:     SYSTEM_Initialize();
   194  01FF0A  EC4C  F0FF         	call	_SYSTEM_Initialize	;wreg free
   195  01FF0E                     l965:
   196                           
   197                           ;main.c: 26:     TMR0_StartTimer();
   198  01FF0E  EC45  F0FF         	call	_TMR0_StartTimer	;wreg free
   199  01FF12                     l967:
   200                           
   201                           ;main.c: 28:     {;main.c: 29:         if(TMR0_HasOverflowOccured()) {
   202  01FF12  EC60  F0FF         	call	_TMR0_HasOverflowOccured	;wreg free
   203  01FF16  0900               	iorlw	0
   204  01FF18  B4D8               	btfsc	status,2,c
   205  01FF1A  EF91  F0FF         	goto	u21
   206  01FF1E  EF93  F0FF         	goto	u20
   207  01FF22                     u21:
   208  01FF22  EF89  F0FF         	goto	l967
   209  01FF26                     u20:
   210  01FF26                     
   211                           ;main.c: 30:             TMR0_StopTimer();
   212  01FF26  EC47  F0FF         	call	_TMR0_StopTimer	;wreg free
   213  01FF2A  B27C               	btfsc	124,1,c	;volatile
   214  01FF2C  EF9A  F0FF         	goto	u31
   215  01FF30  EF9D  F0FF         	goto	u30
   216  01FF34                     u31:
   217  01FF34  0E01               	movlw	1
   218  01FF36  EF9E  F0FF         	goto	u36
   219  01FF3A                     u30:
   220  01FF3A  0E00               	movlw	0
   221  01FF3C                     u36:
   222  01FF3C  0AFF               	xorlw	255
   223  01FF3E  6E01               	movwf	??_main^0,c
   224  01FF40  4601               	rlncf	??_main^0,f,c
   225  01FF42  507C               	movf	124,w,c	;volatile
   226  01FF44  1801               	xorwf	??_main^0,w,c
   227  01FF46  0BFD               	andlw	-3
   228  01FF48  1801               	xorwf	??_main^0,w,c
   229  01FF4A  6E7C               	movwf	124,c	;volatile
   230  01FF4C                     
   231                           ;main.c: 32:             PIR0bits.TMR0IF = 0;
   232  01FF4C  010E               	movlb	14	; () banked
   233  01FF4E  9B33               	bcf	51,5,b	;volatile
   234  01FF50  EF87  F0FF         	goto	l965
   235  01FF54  EF00  F000         	goto	start
   236  01FF58                     __end_of_main:
   237                           	callstack 0
   238                           
   239 ;; *************** function _TMR0_StopTimer *****************
   240 ;; Defined at:
   241 ;;		line 86 in file "mcc_generated_files/tmr0.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		None
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; This function calls:
   262 ;;		Nothing
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text1
   269  01FE8E                     __ptext1:
   270                           	callstack 0
   271  01FE8E                     _TMR0_StopTimer:
   272                           	callstack 30
   273  01FE8E                     
   274                           ;mcc_generated_files/tmr0.c: 89:     T0CON0bits.T0EN = 0;
   275  01FE8E  9ED5               	bcf	213,7,c	;volatile
   276  01FE90  0012               	return		;funcret
   277  01FE92                     __end_of_TMR0_StopTimer:
   278                           	callstack 0
   279                           
   280 ;; *************** function _TMR0_StartTimer *****************
   281 ;; Defined at:
   282 ;;		line 80 in file "mcc_generated_files/tmr0.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		None
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   300 ;;Total ram usage:        0 bytes
   301 ;; Hardware stack levels used:    1
   302 ;; This function calls:
   303 ;;		Nothing
   304 ;; This function is called by:
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text2
   310  01FE8A                     __ptext2:
   311                           	callstack 0
   312  01FE8A                     _TMR0_StartTimer:
   313                           	callstack 30
   314  01FE8A                     
   315                           ;mcc_generated_files/tmr0.c: 83:     T0CON0bits.T0EN = 1;
   316  01FE8A  8ED5               	bsf	213,7,c	;volatile
   317  01FE8C  0012               	return		;funcret
   318  01FE8E                     __end_of_TMR0_StartTimer:
   319                           	callstack 0
   320                           
   321 ;; *************** function _TMR0_HasOverflowOccured *****************
   322 ;; Defined at:
   323 ;;		line 114 in file "mcc_generated_files/tmr0.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      _Bool 
   330 ;; Registers used:
   331 ;;		wreg
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels used:    1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text3
   351  01FEC0                     __ptext3:
   352                           	callstack 0
   353  01FEC0                     _TMR0_HasOverflowOccured:
   354                           	callstack 30
   355  01FEC0                     
   356                           ;mcc_generated_files/tmr0.c: 117:     return(PIR0bits.TMR0IF);
   357  01FEC0  010E               	movlb	14	; () banked
   358  01FEC2  BB33               	btfsc	51,5,b	;volatile
   359  01FEC4  EF66  F0FF         	goto	u11
   360  01FEC8  EF69  F0FF         	goto	u10
   361  01FECC                     u11:
   362  01FECC  0E01               	movlw	1
   363  01FECE  EF6A  F0FF         	goto	u16
   364  01FED2                     u10:
   365  01FED2  0E00               	movlw	0
   366  01FED4                     u16:
   367  01FED4                     
   368                           ; BSR set to: 14
   369  01FED4  0012               	return		;funcret
   370  01FED6                     __end_of_TMR0_HasOverflowOccured:
   371                           	callstack 0
   372                           
   373 ;; *************** function _SYSTEM_Initialize *****************
   374 ;; Defined at:
   375 ;;		line 50 in file "mcc_generated_files/mcc.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    1
   396 ;; This function calls:
   397 ;;		_OSCILLATOR_Initialize
   398 ;;		_PIN_MANAGER_Initialize
   399 ;;		_PMD_Initialize
   400 ;;		_TMR0_Initialize
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text4
   407  01FE98                     __ptext4:
   408                           	callstack 0
   409  01FE98                     _SYSTEM_Initialize:
   410                           	callstack 29
   411  01FE98                     
   412                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   413  01FE98  EC77  F0FF         	call	_PMD_Initialize	;wreg free
   414                           
   415                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   416  01FE9C  ECAC  F0FF         	call	_PIN_MANAGER_Initialize	;wreg free
   417                           
   418                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   419  01FEA0  EC6B  F0FF         	call	_OSCILLATOR_Initialize	;wreg free
   420                           
   421                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
   422  01FEA4  EC55  F0FF         	call	_TMR0_Initialize	;wreg free
   423  01FEA8  0012               	return		;funcret
   424  01FEAA                     __end_of_SYSTEM_Initialize:
   425                           	callstack 0
   426                           
   427 ;; *************** function _TMR0_Initialize *****************
   428 ;; Defined at:
   429 ;;		line 60 in file "mcc_generated_files/tmr0.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels used:    1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_SYSTEM_Initialize
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text5
   457  01FEAA                     __ptext5:
   458                           	callstack 0
   459  01FEAA                     _TMR0_Initialize:
   460                           	callstack 29
   461  01FEAA                     
   462                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x4C;
   463  01FEAA  0E4C               	movlw	76
   464  01FEAC  6ED6               	movwf	214,c	;volatile
   465                           
   466                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x8B;
   467  01FEAE  0E8B               	movlw	139
   468  01FEB0  6ED4               	movwf	212,c	;volatile
   469                           
   470                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
   471  01FEB2  0E00               	movlw	0
   472  01FEB4  6ED3               	movwf	211,c	;volatile
   473  01FEB6                     
   474                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
   475  01FEB6  010E               	movlb	14	; () banked
   476  01FEB8  9B33               	bcf	51,5,b	;volatile
   477                           
   478                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x86;
   479  01FEBA  0E86               	movlw	134
   480  01FEBC  6ED5               	movwf	213,c	;volatile
   481  01FEBE                     
   482                           ; BSR set to: 14
   483  01FEBE  0012               	return		;funcret
   484  01FEC0                     __end_of_TMR0_Initialize:
   485                           	callstack 0
   486                           
   487 ;; *************** function _PMD_Initialize *****************
   488 ;; Defined at:
   489 ;;		line 72 in file "mcc_generated_files/mcc.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_SYSTEM_Initialize
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text6
   517  01FEEE                     __ptext6:
   518                           	callstack 0
   519  01FEEE                     _PMD_Initialize:
   520                           	callstack 29
   521  01FEEE                     
   522                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
   523  01FEEE  0E00               	movlw	0
   524  01FEF0  010E               	movlb	14	; () banked
   525  01FEF2  6F4C               	movwf	76,b	;volatile
   526                           
   527                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
   528  01FEF4  0E00               	movlw	0
   529  01FEF6  6F4D               	movwf	77,b	;volatile
   530                           
   531                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
   532  01FEF8  0E00               	movlw	0
   533  01FEFA  6F4E               	movwf	78,b	;volatile
   534                           
   535                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
   536  01FEFC  0E00               	movlw	0
   537  01FEFE  6F4F               	movwf	79,b	;volatile
   538                           
   539                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
   540  01FF00  0E00               	movlw	0
   541  01FF02  6F50               	movwf	80,b	;volatile
   542                           
   543                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
   544  01FF04  0E00               	movlw	0
   545  01FF06  6F51               	movwf	81,b	;volatile
   546  01FF08                     
   547                           ; BSR set to: 14
   548  01FF08  0012               	return		;funcret
   549  01FF0A                     __end_of_PMD_Initialize:
   550                           	callstack 0
   551                           
   552 ;; *************** function _PIN_MANAGER_Initialize *****************
   553 ;; Defined at:
   554 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_SYSTEM_Initialize
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text7
   582  01FF58                     __ptext7:
   583                           	callstack 0
   584  01FF58                     _PIN_MANAGER_Initialize:
   585                           	callstack 29
   586  01FF58                     
   587                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   588  01FF58  0E00               	movlw	0
   589  01FF5A  6E7D               	movwf	125,c	;volatile
   590                           
   591                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
   592  01FF5C  0E02               	movlw	2
   593  01FF5E  6E7C               	movwf	124,c	;volatile
   594                           
   595                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   596  01FF60  0E00               	movlw	0
   597  01FF62  6E79               	movwf	121,c	;volatile
   598                           
   599                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
   600  01FF64  0E00               	movlw	0
   601  01FF66  6E7E               	movwf	126,c	;volatile
   602                           
   603                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
   604  01FF68  0E00               	movlw	0
   605  01FF6A  6E7A               	movwf	122,c	;volatile
   606                           
   607                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
   608  01FF6C  0E00               	movlw	0
   609  01FF6E  6E7F               	movwf	127,c	;volatile
   610                           
   611                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x80;
   612  01FF70  0E80               	movlw	128
   613  01FF72  6E7B               	movwf	123,c	;volatile
   614                           
   615                           ;mcc_generated_files/pin_manager.c: 67:     LATH = 0x00;
   616  01FF74  0E00               	movlw	0
   617  01FF76  6E80               	movwf	128,c	;volatile
   618  01FF78                     
   619                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0xFF;
   620  01FF78  6885               	setf	133,c	;volatile
   621  01FF7A                     
   622                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
   623  01FF7A  6886               	setf	134,c	;volatile
   624  01FF7C                     
   625                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
   626  01FF7C  6881               	setf	129,c	;volatile
   627                           
   628                           ;mcc_generated_files/pin_manager.c: 75:     TRISG = 0xDF;
   629  01FF7E  0EDF               	movlw	223
   630  01FF80  6E87               	movwf	135,c	;volatile
   631  01FF82                     
   632                           ;mcc_generated_files/pin_manager.c: 76:     TRISB = 0xFF;
   633  01FF82  6882               	setf	130,c	;volatile
   634                           
   635                           ;mcc_generated_files/pin_manager.c: 77:     TRISH = 0x0F;
   636  01FF84  0E0F               	movlw	15
   637  01FF86  6E88               	movwf	136,c	;volatile
   638  01FF88                     
   639                           ;mcc_generated_files/pin_manager.c: 78:     TRISC = 0xFF;
   640  01FF88  6883               	setf	131,c	;volatile
   641                           
   642                           ;mcc_generated_files/pin_manager.c: 79:     TRISD = 0xFD;
   643  01FF8A  0EFD               	movlw	253
   644  01FF8C  6E84               	movwf	132,c	;volatile
   645                           
   646                           ;mcc_generated_files/pin_manager.c: 84:     ANSELD = 0xFD;
   647  01FF8E  0EFD               	movlw	253
   648  01FF90  010E               	movlb	14	; () banked
   649  01FF92  6FA7               	movwf	167,b	;volatile
   650  01FF94                     
   651                           ; BSR set to: 14
   652                           ;mcc_generated_files/pin_manager.c: 85:     ANSELB = 0xFF;
   653  01FF94  699A               	setf	154,b	;volatile
   654  01FF96                     
   655                           ; BSR set to: 14
   656                           ;mcc_generated_files/pin_manager.c: 86:     ANSELE = 0xFF;
   657  01FF96  69AF               	setf	175,b	;volatile
   658  01FF98                     
   659                           ; BSR set to: 14
   660                           ;mcc_generated_files/pin_manager.c: 87:     ANSELG = 0xFF;
   661  01FF98  69BC               	setf	188,b	;volatile
   662  01FF9A                     
   663                           ; BSR set to: 14
   664                           ;mcc_generated_files/pin_manager.c: 88:     ANSELF = 0xFF;
   665  01FF9A  69B4               	setf	180,b	;volatile
   666  01FF9C                     
   667                           ; BSR set to: 14
   668                           ;mcc_generated_files/pin_manager.c: 89:     ANSELA = 0xFF;
   669  01FF9C  6992               	setf	146,b	;volatile
   670                           
   671                           ;mcc_generated_files/pin_manager.c: 94:     WPUD = 0x00;
   672  01FF9E  0E00               	movlw	0
   673  01FFA0  6FA6               	movwf	166,b	;volatile
   674                           
   675                           ;mcc_generated_files/pin_manager.c: 95:     WPUF = 0x00;
   676  01FFA2  0E00               	movlw	0
   677  01FFA4  6FB3               	movwf	179,b	;volatile
   678                           
   679                           ;mcc_generated_files/pin_manager.c: 96:     WPUE = 0x00;
   680  01FFA6  0E00               	movlw	0
   681  01FFA8  6FAE               	movwf	174,b	;volatile
   682                           
   683                           ;mcc_generated_files/pin_manager.c: 97:     WPUB = 0x00;
   684  01FFAA  0E00               	movlw	0
   685  01FFAC  6F99               	movwf	153,b	;volatile
   686                           
   687                           ;mcc_generated_files/pin_manager.c: 98:     WPUG = 0x00;
   688  01FFAE  0E00               	movlw	0
   689  01FFB0  6FBB               	movwf	187,b	;volatile
   690                           
   691                           ;mcc_generated_files/pin_manager.c: 99:     WPUA = 0x00;
   692  01FFB2  0E00               	movlw	0
   693  01FFB4  6F91               	movwf	145,b	;volatile
   694                           
   695                           ;mcc_generated_files/pin_manager.c: 100:     WPUC = 0x00;
   696  01FFB6  0E00               	movlw	0
   697  01FFB8  6FA1               	movwf	161,b	;volatile
   698                           
   699                           ;mcc_generated_files/pin_manager.c: 101:     WPUH = 0x00;
   700  01FFBA  0E00               	movlw	0
   701  01FFBC  6FC0               	movwf	192,b	;volatile
   702                           
   703                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
   704  01FFBE  0E00               	movlw	0
   705  01FFC0  6FAD               	movwf	173,b	;volatile
   706                           
   707                           ;mcc_generated_files/pin_manager.c: 107:     ODCONF = 0x00;
   708  01FFC2  0E00               	movlw	0
   709  01FFC4  6FB2               	movwf	178,b	;volatile
   710                           
   711                           ;mcc_generated_files/pin_manager.c: 108:     ODCONA = 0x00;
   712  01FFC6  0E00               	movlw	0
   713  01FFC8  6F90               	movwf	144,b	;volatile
   714                           
   715                           ;mcc_generated_files/pin_manager.c: 109:     ODCONG = 0x00;
   716  01FFCA  0E00               	movlw	0
   717  01FFCC  6FBA               	movwf	186,b	;volatile
   718                           
   719                           ;mcc_generated_files/pin_manager.c: 110:     ODCONB = 0x00;
   720  01FFCE  0E00               	movlw	0
   721  01FFD0  6F98               	movwf	152,b	;volatile
   722                           
   723                           ;mcc_generated_files/pin_manager.c: 111:     ODCONH = 0x00;
   724  01FFD2  0E00               	movlw	0
   725  01FFD4  6FBF               	movwf	191,b	;volatile
   726                           
   727                           ;mcc_generated_files/pin_manager.c: 112:     ODCONC = 0x00;
   728  01FFD6  0E00               	movlw	0
   729  01FFD8  6FA0               	movwf	160,b	;volatile
   730                           
   731                           ;mcc_generated_files/pin_manager.c: 113:     ODCOND = 0x00;
   732  01FFDA  0E00               	movlw	0
   733  01FFDC  6FA5               	movwf	165,b	;volatile
   734  01FFDE                     
   735                           ; BSR set to: 14
   736                           ;mcc_generated_files/pin_manager.c: 118:     SLRCONA = 0xFF;
   737  01FFDE  698F               	setf	143,b	;volatile
   738  01FFE0                     
   739                           ; BSR set to: 14
   740                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONB = 0xFF;
   741  01FFE0  6997               	setf	151,b	;volatile
   742  01FFE2                     
   743                           ; BSR set to: 14
   744                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONC = 0xFF;
   745  01FFE2  699F               	setf	159,b	;volatile
   746  01FFE4                     
   747                           ; BSR set to: 14
   748                           ;mcc_generated_files/pin_manager.c: 121:     SLRCOND = 0xFF;
   749  01FFE4  69A4               	setf	164,b	;volatile
   750  01FFE6                     
   751                           ; BSR set to: 14
   752                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONE = 0xFF;
   753  01FFE6  69AC               	setf	172,b	;volatile
   754  01FFE8                     
   755                           ; BSR set to: 14
   756                           ;mcc_generated_files/pin_manager.c: 123:     SLRCONF = 0xFF;
   757  01FFE8  69B1               	setf	177,b	;volatile
   758  01FFEA                     
   759                           ; BSR set to: 14
   760                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONG = 0xFF;
   761  01FFEA  69B9               	setf	185,b	;volatile
   762  01FFEC                     
   763                           ; BSR set to: 14
   764                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONH = 0xFF;
   765  01FFEC  69BE               	setf	190,b	;volatile
   766  01FFEE                     
   767                           ; BSR set to: 14
   768                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
   769  01FFEE  698E               	setf	142,b	;volatile
   770  01FFF0                     
   771                           ; BSR set to: 14
   772                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
   773  01FFF0  6996               	setf	150,b	;volatile
   774  01FFF2                     
   775                           ; BSR set to: 14
   776                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
   777  01FFF2  699E               	setf	158,b	;volatile
   778  01FFF4                     
   779                           ; BSR set to: 14
   780                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
   781  01FFF4  69A3               	setf	163,b	;volatile
   782  01FFF6                     
   783                           ; BSR set to: 14
   784                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0xFF;
   785  01FFF6  69AB               	setf	171,b	;volatile
   786  01FFF8                     
   787                           ; BSR set to: 14
   788                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
   789  01FFF8  69B0               	setf	176,b	;volatile
   790  01FFFA                     
   791                           ; BSR set to: 14
   792                           ;mcc_generated_files/pin_manager.c: 136:     INLVLG = 0xFF;
   793  01FFFA  69B8               	setf	184,b	;volatile
   794  01FFFC                     
   795                           ; BSR set to: 14
   796                           ;mcc_generated_files/pin_manager.c: 137:     INLVLH = 0xFF;
   797  01FFFC  69BD               	setf	189,b	;volatile
   798  01FFFE                     
   799                           ; BSR set to: 14
   800  01FFFE  0012               	return		;funcret
   801  020000                     __end_of_PIN_MANAGER_Initialize:
   802                           	callstack 0
   803                           
   804 ;; *************** function _OSCILLATOR_Initialize *****************
   805 ;; Defined at:
   806 ;;		line 58 in file "mcc_generated_files/mcc.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_SYSTEM_Initialize
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text8
   834  01FED6                     __ptext8:
   835                           	callstack 0
   836  01FED6                     _OSCILLATOR_Initialize:
   837                           	callstack 29
   838  01FED6                     
   839                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x62;
   840  01FED6  0E62               	movlw	98
   841  01FED8  010E               	movlb	14	; () banked
   842  01FEDA  6F43               	movwf	67,b	;volatile
   843                           
   844                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
   845  01FEDC  0E00               	movlw	0
   846  01FEDE  6F45               	movwf	69,b	;volatile
   847                           
   848                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
   849  01FEE0  0E00               	movlw	0
   850  01FEE2  6F47               	movwf	71,b	;volatile
   851                           
   852                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x06;
   853  01FEE4  0E06               	movlw	6
   854  01FEE6  6F49               	movwf	73,b	;volatile
   855                           
   856                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
   857  01FEE8  0E00               	movlw	0
   858  01FEEA  6F48               	movwf	72,b	;volatile
   859  01FEEC                     
   860                           ; BSR set to: 14
   861  01FEEC  0012               	return		;funcret
   862  01FEEE                     __end_of_OSCILLATOR_Initialize:
   863                           	callstack 0
   864  0000                     
   865                           	psect	rparam
   866  0000                     
   867                           	psect	idloc
   868                           
   869                           ;Config register IDLOC0 @ 0x200000
   870                           ;	unspecified, using default values
   871  200000                     	org	2097152
   872  200000  0FFF               	dw	4095
   873                           
   874                           ;Config register IDLOC1 @ 0x200002
   875                           ;	unspecified, using default values
   876  200002                     	org	2097154
   877  200002  0FFF               	dw	4095
   878                           
   879                           ;Config register IDLOC2 @ 0x200004
   880                           ;	unspecified, using default values
   881  200004                     	org	2097156
   882  200004  0FFF               	dw	4095
   883                           
   884                           ;Config register IDLOC3 @ 0x200006
   885                           ;	unspecified, using default values
   886  200006                     	org	2097158
   887  200006  0FFF               	dw	4095
   888                           
   889                           ;Config register IDLOC4 @ 0x200008
   890                           ;	unspecified, using default values
   891  200008                     	org	2097160
   892  200008  0FFF               	dw	4095
   893                           
   894                           ;Config register IDLOC5 @ 0x20000A
   895                           ;	unspecified, using default values
   896  20000A                     	org	2097162
   897  20000A  0FFF               	dw	4095
   898                           
   899                           ;Config register IDLOC6 @ 0x20000C
   900                           ;	unspecified, using default values
   901  20000C                     	org	2097164
   902  20000C  0FFF               	dw	4095
   903                           
   904                           ;Config register IDLOC7 @ 0x20000E
   905                           ;	unspecified, using default values
   906  20000E                     	org	2097166
   907  20000E  0FFF               	dw	4095
   908                           
   909                           	psect	config
   910                           
   911                           ;Config register CONFIG1L @ 0x300000
   912                           ;	External Oscillator mode Selection bits
   913                           ;	FEXTOSC = OFF, Oscillator not enabled
   914                           ;	Power-up default value for COSC bits
   915                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
   916  300000                     	org	3145728
   917  300000  EC                 	db	236
   918                           
   919                           ;Config register CONFIG1H @ 0x300001
   920                           ;	Clock Out Enable bit
   921                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   922                           ;	Clock Switch Enable bit
   923                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   924                           ;	Fail-Safe Clock Monitor Enable bit
   925                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   926  300001                     	org	3145729
   927  300001  FF                 	db	255
   928                           
   929                           ;Config register CONFIG2L @ 0x300002
   930                           ;	Master Clear Enable bit
   931                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RG5 pin function is MCLR
   932                           ;	Power-up Timer Enable bit
   933                           ;	PWRTE = OFF, Power up timer disabled
   934                           ;	Low-power BOR enable bit
   935                           ;	LPBOREN = OFF, ULPBOR disabled
   936                           ;	Brown-out Reset Enable bits
   937                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   938  300002                     	org	3145730
   939  300002  FF                 	db	255
   940                           
   941                           ;Config register CONFIG2H @ 0x300003
   942                           ;	Brown Out Reset Voltage selection bits
   943                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   944                           ;	ZCD Disable bit
   945                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   946                           ;	PPSLOCK bit One-Way Set Enable bit
   947                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   948                           ;	Stack Full/Underflow Reset Enable bit
   949                           ;	STVREN = ON, Stack full/underflow will cause Reset
   950                           ;	Debugger Enable bit
   951                           ;	DEBUG = OFF, Background debugger disabled
   952                           ;	Extended Instruction Set Enable bit
   953                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   954  300003                     	org	3145731
   955  300003  FF                 	db	255
   956                           
   957                           ;Config register CONFIG3L @ 0x300004
   958                           ;	WDT Period Select bits
   959                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   960                           ;	WDT operating mode
   961                           ;	WDTE = OFF, WDT Disabled
   962  300004                     	org	3145732
   963  300004  9F                 	db	159
   964                           
   965                           ;Config register CONFIG3H @ 0x300005
   966                           ;	WDT Window Select bits
   967                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   968                           ;	WDT input clock selector
   969                           ;	WDTCCS = SC, Software Control
   970  300005                     	org	3145733
   971  300005  FF                 	db	255
   972                           
   973                           ;Config register CONFIG4L @ 0x300006
   974                           ;	Write Protection Block 0
   975                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   976                           ;	Write Protection Block 1
   977                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   978                           ;	Write Protection Block 2
   979                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   980                           ;	Write Protection Block 3
   981                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   982                           ;	Write Protection Block 3
   983                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
   984                           ;	Write Protection Block 3
   985                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
   986                           ;	Write Protection Block 3
   987                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
   988                           ;	Write Protection Block 3
   989                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
   990  300006                     	org	3145734
   991  300006  FF                 	db	255
   992                           
   993                           ;Config register CONFIG4H @ 0x300007
   994                           ;	Configuration Register Write Protection bit
   995                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
   996                           ;	Boot Block Write Protection bit
   997                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   998                           ;	Data EEPROM Write Protection bit
   999                           ;	WRTD = OFF, Data EEPROM not write-protected
  1000                           ;	Scanner Enable bit
  1001                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  1002                           ;	Low Voltage Programming Enable bit
  1003                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1004  300007                     	org	3145735
  1005  300007  FF                 	db	255
  1006                           
  1007                           ;Config register CONFIG5L @ 0x300008
  1008                           ;	UserNVM Program Memory Code Protection bit
  1009                           ;	CP = OFF, UserNVM code protection disabled
  1010                           ;	DataNVM Memory Code Protection bit
  1011                           ;	CPD = OFF, DataNVM code protection disabled
  1012  300008                     	org	3145736
  1013  300008  FF                 	db	255
  1014                           
  1015                           ;Config register CONFIG5H @ 0x300009
  1016                           ;	unspecified, using default values
  1017  300009                     	org	3145737
  1018  300009  FF                 	db	255
  1019                           
  1020                           ;Config register CONFIG6L @ 0x30000A
  1021                           ;	Table Read Protection Block 0
  1022                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1023                           ;	Table Read Protection Block 1
  1024                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1025                           ;	Table Read Protection Block 2
  1026                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1027                           ;	Table Read Protection Block 3
  1028                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1029                           ;	Table Read Protection Block 4
  1030                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1031                           ;	Table Read Protection Block 5
  1032                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1033                           ;	Table Read Protection Block 6
  1034                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1035                           ;	Table Read Protection Block 7
  1036                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1037  30000A                     	org	3145738
  1038  30000A  FF                 	db	255
  1039                           
  1040                           ;Config register CONFIG6H @ 0x30000B
  1041                           ;	Boot Block Table Read Protection bit
  1042                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1043  30000B                     	org	3145739
  1044  30000B  FF                 	db	255
  1045                           tosu	equ	0xFFF
  1046                           tosh	equ	0xFFE
  1047                           tosl	equ	0xFFD
  1048                           stkptr	equ	0xFFC
  1049                           pclatu	equ	0xFFB
  1050                           pclath	equ	0xFFA
  1051                           pcl	equ	0xFF9
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           prodh	equ	0xFF4
  1057                           prodl	equ	0xFF3
  1058                           indf0	equ	0xFEF
  1059                           postinc0	equ	0xFEE
  1060                           postdec0	equ	0xFED
  1061                           preinc0	equ	0xFEC
  1062                           plusw0	equ	0xFEB
  1063                           fsr0h	equ	0xFEA
  1064                           fsr0l	equ	0xFE9
  1065                           wreg	equ	0xFE8
  1066                           indf1	equ	0xFE7
  1067                           postinc1	equ	0xFE6
  1068                           postdec1	equ	0xFE5
  1069                           preinc1	equ	0xFE4
  1070                           plusw1	equ	0xFE3
  1071                           fsr1h	equ	0xFE2
  1072                           fsr1l	equ	0xFE1
  1073                           bsr	equ	0xFE0
  1074                           indf2	equ	0xFDF
  1075                           postinc2	equ	0xFDE
  1076                           postdec2	equ	0xFDD
  1077                           preinc2	equ	0xFDC
  1078                           plusw2	equ	0xFDB
  1079                           fsr2h	equ	0xFDA
  1080                           fsr2l	equ	0xFD9
  1081                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_StartTimer
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_StartTimer
   _TMR0_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      1       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 28 07:33:06 2021

 __end_of_TMR0_HasOverflowOccured FED6                                l33 FEA8  
                              l36 FEEC                                l39 FF08  
                              u10 FED2                                u11 FECC  
                              u20 FF26                                u21 FF22  
                              u30 FF3A                                u31 FF34  
                              u16 FED4                                u36 FF3C  
                             l150 FFFE                               l171 FE8C  
                             l174 FE90                               l168 FEBE  
                             l186 FED4                               l901 FF96  
                             l911 FFE0                               l903 FF98  
                             l921 FFEA                               l913 FFE2  
                             l905 FF9A                               l931 FFF4  
                             l923 FFEC                               l915 FFE4  
                             l907 FF9C                               l941 FED6  
                             l933 FFF6                               l925 FFEE  
                             l917 FFE6                               l909 FFDE  
                             l935 FFF8                               l927 FFF0  
                             l919 FFE8                               l943 FEAA  
                             l951 FE8E                               l937 FFFA  
                             l929 FFF2                               l945 FEB6  
                             l953 FEC0                               l939 FFFC  
                             l891 FF7A                               l947 FE98  
                             l971 FF2A                               l963 FF0A  
                             l893 FF7C                               l885 FEEE  
                             l949 FE8A                               l973 FF4C  
                             l965 FF0E                               l895 FF82  
                             l887 FF58                               l967 FF12  
                             l897 FF88                               l889 FF78  
                             l969 FF26                               l899 FF94  
         __size_of_PMD_Initialize 001C                              _LATA 000F79  
                            _LATB 000F7A                              _LATC 000F7B  
                            _LATD 000F7C                              _LATE 000F7D  
                            _LATF 000F7E                              _LATG 000F7F  
                            _LATH 000F80                              _PMD0 000E4C  
                            _PMD1 000E4D                              _PMD2 000E4E  
                            _PMD3 000E4F                              _PMD4 000E50  
                            _PMD5 000E51                              _WPUA 000E91  
                            _WPUB 000E99                              _WPUC 000EA1  
                            _WPUD 000EA6                              _WPUE 000EAE  
                            _WPUF 000EB3                              _WPUG 000EBB  
                            _WPUH 000EC0                              _main FF0A  
                 _TMR0_StartTimer FE8A                              start 0000  
                    ___param_bank 000000           __end_of_TMR0_Initialize FEC0  
  __size_of_OSCILLATOR_Initialize 0018     __end_of_OSCILLATOR_Initialize FEEE  
                           ?_main 0001                             _OSCEN 000E47  
                           _TMR0H 000FD4                             _TMR0L 000FD3  
                           _TRISA 000F81                             _TRISB 000F82  
                           _TRISC 000F83                             _TRISD 000F84  
                           _TRISE 000F85                             _TRISF 000F86  
                           _TRISG 000F87                             _TRISH 000F88  
                           status 000FD8                   __initialization FE92  
                    __end_of_main FF58                            ??_main 0001  
                   __activetblptr 000000           __end_of_TMR0_StartTimer FE8E  
                          _ANSELA 000E92                            _ANSELB 000E9A  
                          _ANSELD 000EA7                            _ANSELE 000EAF  
                          _ANSELF 000EB4                            _ANSELG 000EBC  
                          _T0CON0 000FD5                            _T0CON1 000FD6  
                          _ODCONA 000E90                            _ODCONB 000E98  
                          _ODCONC 000EA0                            _ODCOND 000EA5  
                          _ODCONE 000EAD                            _ODCONF 000EB2  
                          _ODCONG 000EBA                            _ODCONH 000EBF  
                          _INLVLA 000E8E                            _INLVLB 000E96  
                          _INLVLC 000E9E                            _INLVLD 000EA3  
                          _INLVLE 000EAB                            _INLVLF 000EB0  
                          _INLVLG 000EB8                            _INLVLH 000EBD  
                          _OSCFRQ 000E49  __size_of_TMR0_HasOverflowOccured 0016  
                ?_TMR0_Initialize 0001                    _PMD_Initialize FEEE  
               _SYSTEM_Initialize FE98                        __accesstop 0060  
         __end_of__initialization FE92                ?_SYSTEM_Initialize 0001  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
             ??_SYSTEM_Initialize 0001            __end_of_PMD_Initialize FF0A  
                ?_TMR0_StartTimer 0001         __end_of_SYSTEM_Initialize FEAA  
         __size_of_TMR0_StopTimer 0004                   ?_PMD_Initialize 0001  
                         _OSCCON1 000E43                           _OSCCON3 000E45  
                         _OSCTUNE 000E48                           _SLRCONA 000E8F  
                         _SLRCONB 000E97                           _SLRCONC 000E9F  
                         _SLRCOND 000EA4                           _SLRCONE 000EAC  
                         _SLRCONF 000EB1                           _SLRCONG 000EB9  
                         _SLRCONH 000EBE           _TMR0_HasOverflowOccured FEC0  
                         __Hparam 0000                           __Lparam 0000  
                         __pcinit FE92                           __ramtop 0E00  
                         __ptext0 FF0A                           __ptext1 FE8E  
                         __ptext2 FE8A                           __ptext3 FEC0  
                         __ptext4 FE98                           __ptext5 FEAA  
                         __ptext6 FEEE                           __ptext7 FF58  
                         __ptext8 FED6             _OSCILLATOR_Initialize FED6  
        ??_PIN_MANAGER_Initialize 0001        __size_of_SYSTEM_Initialize 0012  
            end_of_initialization FE92         ??_TMR0_HasOverflowOccured 0001  
                  _TMR0_StopTimer FE8E            ?_OSCILLATOR_Initialize 0001  
             start_initialization FE92          __size_of_TMR0_Initialize 0016  
 __size_of_PIN_MANAGER_Initialize 00A8            __end_of_TMR0_StopTimer FE92  
                ??_PMD_Initialize 0001          __size_of_TMR0_StartTimer 0004  
                 ?_TMR0_StopTimer 0001            _PIN_MANAGER_Initialize FF58  
               ??_TMR0_Initialize 0001                          _LATDbits 000F7C  
                        _PIR0bits 000E33                          __Hrparam 0000  
                        __Lrparam 0000           ??_OSCILLATOR_Initialize 0001  
               ??_TMR0_StartTimer 0001                        _T0CON0bits 000FD5  
                   __size_of_main 004E          ?_TMR0_HasOverflowOccured 0001  
                ??_TMR0_StopTimer 0001           ?_PIN_MANAGER_Initialize 0001  
                 _TMR0_Initialize FEAA    __end_of_PIN_MANAGER_Initialize 0000  
